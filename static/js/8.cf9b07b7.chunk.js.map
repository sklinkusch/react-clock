{"version":3,"sources":["components/ClockCities.js"],"names":["getSunTime","city","lon","now","Date","toLocaleTimeString","timeZone","split","slice","join","ClockCities","uniqueCities","length","style","width","paddingLeft","paddingRight","getPermLocale","sort","a","b","asciiname","toLowerCase","country","adminCode","map","index","display","flexDirection","justifyContent","alignItems","flexBasis","textAlign","code","title","countries","navigator","language","position","bottom","height"],"mappings":"+GAAA,iDAKMA,EAAa,SAACC,GAClB,IAAQC,EAAQD,EAARC,IACFC,EAAMC,KAAKD,MAKjB,OADgB,IAAIC,KADPD,EADgB,IADL,EAAND,GACgB,KAEHG,mBAAmB,QAAS,CAACC,SAAU,cAAcC,MAAM,KAAKC,MAAM,EAAE,GAAGC,KAAK,MAmClGC,UA/BK,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACpB,OACE,cAAC,WAAD,UACGA,GAAgBA,EAAaC,OAAS,EACrC,0BAASC,MAAO,CAAEC,MAAO,MAAOC,YAAa,OAAQC,aAAc,QAAnE,UACE,kCAAUC,YAAc,iBACxB,6BACGN,EAAaO,MAAK,SAACC,EAAEC,GACpB,OAAGD,EAAEE,UAAUC,cAAgBF,EAAEC,UAAUC,eAAuB,EAC/DF,EAAEC,UAAUC,cAAgBH,EAAEE,UAAUC,cAAsB,EAC9DH,EAAEI,QAAQD,cAAgBF,EAAEG,QAAQD,eAAuB,EAC3DF,EAAEG,QAAQD,cAAgBH,EAAEI,QAAQD,cAAsB,EAC1DH,EAAEK,UAAUF,cAAgBF,EAAEI,UAAUF,eAAuB,EAC/DF,EAAEI,UAAUF,cAAgBH,EAAEK,UAAUF,cAAsB,EAC1D,KACNG,KAAI,SAACxB,EAAMyB,GAAP,OACL,qBAA0Bb,MAAO,CAAEc,QAAS,OAAQC,cAAe,MAAOC,eAAgB,gBAAiBC,WAAY,cAAvH,UACE,sBAAMjB,MAAO,CAAEkB,UAAW,MAAOC,UAAW,QAA5C,SAAuD/B,EAAKoB,YAC5D,cAAC,UAAD,CAAMY,KAAMhC,EAAKsB,QAASW,MAAOC,IAAUlC,EAAKsB,SAASa,UAAUC,WAAYF,IAAUlC,EAAKsB,UAAYtB,EAAKsB,QAASV,MAAO,CAAEkB,UAAW,OAAQO,SAAU,WAAYC,OAAQ,SAClL,+BAAOvC,EAAWC,OAHpB,eAAiByB,YASvB,qBAAKb,MAAO,CAAE2B,OAAQ","file":"static/js/8.cf9b07b7.chunk.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport Flag from \"./Flag\"\nimport { countries } from \"./data\"\nimport { getPermLocale } from \"./getLocale\"\n\nconst getSunTime = (city) => {\n  const { lon } = city \n  const now = Date.now()\n  const offsetRaw = lon * 4\n  const offsetMs = offsetRaw * 60 * 1000\n  const time = now + offsetMs\n  const sunTime = new Date(time).toLocaleTimeString(\"en-GB\", {timeZone: \"Etc/GMT+0\"}).split(\":\").slice(0,2).join(\":\")\n  return sunTime\n}\n\nconst ClockCities = ({uniqueCities}) => {\n  return (\n    <Fragment>\n      {uniqueCities && uniqueCities.length > 0 ? (\n        <details style={{ width: \"95%\", paddingLeft: \"2.5%\", paddingRight: \"2.5%\"}}>\n          <summary>{getPermLocale(\"MajorCities\")}</summary>\n          <ul>\n            {uniqueCities.sort((a,b) => {\n              if(a.asciiname.toLowerCase() < b.asciiname.toLowerCase()) return -1\n              if(b.asciiname.toLowerCase() < a.asciiname.toLowerCase()) return +1\n              if(a.country.toLowerCase() < b.country.toLowerCase()) return -1\n              if(b.country.toLowerCase() < a.country.toLowerCase()) return +1\n              if(a.adminCode.toLowerCase() < b.adminCode.toLowerCase()) return -1\n              if(b.adminCode.toLowerCase() < a.adminCode.toLowerCase()) return +1\n              return 0\n            }).map((city, index) => (\n              <li key={`city-${index}`} style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"flex-start\" }}>\n                <span style={{ flexBasis: \"65%\", textAlign: \"left\" }}>{city.asciiname}</span>\n                <Flag code={city.country} title={countries[city.country][navigator.language] ||countries[city.country] || city.country} style={{ flexBasis: \"35px\", position: \"relative\", bottom: \"4px\" }}/>\n                <span>{getSunTime(city)}</span>\n              </li>\n            ))}\n          </ul>\n        </details>\n      ) : (\n        <div style={{ height: \"24.5px\"}} />\n      )}\n    </Fragment>\n  )\n}\n\nexport default ClockCities"],"sourceRoot":""}
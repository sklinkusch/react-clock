{"version":3,"sources":["components/getLocale.js","components/Header.js","components/App.js","reportWebVitals.js","index.js"],"names":["getPermLocale","identifier","lang","window","navigator","language","locales","hasOwnProperty","withRouter","useDebugState","isOpen","setOpen","color","dark","expand","href","onClick","navbar","className","to","exact","activeClassName","tag","RRNavLink","Home","lazy","Ideal","App","basename","process","fallback","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+GAAA,8CAEMA,EAAgB,SAACC,GACrB,IAAMC,EAAOC,OAAOC,UAAUC,SAC9B,OAAGC,EAAQL,GAAYM,eAAeL,GAC7BI,EAAQL,GAAYC,GAEtBI,EAAQL,GAAR,K,8gBCsBMO,mBAvBf,WACE,MAA0BC,wBAAc,UAAS,GAAjD,mBAAOC,EAAP,KAAeC,EAAf,KAIA,OACE,eAAC,IAAD,CAAQC,MAAM,OAAOC,MAAI,EAACC,OAAO,KAAjC,UACI,cAAC,IAAD,CAAaC,KAAK,IAAlB,SAAuBf,YAAc,oBACrC,cAAC,IAAD,CAAegB,QANN,WACbL,GAASD,MAML,cAAC,IAAD,CAAUA,OAAQA,EAAQO,QAAM,EAAhC,SACE,eAAC,IAAD,CAAKC,UAAU,UAAUD,QAAM,EAA/B,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAASE,GAAG,GAAGC,OAAO,EAAMC,gBAAgB,SAASC,IAAKC,IAA1D,SAAsEvB,YAAc,qBAEtF,cAAC,IAAD,UACE,cAAC,IAAD,CAASmB,GAAG,SAASE,gBAAgB,SAASC,IAAKC,IAAnD,SAA+DvB,YAAc,iCClBrFwB,EAAOC,gBAAK,kBAAM,qEAClBC,EAAQD,gBAAM,kBAAM,8DAoBXE,MAlBf,WACE,OACE,eAAC,IAAD,CAAQC,SAAQ,WAAMC,gBAAtB,UACE,cAAC,EAAD,IACA,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAACL,EAAD,MAEF,cAAC,IAAD,CAAOK,KAAK,GAAGX,OAAO,EAAtB,SACE,cAACI,EAAD,eCJGQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAK1Bb,M","file":"static/js/main.3bda6dde.chunk.js","sourcesContent":["import locales from \"./locales.json\"\n\nconst getPermLocale = (identifier) => {\n  const lang = window.navigator.language\n  if(locales[identifier].hasOwnProperty(lang)) {\n    return locales[identifier][lang]\n  }\n  return locales[identifier][\"en\"]\n}\n\nexport { getPermLocale }","import React from \"react\"\nimport { useDebugState } from \"use-named-state\";\nimport { Collapse, Navbar, NavbarBrand, NavbarToggler, Nav, NavItem, NavLink } from \"reactstrap\";\nimport { NavLink as RRNavLink, withRouter } from \"react-router-dom\"\nimport { getPermLocale } from \"./getLocale\"\n\nfunction Header() {\n  const [isOpen, setOpen] = useDebugState(\"isOpen\",false) \n  const toggle = () => {\n    setOpen(!isOpen)\n  }\n  return (\n    <Navbar color=\"dark\" dark expand=\"lg\">\n        <NavbarBrand href=\"#\">{getPermLocale(\"WorldTimeClock\")}</NavbarBrand>\n        <NavbarToggler onClick={toggle} />\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <NavLink to=\"\" exact={true} activeClassName=\"active\" tag={RRNavLink}>{getPermLocale(\"RealTimeZones\")}</NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink to=\"/ideal\" activeClassName=\"active\" tag={RRNavLink}>{getPermLocale(\"IdealTimeZones\")}</NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n  )\n}\n\nexport default withRouter(Header)","import React, { Suspense, lazy } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Header\"\nconst Home = lazy(() => import(\"../pages/Home\"));\nconst Ideal = lazy (() => import(\"../pages/Ideal\"));\n\nfunction App() {\n  return (\n    <Router basename={`/${process.env.PUBLIC_URL}`}>\n      <Header />\n      <Suspense fallback={<div>Loading...</div>}>\n        <Switch>\n          <Route path=\"/ideal\">\n            <Ideal />\n          </Route>\n          <Route path=\"\" exact={true}>\n            <Home />\n          </Route>\n        </Switch>\n      </Suspense>\n    </Router>\n  );\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nreportWebVitals();\n"],"sourceRoot":""}
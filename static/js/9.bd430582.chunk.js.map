{"version":3,"sources":["components/ClockCities.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Flag__WEBPACK_IMPORTED_MODULE_1__","_data__WEBPACK_IMPORTED_MODULE_2__","ClockCities","_ref","uniqueCities","a","createElement","length","style","width","paddingLeft","paddingRight","sort","b","asciiname","toLowerCase","country","adminCode","map","city","index","key","concat","display","flexDirection","justifyContent","alignItems","flexBasis","textAlign","code","title","countries","position","bottom","lon","now","Date","toLocaleTimeString","timeZone","split","slice","join","getSunTime","height"],"mappings":"yFAAAA,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,EAAA,GAAAI,EAAAJ,EAAAK,EAAAF,GAAAG,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IA6CeQ,UA/BK,SAAAC,GAAoB,IAAlBC,EAAkBD,EAAlBC,aACpB,OACEN,EAAAO,EAAAC,cAACT,EAAA,SAAD,KACGO,GAAgBA,EAAaG,OAAS,EACrCT,EAAAO,EAAAC,cAAA,WAASE,MAAO,CAAEC,MAAO,MAAOC,YAAa,OAAQC,aAAc,SACjEb,EAAAO,EAAAC,cAAA,+BACAR,EAAAO,EAAAC,cAAA,UACGF,EAAaQ,KAAK,SAACP,EAAEQ,GACpB,OAAGR,EAAES,UAAUC,cAAgBF,EAAEC,UAAUC,eAAuB,EAC/DF,EAAEC,UAAUC,cAAgBV,EAAES,UAAUC,cAAsB,EAC9DV,EAAEW,QAAQD,cAAgBF,EAAEG,QAAQD,eAAuB,EAC3DF,EAAEG,QAAQD,cAAgBV,EAAEW,QAAQD,cAAsB,EAC1DV,EAAEY,UAAUF,cAAgBF,EAAEI,UAAUF,eAAuB,EAC/DF,EAAEI,UAAUF,cAAgBV,EAAEY,UAAUF,cAAsB,EAC1D,IACNG,IAAI,SAACC,EAAMC,GAAP,OACLtB,EAAAO,EAAAC,cAAA,MAAIe,IAAG,QAAAC,OAAUF,GAASZ,MAAO,CAAEe,QAAS,OAAQC,cAAe,MAAOC,eAAgB,gBAAiBC,WAAY,eACrH5B,EAAAO,EAAAC,cAAA,QAAME,MAAO,CAAEmB,UAAW,MAAOC,UAAW,SAAWT,EAAKL,WAC5DhB,EAAAO,EAAAC,cAACN,EAAA,QAAD,CAAM6B,KAAMV,EAAKH,QAASc,MAAOC,IAAUZ,EAAKH,UAAYG,EAAKH,QAASR,MAAO,CAAEmB,UAAW,OAAQK,SAAU,WAAYC,OAAQ,SACpInC,EAAAO,EAAAC,cAAA,YA7BG,SAACa,GAAS,IACnBe,EAAQf,EAARe,IACFC,EAAMC,KAAKD,MAKjB,OADgB,IAAIC,KADPD,EAFW,EAAND,EACW,GAAK,KAEHG,mBAAmB,QAAS,CAACC,SAAU,cAAcC,MAAM,KAAKC,MAAM,EAAE,GAAGC,KAAK,KAuB1FC,CAAWvB,SAM1BrB,EAAAO,EAAAC,cAAA,OAAKE,MAAO,CAAEmC,OAAQ","file":"static/js/9.bd430582.chunk.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport Flag from \"./Flag\"\nimport { countries } from \"./data\"\n\nconst getSunTime = (city) => {\n  const { lon } = city \n  const now = Date.now()\n  const offsetRaw = lon * 4\n  const offsetMs = offsetRaw * 60 * 1000\n  const time = now + offsetMs\n  const sunTime = new Date(time).toLocaleTimeString(\"en-GB\", {timeZone: \"Etc/GMT+0\"}).split(\":\").slice(0,2).join(\":\")\n  return sunTime\n}\n\nconst ClockCities = ({uniqueCities}) => {\n  return (\n    <Fragment>\n      {uniqueCities && uniqueCities.length > 0 ? (\n        <details style={{ width: \"95%\", paddingLeft: \"2.5%\", paddingRight: \"2.5%\"}}>\n          <summary>Major cities</summary>\n          <ul>\n            {uniqueCities.sort((a,b) => {\n              if(a.asciiname.toLowerCase() < b.asciiname.toLowerCase()) return -1\n              if(b.asciiname.toLowerCase() < a.asciiname.toLowerCase()) return +1\n              if(a.country.toLowerCase() < b.country.toLowerCase()) return -1\n              if(b.country.toLowerCase() < a.country.toLowerCase()) return +1\n              if(a.adminCode.toLowerCase() < b.adminCode.toLowerCase()) return -1\n              if(b.adminCode.toLowerCase() < a.adminCode.toLowerCase()) return +1\n              return 0\n            }).map((city, index) => (\n              <li key={`city-${index}`} style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", alignItems: \"flex-start\" }}>\n                <span style={{ flexBasis: \"65%\", textAlign: \"left\" }}>{city.asciiname}</span>\n                <Flag code={city.country} title={countries[city.country] || city.country} style={{ flexBasis: \"35px\", position: \"relative\", bottom: \"4px\" }}/>\n                <span>{getSunTime(city)}</span>\n              </li>\n            ))}\n          </ul>\n        </details>\n      ) : (\n        <div style={{ height: \"24.5px\"}} />\n      )}\n    </Fragment>\n  )\n}\n\nexport default ClockCities"],"sourceRoot":""}
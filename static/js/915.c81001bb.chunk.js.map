{"version":3,"file":"static/js/915.c81001bb.chunk.js","mappings":"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","sources":["components/ClockHelpers.js","components/Clock.js"],"sourcesContent":["import React from \"react\"\n\nexport const ClockDate = ({date}) => (<p>{date}</p>)\n\nexport const ClockTime = ({date}) => (<p>{date}</p>)","import React, { lazy } from \"react\";\nimport moment from \"moment-timezone\"\nimport \"../styles/Clock.css\";\nimport { ClockDate, ClockTime } from \"./ClockHelpers\"\nconst ClockTitle = lazy(() => import(\"./ClockTitle\"))\nconst ClockFlags = lazy(() => import(\"./ClockFlags\"))\nconst ClockCities = lazy(() => import(\"./ClockCities\"))\n\nexport default class IdealClock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      formattedDate: this.props.offset ? moment().utcOffset(this.props.offset).format(\"DD/MM/YYYY\") : moment().tz(this.props.zone).format(\"DD/MM/YYYY\"),\n      formattedTime: this.props.offset ? moment().utcOffset(this.props.offset).format(\"HH:mm:ss\") : moment().tz(this.props.zone).format(\"HH:mm:ss\"),\n    };\n  }\n  componentDidMount() {\n    this.timerID = setInterval(() => this.tick(), 1000);\n  }\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n  }\n  render(props) {\n    const lang = window.navigator.language\n    const { city = \"\", flags = [], cities = [] } = this.props\n    const { formattedDate, formattedTime } = this.state\n    const sortedFlags = flags.sort((a, b) => {\n      const aTitle = typeof a.title === \"object\"\n        ? a.title.hasOwnProperty(lang)\n          ? a.title[lang] \n          : a.title[\"en\"]\n        : a.title\n        const bTitle = typeof b.title === \"object\"\n        ? b.title.hasOwnProperty(lang)\n          ? b.title[lang] \n          : b.title[\"en\"]\n        : b.title\n      return aTitle.localeCompare(bTitle, \"de\", {sensitivy: \"base\"})\n    })\n    const reducedFlags = sortedFlags.reduce((acc, curr) => {\n      const arr = [...acc]\n      const flagIndexes = arr.map(flag => flag.code)\n      if(flagIndexes.includes(curr.code)) {\n        const index = flagIndexes.indexOf(curr.code)\n        const element = arr[index]\n        curr.subdiv.forEach(item => {\n          if(!element.subdiv.includes(item)) {\n            element.subdiv.push(item)\n          }\n        })\n        const sortedSubdiv = element.subdiv.sort((a,b) => {\n          const aTitle = typeof a.title === \"object\"\n        ? a.title.hasOwnProperty(lang)\n          ? a.title[lang] \n          : a.title[\"en\"]\n        : a.title\n        const bTitle = typeof b.title === \"object\"\n        ? b.title.hasOwnProperty(lang)\n          ? b.title[lang] \n          : b.title[\"en\"]\n        : b.title\n      return aTitle.localeCompare(bTitle, \"de\", {sensitivy: \"base\"})\n        })\n        arr[index].subdiv = sortedSubdiv\n      } else {\n        arr.push(curr)\n      }\n      return arr\n    }, [])\n    const uniqueCities = [ ...new Set(cities) ]\n    return (\n      <div>\n        <div className=\"album-item\">\n          <ClockTitle city={city} />\n          <ClockDate date={formattedDate} />\n          <ClockTime date={formattedTime} />\n          <ClockFlags flags={reducedFlags} />\n          <ClockCities uniqueCities={uniqueCities} />\n        </div>\n      </div>\n    );\n  }\n  tick() {\n    this.setState({\n      formattedDate: this.props.offset ? moment().utcOffset(this.props.offset).format(\"DD/MM/YYYY\") : moment().tz(this.props.zone).format(\"DD/MM/YYYY\"),\n      formattedTime: this.props.offset ? moment().utcOffset(this.props.offset).format(\"HH:mm:ss\") : moment().tz(this.props.zone).format(\"HH:mm:ss\"),\n    });\n  }\n}\n"],"names":["ClockDate","date","ClockTime","ClockTitle","lazy","ClockFlags","ClockCities","IdealClock","props","state","formattedDate","offset","moment","utcOffset","format","tz","zone","formattedTime","this","timerID","setInterval","tick","clearInterval","lang","window","navigator","language","city","flags","cities","reducedFlags","sort","a","b","aTitle","title","hasOwnProperty","bTitle","localeCompare","sensitivy","reduce","acc","curr","arr","flagIndexes","map","flag","code","includes","index","indexOf","element","subdiv","forEach","item","push","sortedSubdiv","uniqueCities","Set","className","setState","React"],"sourceRoot":""}
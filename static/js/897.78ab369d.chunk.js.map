{"version":3,"file":"static/js/897.78ab369d.chunk.js","mappings":"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,mBACR,CAACA,MAAO,sBACR,CAACA,MAAO,WACR,CAACA,MAAO,SACR,CAACA,MAAO,cACR,CAACA,MAAO,UACR,CAACA,MAAO,cACR,CAACA,MAAO,iBACR,CAACA,MAAO,cACR,CAACA,MAAO,YACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,SACR,CAACA,MAAO,SACR,CAACA,MAAO,iBACR,CAACA,MAAO,SACR,CAACA,MAAO,aACR,CAACA,MAAO,UACR,CAACA,MAAO,UACR,CAACA,MAAO,cAEVL,KAAM,YACNC,KAAM,KACNC,OAAQC,EAAAA,QAAgB,SAAAV,GACtB,GAAoB,OAAjBA,EAAKC,QACN,OAAOD,EAAKcb,OAAO,MAGX,CACEb,QAAS,CACPG,GAAI,YACJC,GAAI,SACJC,GAAI,WAENK,OAAQ,CACN,CAACC,MAAO,iBACR,CAACA,MAAO,kBACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,UACR,CAACA,MAAO,WACR,CAACA,MAAO,aACR,CAACA,MAAO,UACR,CAACA,MAAO,mBACR,CAACA,MAAO,oBACR,CAACA,MAAO,YACR,CAACA,MAAO,WACR,CAACA,MAAO,aACR,CAACA,MAAO,WACR,CAACA,MAAO,wBACR,CAACA,MAAO,WACR,CAACA,MAAO,mBACR,CAACA,MAAO,QACR,CAACA,MAAO,SACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,YACR,CAACA,MAAO,QACR,CAACA,MAAO,QACR,CAACA,MAAO,uBACR,CAACA,MAAO,SACR,CAACA,MAAO,oBACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,QAEVL,KAAM,YACNC,KAAM,KACNC,OAAQC,EAAAA,QAAgB,SAAAV,GACtB,GAAoB,OAAjBA,EAAKC,QACN,OAAOD,EAAKc,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK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","sources":["components/timezones-ideal/cityList.js","components/timezones-ideal/Africa.js","components/timezones-ideal/Antarctica.js","components/timezones-ideal/Australia.js","components/timezones-ideal/Canada.js","components/timezones-ideal/Caribbean.js","components/timezones-ideal/CentralAmerica.js","components/timezones-ideal/CentralAsia.js","components/timezones-ideal/EastAsia.js","components/timezones-ideal/Europe.js","components/timezones-ideal/Indonesia.js","components/timezones-ideal/MiddleEast.js","components/timezones-ideal/Oceania.js","components/timezones-ideal/Russia.js","components/timezones-ideal/SouthAmerica.js","components/timezones-ideal/SouthAsia.js","components/timezones-ideal/SouthEastAsia.js","components/timezones-ideal/UnitedStates.js","components/data-ideal.js","pages/Ideal.js"],"sourcesContent":["import cityListRaw from \"../cities500K.json\"\nimport cPopulation from \"../population\"\n\nconst cityList = cityListRaw.filter(city => {\n  const { country, population } = city\n  const countryPopulation = cPopulation[country] \n  const minPopulation = 0.005 * countryPopulation\n  if (population >= minPopulation) {\n    return true\n  }\n  return false\n})\n\nexport default cityList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Algerien\",\n      en: \"Algeria\",\n      fr: \"Algérie\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"DZ\",\n    cities: cityList.filter(city => city.country === \"DZ\")\n  },\n  {\n    country: {\n      de: \"Angola\",\n      en: \"Angola\",\n      fr: \"Angola\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"AO\",\n    cities: cityList.filter(city => city.country === \"AO\")\n  },\n  {\n    country: {\n      de: \"Benin\",\n      en: \"Benin\",\n      fr: \"Bénin\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"BJ\",\n    cities: cityList.filter(city => city.country === \"BJ\")\n  },\n  {\n    country: {\n      de: \"Botswana\",\n      en: \"Botswana\",\n      fr: \"Botswana\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"BW\",\n    cities: cityList.filter(city => city.country === \"BW\")\n  },\n  {\n    country: {\n      de: \"Burkina Faso\",\n      en: \"Burkina Faso\",\n      fr: \"Burkina Faso\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"BF\",\n    cities: cityList.filter(city => city.country === \"BF\")\n  },\n  {\n    country: {\n      de: \"Burundi\",\n      en: \"Burundi\",\n      fr: \"Burundi\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"BI\",\n    cities: cityList.filter(city => city.country === \"BI\")\n  },\n  {\n    country: {\n      de: \"Kap Verde\",\n      en: \"Cabo Verde\",\n      fr: \"Cap-Vert\"\n    },\n    zone: \"Etc/GMT+2\",\n    flag: \"CV\",\n    cities: cityList.filter(city => city.country === \"CV\")\n  },\n  {\n    country: {\n      de: \"Kamerun\",\n      en: \"Cameroon\",\n      fr: \"Cameroun\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"CM\",\n    cities: cityList.filter(city => city.country === \"CM\")\n  },\n  {\n    country: {\n      de: \"Zentralafrikanische Republik\",\n      en: \"Central African Republic\",\n      fr: \"République centrafricaine\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"CF\",\n    cities: cityList.filter(city => city.country === \"CF\")\n  },\n  {\n    country: {\n      de: \"Tschad\",\n      en: \"Chad\",\n      fr: \"Tchad\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"TD\",\n    cities: cityList.filter(city => city.country === \"TD\")\n  },\n  {\n    country: {\n      de: \"Komoren\",\n      en: \"Comoros\",\n      fr: \"Comores\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"KM\",\n    cities: cityList.filter(city => city.country === \"KM\")\n  },\n  {\n    country: {\n      de: \"Elfenbeinküste\",\n      en: \"Côte d'Ivoire\",\n      fr: \"Côte d'Ivoire\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"CI\",\n    cities: cityList.filter(city => city.country === \"CI\")\n  },\n  {\n    country: {\n      de: \"Demokratische Republik Kongo\",\n      en: \"Democratic Republic of the Congo\",\n      fr: \"République démocratique du Congo\"\n    },\n    subdiv: [\n      {title: \"Équateur\"}, // 02\n      {title: \"Kasaï\"}, // 18\n      {title: \"Kinshasa\"}, // 06\n      {title: \"Kongo Central\"}, // 08\n      {title: \"Kwango\"}, // 19\n      {title: \"Kwilu\"}, // 20\n      {title: \"Mai-Ndombe\"}, // 24\n      {title: \"Mongala\"}, // 25\n      {title: \"Nord-Ubangi\"}, // 26\n      {title: \"Sud-Ubangi\"}, // 28\n      {title: \"Tshuapa\"} // 31\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"CD\",\n    cities: cityList.filter(city => city.country === \"CD\" && [\"02\",\"06\",\"08\",\"18\",\"19\",\"20\",\"24\",\"25\",\"26\",\"28\",\"31\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Demokratische Republik Kongo\",\n      en: \"Democratic Republic of the Congo\",\n      fr: \"République démocratique du Congo\"\n    },\n    subdiv: [\n      {title: \"Bas-Uele\"}, // 13\n      {title: \"Haut-Katanga\"}, // 14 \n      {title: \"Haut-Lomami\"}, // 15\n      {title: \"Haut-Uele\"}, // 16\n      {title: \"Ituri\"}, // 17\n      {title: \"Kasaï-Central\"}, // 23\n      {title: \"Kasaï-Oriental\"}, // 04\n      {title: \"Lomami\"}, // 21\n      {title: \"Lualaba\"}, // 22\n      {title: \"Maniema\"}, // 10\n      {title: \"Nord-Kivu\"}, // 11\n      {title: \"Sankuru\"}, // 27\n      {title: \"Sud-Kivu\"}, // 12\n      {title: \"Tanganjika\"}, // 29\n      {title: \"Tshopo\"}, // 30\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"CD\",\n    cities: cityList.filter(city => city.country === \"CD\" && [\"04\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"21\",\"22\",\"23\",\"27\",\"29\",\"30\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Dschibuti\",\n      en: \"Djibouti\",\n      fr: \"Djibouti\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"DJ\",\n    cities: cityList.filter(city => city.country === \"DJ\")\n  },\n  {\n    country: {\n      de: \"Ägypten\",\n      en: \"Egypt\",\n      fr: \"Égypte\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"EG\",\n    cities: cityList.filter(city => city.country === \"EG\")\n  },\n  {\n    country: {\n      de: \"Äquatorialguinea\",\n      en: \"Equatorial Guinea\",\n      fr: \"Guinée équatoriale\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"GQ\",\n    cities: cityList.filter(city => city.country === \"GQ\")\n  },\n  {\n    country: {\n      de: \"Eritrea\",\n      en: \"Eritrea\",\n      fr: \"Érythrée\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"ER\",\n    cities: cityList.filter(city => city.country === \"ER\")\n  },\n  {\n    country: {\n      de: \"eSwatini\",\n      en: \"eSwatini\",\n      fr: \"Eswatini\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"SZ\",\n    cities: cityList.filter(city => city.country === \"SZ\")\n  },\n  {\n    country: {\n      de: \"Äthiopien\",\n      en: \"Ethiopia\",\n      fr: \"Éthiopie\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"ET\",\n    cities: cityList.filter(city => city.country === \"ET\")\n  },\n  {\n    country: {\n      de: \"Mayotte (Frankreich)\",\n      en: \"Mayotte (France)\",\n      fr: \"Mayotte (France)\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"YT\",\n    cities: cityList.filter(city => city.country === \"YT\")\n  },\n  {\n    country: {\n      de: \"La Réunion (Frankreich)\",\n      en: \"La Réunion (France)\",\n      fr: \"La Réunion (France)\"\n    },\n    zone: \"Etc/GMT-4\",\n    flag: \"RE\",\n    cities: cityList.filter(city => city.country === \"RE\")\n  },\n  {\n    country: {\n      de: \"Französische Süd- und Antarktisgebiete (Frankreich)\",\n      en: \"French Southern and Antarctic Lands (France)\",\n      fr: \"Terres australes et antarctiques françaises (France)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Crozetinseln\",\n          en: \"Crozet Islands\",\n          fr: \"Archipel Crozet\"\n        }\n      },\n      {\n        title: {\n          de: \"Îles Éparses\",\n          en: \"Scattered Islands in the Indian Ocean\",\n          fr: \"Îles Éparses de l'océan Indien\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT-4\",\n    flag: \"TF\",\n    cities: cityList.filter(city => city.country === \"TF\" && [\"02\",\"05\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Französische Süd- und Antarktisgebiete (Frankreich)\",\n      en: \"French Southern and Antarctic Lands (France)\",\n      fr: \"Terres australes et antarctiques françaises (France)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Kerguelen-Archipel\",\n          en: \"Kerguelen Islands\",\n          fr: \"Îles Kerguelen\"\n        }\n      },\n      {\n        title: {\n          de: \"Sankt Paul und Amsterdam\",\n          en: \"St. Paul and Amsterdam Islands\",\n          fr: \"Îles Saint-Paul et Nouvelle-Amsterdam\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"TF\",\n    cities: cityList.filter(city => city.country === \"TF\" && [\"01\",\"03\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Gabun\",\n      en: \"Gabon\",\n      fr: \"Gabon\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"GA\",\n    cities: cityList.filter(city => city.country === \"GA\")\n  },\n  {\n    country: {\n      de: \"Gambia\",\n      en: \"The Gambia\",\n      fr: \"Gambie\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"GM\",\n    cities: cityList.filter(city => city.country === \"GM\")\n  },\n  {\n    country: {\n      de: \"Ghana\",\n      en: \"Ghana\",\n      fr: \"Ghana\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"GH\",\n    cities: cityList.filter(city => city.country === \"GH\")\n  },\n  {\n    country: {\n      de: \"Guinea\",\n      en: \"Guinea\",\n      fr: \"Guinée\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"GN\",\n    cities: cityList.filter(city => city.country === \"GN\")\n  },\n  {\n    country: {\n      de: \"Guinea-Bissau\",\n      en: \"Guinea-Bissau\",\n      fr: \"Guinée-Bissau\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"GW\",\n    cities: cityList.filter(city => city.country === \"GW\")\n  },\n  {\n    country: {\n      de: \"Kenia\",\n      en: \"Kenya\",\n      fr: \"Kenya\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"KE\",\n    cities: cityList.filter(city => city.country === \"KE\")\n  },\n  {\n    country: {\n      de: \"Lesotho\",\n      en: \"Lesotho\",\n      fr: \"Lesotho\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"LS\",\n    cities: cityList.filter(city => city.country === \"LS\")\n  },\n  {\n    country: {\n      de: \"Liberia\",\n      en: \"Liberia\",\n      fr: \"Liberia\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"LR\",\n    cities: cityList.filter(city => city.country === \"LR\")\n  },\n  {\n    country: {\n      de: \"Libyen\",\n      en: \"Libya\",\n      fr: \"Libye\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"LY\",\n    cities: cityList.filter(city => city.country === \"LY\")\n  },\n  {\n    country: {\n      de: \"Madagaskar\",\n      en: \"Madagascar\",\n      fr: \"Madagascar\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"MG\",\n    cities: cityList.filter(city => city.country === \"MG\")\n  },\n  {\n    country: {\n      de: \"Malawi\",\n      en: \"Malawi\",\n      fr: \"Malawi\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"MW\",\n    cities: cityList.filter(city => city.country === \"MW\")\n  },\n  {\n    country: {\n      de: \"Mali\",\n      en: \"Mali\",\n      fr: \"Mali\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"ML\",\n    cities: cityList.filter(city => city.country === \"ML\")\n  },\n  {\n    country: {\n      de: \"Mauretanien\",\n      en: \"Mauritania\",\n      fr: \"Mauritanie\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"MR\",\n    cities: cityList.filter(city => city.country === \"MR\")\n  },\n  {\n    country: {\n      de: \"Mauritius\",\n      en: \"Mauritius\",\n      fr: \"Maurice\"\n    },\n    zone: \"Etc/GMT-4\",\n    flag: \"MU\",\n    cities: cityList.filter(city => city.country === \"MU\")\n  },\n  {\n    country: {\n      de: \"Marokko\",\n      en: \"Morocco\",\n      fr: \"Maroc\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"MA\",\n    cities: cityList.filter(city => city.country === \"MA\")\n  },\n  {\n    country: {\n      de: \"Mosambik\",\n      en: \"Mozambique\",\n      fr: \"Mozambique\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"MZ\",\n    cities: cityList.filter(city => city.country === \"MZ\")\n  },\n  {\n    country: {\n      de: \"Namibia\",\n      en: \"Namibia\",\n      fr: \"Namibie\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"NA\",\n    cities: cityList.filter(city => city.country === \"NA\")\n  },\n  {\n    country: {\n      de: \"Niger\",\n      en: \"Niger\",\n      fr: \"Niger\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"NE\",\n    cities: cityList.filter(city => city.country === \"NE\")\n  },\n  {\n    country: {\n      de: \"Nigeria\",\n      en: \"Nigeria\",\n      fr: \"Nigeria\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"NG\",\n    cities: cityList.filter(city => city.country === \"NG\")\n  },\n  {\n    country: {\n      de: \"Republik Kongo\",\n      en: \"Republic of the Congo\",\n      fr: \"République du Congo\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"CG\",\n    cities: cityList.filter(city => city.country === \"CG\")\n  },\n  {\n    country: {\n      de: \"Ruanda\",\n      en: \"Rwanda\",\n      fr: \"Rwanda\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"RW\",\n    cities: cityList.filter(city => city.country === \"RW\")\n  },\n  {\n    country: {\n      de: \"São Tomé und Príncipe\",\n      en: \"São Tomé and Príncipe\",\n      fr: \"Sao Tomé-et-Principe\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"ST\",\n    cities: cityList.filter(city => city.country === \"ST\")\n  },\n  {\n    country: {\n      de: \"Demokratische Arabische Republik Sahara\",\n      en: \"Sahrawi Arab Democratic Republic\",\n      fr: \"République arabe sahraouie démocratique\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"EH\",\n    cities: cityList.filter(city => city.country === \"EH\")\n  },\n  {\n    country: {\n      de: \"Senegal\",\n      en: \"Senegal\",\n      fr: \"Sénégal\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"SN\",\n    cities: cityList.filter(city => city.country === \"SN\")\n  },\n  {\n    country: {\n      de: \"Seychellen\",\n      en: \"Seychelles\",\n      fr: \"Seychelles\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"SC\",\n    cities: cityList.filter(city => city.country === \"SC\")\n  },\n  {\n    country: {\n      de: \"Sierra Leone\",\n      en: \"Sierra Leone\",\n      fr: \"Sierra Leone\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"SL\",\n    cities: cityList.filter(city => city.country === \"SL\")\n  },\n  {\n    country: {\n      de: \"Somalia\",\n      en: \"Somalia\",\n      fr: \"Somalie\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"SO\",\n    cities: cityList.filter(city => city.country === \"SO\")\n  },\n  {\n    country: {\n      de: \"Südafrika\",\n      en: \"South Africa\",\n      fr: \"Afrique du Sud\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Nordkap\",\n          en: \"Northern Cape\",\n          fr: \"Cap-Nord\"\n        }\n      }, // 08\n      {\n        title: {\n          de: \"Westkap\",\n          en: \"Western Cape\",\n          fr: \"Cap-Occidental\"\n        }\n      }, // 11\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"ZA\",\n    cities: cityList.filter(city => city.country === \"ZA\" && [\"08\",\"11\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Südafrika\",\n      en: \"South Africa\",\n      fr: \"Afrique du Sud\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Ostkap\",\n          en: \"Eastern Cape\",\n          fr: \"Cap-Oriental\"\n        }\n      }, // 05\n      {\n        title: {\n          de: \"Freistaat\",\n          en: \"Free State\",\n          fr: \"État libre\"\n        }\n      }, //  03\n      {\n        title: {\n          de: \"Gauteng\",\n          en: \"Gauteng\",\n          fr: \"Gauteng\"\n        }\n      }, // 06\n      {\n        title: {\n          de: \"KwaZulu-Natal\",\n          en: \"KwaZulu-Natal\",\n          fr: \"KwaZulu-Natal\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Limpopo\",\n          en: \"Limpopo\",\n          fr: \"Limpopo\"\n        }\n      }, // 09\n      {\n        title: {\n          de: \"Mpumalanga\",\n          en: \"Mpumalanga\",\n          fr: \"Mpumalanga\"\n        }\n      }, // 07\n      {\n        title: {\n          de: \"Nordwest\",\n          en: \"North West\",\n          fr: \"Nord-Ouest\"\n        }\n      }, // 10\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"ZA\",\n    cities: cityList.filter(city => city.country === \"ZA\" && [\"02\",\"03\",\"05\",\"06\",\"07\",\"09\",\"10\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Südsudan\",\n      en: \"South Sudan\",\n      fr: \"Soudan du Sud\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"SS\",\n    cities: cityList.filter(city => city.country === \"SS\")\n  },\n  {\n    country: {\n      de: \"Spanien\",\n      en: \"Spain\",\n      fr: \"Espagne\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Ceuta\",\n          en: \"Ceuta\",\n          fr: \"Ceuta\"\n        }\n      }, \n      {\n        title: {\n          de: \"Melilla\",\n          en: \"Melilla\",\n          fr: \"Melilla\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+0\",\n    flag: \"ES\",\n    cities: cityList.filter(city => city.country === \"ES\" && [\"CE\", \"ML\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Sudan\",\n      en: \"Sudan\",\n      fr: \"Soudan\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"SD\",\n    cities: cityList.filter(city => city.country === \"SD\")\n  },\n  {\n    country: {\n      de: \"Tansania\",\n      en: \"Tanzania\",\n      fr: \"Tanzanie\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"TZ\",\n    cities: cityList.filter(city => city.country === \"TZ\")\n  },\n  {\n    country: {\n      de: \"Togo\",\n      en: \"Togo\",\n      fr: \"Togo\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"TG\",\n    cities: cityList.filter(city => city.country === \"TG\")\n  },\n  {\n    country: {\n      de: \"Tunesien\",\n      en: \"Tunisia\",\n      fr: \"Tunisie\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"TN\",\n    cities: cityList.filter(city => city.country === \"TN\")\n  },\n  {\n    country: {\n      de: \"Uganda\",\n      en: \"Uganda\",\n      fr: \"Ouganda\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"UG\",\n    cities: cityList.filter(city => city.country === \"UG\")\n  },\n  {\n    country: {\n      de: \"Ascension (Vereinigtes Königreich)\",\n      en: \"Ascension (United Kingdom)\",\n      fr: \"Île de l'Ascension (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"AC\",\n    cities: cityList.filter(city => city.country === \"SH\" && city.adminCode === \"01\")\n  },\n  {\n    country: {\n      de: \"St. Helena (Vereinigtes Königreich)\",\n      en: \"St. Helena (United Kingdom)\",\n      fr: \"Sainte-Hélène (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"SH\",\n    cities: cityList.filter(city => city.country === \"SH\" && city.adminCode === \"02\")\n  },\n  {\n    country: {\n      de: \"Tristan da Cunha (Vereinigtes Königreich)\",\n      en: \"Tristan da Cunha (United Kingdom)\",\n      fr: \"Île Tristan da Cunha (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"TA\",\n    cities: cityList.filter(city => city.country === \"SH\" && city.adminCode === \"03\")\n  },\n  {\n    country: {\n      de: \"Sambia\",\n      en: \"Zambia\",\n      fr: \"Zambie\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"ZM\",\n    cities: cityList.filter(city => city.country === \"ZM\")\n  },\n  {\n    country: {\n      de: \"Simbabwe\",\n      en: \"Zimbabwe\",\n      fr: \"Zimbabwe\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"ZW\",\n    cities: cityList.filter(city => city.country === \"ZW\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\",\n      fr: \"Antarctique\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Casey (Australien)\",\n          en: \"Casey (Australia)\",\n          fr: \"Casey (Australie)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Casey\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\",\n      fr: \"Antarctique\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Davis (Australien)\",\n          en: \"Davis (Australia)\",\n          fr: \"Davis (Australie)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Davis\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\",\n      fr: \"Antarctique\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Dumont-d'Urville (Frankreich)\",\n          en: \"Dumont-d'Urville (France)\",\n          fr: \"Dumont-d'Urville (France)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-10\",\n    flag: \"TF\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/DumontDUrville\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\",\n      fr: \"Antarctique\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Mawson (Australien)\",\n          en: \"Mawson (Australia)\",\n          fr: \"Mawson (Australie)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Mawson\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\",\n      fr: \"Antarctique\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"McMurdo (USA)\",\n          en: \"McMurdo (United States)\",\n          fr: \"McMurdo (États-Unis)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/McMurdo\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\",\n      fr: \"Antarctique\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Palmer (USA)\",\n          en: \"Palmer (United States)\",\n          fr: \"Palmer (États-Unis)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+3\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Palmer\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\",\n      fr: \"Antarctique\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Rothera (Vereinigtes Königreich)\",\n          en: \"Rothera (United Kingdom)\",\n          fr: \"Rothera (Royaume-Uni)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+3\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Rothera\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\",\n      fr: \"Antarctique\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Shōwa (Japan)\",\n          en: \"Shōwa (Japan)\",\n          fr: \"Shōwa (Japon)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-3\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Syowa\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\",\n      fr: \"Antarctique\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Troll (Norwegen)\",\n          en: \"Troll (Norway)\",\n          fr: \"Troll (Norvège)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+0\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Troll\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\",\n      fr: \"Antarctique\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Wostok (Russland)\",\n          en: \"Vostok (Russia)\",\n          fr: \"Vostok (Russie)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Vostok\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Australien\",\n      en: \"Australia\",\n      fr: \"Australie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Westaustralien\",\n          en: \"Western Australia\",\n          fr: \"Australie occidentale\"\n        }\n      } // 08\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"AU\",\n    cities: cityList.filter(city => city.country === \"AU\" && city.adminCode === \"08\")\n  },\n  {\n    country: {\n      de: \"Australien\",\n      en: \"Australia\",\n      fr: \"Australie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Nordterritorium\",\n          en: \"Northern Territory\",\n          fr: \"Territoire du Nord\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Südaustralien\",\n          en: \"South Australia\",\n          fr: \"Australie méridionale\"\n        }\n      }, // 05\n    ],\n    zone: \"Etc/GMT-9\",\n    flag: \"AU\",\n    cities: cityList.filter(city => city.country === \"AU\" && [\"03\",\"05\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Australien\",\n      en: \"Australia\",\n      fr: \"Australie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Australisches Hauptstadtterritorium\",\n          en: \"Australian Capital Territory\",\n          fr: \"Territoire de la capitale australienne\"\n        }\n      }, // 01\n      {\n        title: {\n          de: \"Neusüdwales\",\n          en: \"New South Wales\",\n          fr: \"Nouvelle-Galles du Sud\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Queensland\",\n          en: \"Queensland\",\n          fr: \"Queensland\"\n        }\n      }, // 04\n      {\n        title: {\n          de: \"Tasmanien\",\n          en: \"Tasmania\",\n          fr: \"Tasmanie\"\n        }\n      }, // 06\n      {\n        title: {\n          de: \"Victoria\",\n          en: \"Victoria\",\n          fr: \"Victoria\"\n        }\n      } // 07\n    ],\n    zone: \"Etc/GMT-10\",\n    flag: \"AU\",\n    cities: cityList.filter(city => city.country === \"AU\" && [\"01\",\"02\",\"04\",\"06\",\"07\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Australien\",\n      en: \"Australia\",\n      fr: \"Australie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Lord-Howe-Inselgruppe\",\n          en: \"Lord Howe Island\",\n          fr: \"Île Lord Howe\"\n        }\n      },\n      {\n        title: {\n          de: \"Norfolkinsel\",\n          en: \"Norfolk Island\",\n          fr: \"Île Norfolk\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"AU\",\n    cities: []\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Kanada\",\n      en: \"Canada\",\n      fr: \"Canada\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Neufundland und Labrador\",\n          en: \"Newfoundland and Labrador\",\n          fr: \"Terre-Neuve et Labrador\"\n        }\n      }, // 05\n      {\n        title: {\n          de: \"New Brunswick\",\n          en: \"New Brunswick\",\n          fr: \"Nouveau-Brunswick\"\n        }\n      }, // 04\n      {\n        title: {\n          de: \"Nova Scotia\",\n          en: \"Nova Scotia\",\n          fr: \"Nouvelle-Écosse\"\n        }\n      }, // 07\n      {\n        title: {\n          de: \"Nunavut\",\n          en: \"Nunavut\",\n          fr: \"Nunavut\"\n        }, \n        extra: {\n          de: \"(östlich von 67.5° W)\",\n          en: \"(east of 67.5° W)\",\n          fr: \"(est de 67.5° O)\"\n        }\n      }, // 14\n      {\n        title: {\n          de: \"Prince Edward Island\",\n          en: \"Prince Edward Island\",\n          fr: \"Île-du-Prince-Édouard\"\n        }\n      }, // 09\n      {\n        title: {\n          de: \"Québec\",\n          en: \"Quebec\",\n          fr: \"Québec\"\n        },\n        extra: {\n          de: \"(östlicher Teil)\",\n          en: \"(eastern part)\",\n          fr: \"(est)\"\n        }\n      } // 10\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if (city.country === \"CA\") {\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"10\" && city.lon >= -67.5) return true\n        if(city.adminCode === \"14\" && city.lon >= -67.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kanada\",\n      en: \"Canada\",\n      fr: \"Canada\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Nunavut\",\n          en: \"Nunavut\",\n          fr: \"Nunavut\"\n        },\n        extra: {\n          de: \"(82.5° W – 67.5° W)\",\n          en: \"(82.5° W - 67.5° W)\",\n          fr: \"(82.5° O - 67.5° O)\"\n        }\n      }, // 14\n      {\n        title: {\n          de: \"Ontario\",\n          en: \"Ontario\",\n          fr: \"Ontario\"\n        },\n        extra: {\n          de: \"(östlicher Teil)\",\n          en: \"(eastern part)\",\n          fr: \"(est)\"\n        }\n      }, // 08\n      {\n        title: {\n          de: \"Québec\",\n          en: \"Quebec\",\n          fr: \"Québec\"\n        },\n        extra: {\n          de: \"(westlicher Teil)\",\n          en: \"(western part)\",\n          fr: \"(ouest)\"\n        }\n      } // 10\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CA\") {\n        if (city.adminCode === \"08\" && city.lon >= -82.5) return true\n        if (city.adminCode === \"10\" && city.lon < -67.5) return true\n        if (city.adminCode === \"14\" && city.lon >= -82.5 && city.lon < -67.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kanada\",\n      en: \"Canada\",\n      fr: \"Canada\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Manitoba\",\n          en: \"Manitoba\",\n          fr: \"Manitoba\"\n        }, \n        extra: {\n          de: \"(östlicher Teil)\",\n          en: \"(eastern part)\",\n          fr: \"(est)\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Nunavut\",\n          en: \"Nunavut\",\n          fr: \"Nunavut\"\n        },\n        extra: {\n          de: \"(97.5° W – 82.5° W)\",\n          en: \"(97.5° W - 82.5° W)\",\n          fr: \"(97.5° O - 82.5° O)\"\n        }\n      }, // 14\n      {\n        title: {\n          de: \"Ontario\",\n          en: \"Ontario\",\n          fr: \"Ontario\"\n        },\n        extra: {\n          de: \"(westlicher Teil)\",\n          en: \"(western part)\",\n          fr: \"(ouest)\"\n        }\n      } // 08\n    ],\n    zone: \"Etc/GMT+6\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CA\") {\n        if(city.adminCode === \"03\" && city.lon >= -97.5) return true\n        if(city.adminCode === \"08\" && city.lon < -82.5) return true\n        if(city.adminCode === \"14\" && city.lon >= -97.5 && city.lon < -82.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kanada\",\n      en: \"Canada\",\n      fr: \"Canada\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Manitoba\",\n          en: \"Manitoba\",\n          fr: \"Manitoba\"\n        }, \n        extra: {\n          de: \"(westlicher Teil)\",\n          en: \"(western part)\",\n          fr: \"(ouest)\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Nordwest-Territorien\",\n          en: \"Northwest Territories\",\n          fr: \"Territoires du Nord-Ouest\"\n        }, \n        extra: {\n          de: \"(östlicher Teil)\",\n          en: \"(eastern part)\",\n          fr: \"(est)\"\n        }\n      }, // 13\n      {\n        title: {\n          de: \"Nunavut\",\n          en: \"Nunavut\",\n          fr: \"Nunavut\"\n        },\n        extra: {\n          de: \"(112.5° W – 97.5° W)\",\n          en: \"(112.5° W - 97.5° W)\",\n          fr: \"(112.5° O - 97.5° O)\"\n        }\n      }, // 14\n      {title: \"Saskatchewan\"} // 11\n    ],\n    zone: \"Etc/GMT+7\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if (city.country === \"CA\") {\n        if(city.adminCode === \"03\" && city.lon < -97.5) return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"13\" && city.lon >= -112.5) return true\n        if(city.adminCode === \"14\" && city.lon >= -112.5 && city.lon < -97.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kanada\",\n      en: \"Canada\",\n      fr: \"Canada\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Alberta\",\n          en: \"Alberta\",\n          fr: \"Alberta\"\n        }\n      }, // 01\n      {\n        title: {\n          de: \"British Columbia\",\n          en: \"British Columbia\",\n          fr: \"Colombie-Britannique\"\n        },\n        extra: {\n          de: \"(östlicher Teil)\",\n          en: \"(eastern part)\",\n          fr: \"(est)\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Nordwest-Territorien\",\n          en: \"Northwest Territories\",\n          fr: \"Territoires du Nord-Ouest\"\n        }, \n        extra: {\n          de: \"(mittlerer Teil)\",\n          en: \"(central part)\",\n          fr: \"(central)\"\n        }\n      }, // 13\n      {\n        title: {\n          de: \"Nunavut\",\n          en: \"Nunavut\",\n          fr: \"Nunavut\"\n        },\n        extra: {\n          de: \"(westlich von 112.5° W)\",\n          en: \"(west of 112.5° W)\",\n          fr: \"(ouest de 112.5° O)\"\n        }\n      } // 14\n    ],\n    zone: \"Etc/GMT+8\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if (city.country === \"CA\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"02\" && city.lon >= -127.5) return true\n        if(city.adminCode === \"13\" && city.lon >= -127.5 && city.lon < -112.5) return true\n        if(city.adminCode === \"14\" && city.lon < -112.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kanada\",\n      en: \"Canada\",\n      fr: \"Canada\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"British Columbia\",\n          en: \"British Columbia\",\n          fr: \"Colombie-Britannique\"\n        },\n        extra: {\n          de: \"(westlicher Teil)\",\n          en: \"(western part)\",\n          fr: \"(ouest)\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Nordwest-Territorien\",\n          en: \"Northwest Territories\",\n          fr: \"Territoires du Nord-Ouest\"\n        }, \n        extra: {\n          de: \"(westlicher Teil)\",\n          en: \"(western part)\",\n          fr: \"(ouest)\"\n        }\n      }, // 13\n      {\n        title: {\n          de: \"Yukon\",\n          en: \"Yukon\",\n          fr: \"Yukon\"\n        }\n      } // 12\n    ],\n    zone: \"Etc/GMT+9\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CA\") {\n        if(city.adminCode === \"02\" && city.lon < -127.5) return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"13\" && city.lon < -127.5) return true\n        return false\n      }\n      return false\n    })\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Amerikanische Jungferninseln (USA)\",\n      en: \"American Virgin Islands (United States)\",\n      fr: \"Îles Vierges des États-Unis (États-Unis)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"VI\",\n    cities: cityList.filter(city => city.country === \"VI\")\n  },\n  {\n    country: {\n      de: \"Anguilla (Vereinigtes Königreich)\",\n      en: \"Anguilla (United Kingdom)\",\n      fr: \"Anguilla (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"AI\",\n    cities: cityList.filter(city => city.country === \"AI\")\n  },\n  {\n    country: {\n      de: \"Antigua und Barbuda\",\n      en: \"Antigua and Barbuda\",\n      fr: \"Antigua-et-Barbuda\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"AG\",\n    cities: cityList.filter(city => city.country === \"AG\")\n  },\n  {\n    country: {\n      de: \"Aruba (Niederlande)\",\n      en: \"Aruba (Netherlands)\",\n      fr: \"Aruba (Pays-Bas)\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"AW\",\n    cities: cityList.filter(city => city.country === \"AW\")\n  },\n  {\n    country: {\n      de: \"Bahamas\",\n      en: \"Bahamas\",\n      fr: \"Bahamas\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"BS\",\n    cities: cityList.filter(city => city.country === \"BS\")\n  },\n  {\n    country: {\n      de: \"Barbados\",\n      en: \"Barbados\",\n      fr: \"Barbade\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"BB\",\n    cities: cityList.filter(city => city.country === \"BB\")\n  },\n  {\n    country: {\n      de: \"Bermuda (Vereinigtes Königreich)\",\n      en: \"Bermuda (United Kingdom)\",\n      fr: \"Bermudes (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"BM\",\n    cities: cityList.filter(city => city.country === \"BM\")\n  },\n  {\n    country: {\n      de: \"Britische Jungferninseln (Vereinigtes Königreich)\",\n      en: \"British Virgin Islands (United Kingdom)\",\n      fr: \"Îles Vierges britanniques (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"VG\",\n    cities: cityList.filter(city => city.country === \"VG\")\n  },\n  {\n    country: {\n      de: \"Cayman Islands (Vereinigtes Königreich)\",\n      en: \"Cayman Islands (United Kingdom)\",\n      fr: \"Îles Caïmans (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"KY\",\n    cities: cityList.filter(city => city.country === \"KY\")\n  },\n  {\n    country: {\n      de: \"Kuba\",\n      en: \"Cuba\",\n      fr: \"Cuba\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"CU\",\n    cities: cityList.filter(city => city.country === \"CU\")\n  },\n  {\n    country: {\n      de: \"Curaçao (Niederlande)\",\n      en: \"Curaçao (Netherlands)\",\n      fr: \"Curaçao (Pays-Bas)\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"CW\",\n    cities: cityList.filter(city => city.country === \"CW\")\n  },\n  {\n    country: {\n      de: \"Dominica\",\n      en: \"Dominica\",\n      fr: \"Dominique\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"DM\",\n    cities: cityList.filter(city => city.country === \"DM\")\n  },\n  {\n    country: {\n      de: \"Dominikanische Republik\",\n      en: \"Dominican Republic\",\n      fr: \"République dominicaine\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"DO\",\n    cities: cityList.filter(city => city.country === \"DO\")\n  },\n  {\n    country: {\n      de: \"Guadeloupe (Frankreich)\",\n      en: \"Guadeloupe (France)\",\n      fr: \"Guadeloupe (France)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"GP\",\n    cities: cityList.filter(city => city.country === \"GP\")\n  },\n  {\n    country: {\n      de: \"Frankreich\",\n      en: \"France\",\n      fr: \"France\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Saint-Martin\",\n          en: \"Saint-Martin\",\n          fr: \"Saint-Martin\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"FR\", // eigentlich MF\n    cities: cityList.filter(city => city.country === \"MF\")\n  },\n  {\n    country: {\n      de: \"Saint-Barthélemy (Frankreich)\",\n      en: \"Saint-Barthélemy (France)\",\n      fr: \"Saint-Barthélemy (France)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"BL\",\n    cities: cityList.filter(city => city.country === \"BL\")\n  },\n  {\n    country: {\n      de: \"Saint-Pierre und Miquelon (Frankreich)\",\n      en: \"Saint-Pierre and Miquelon (France)\",\n      fr: \"Saint-Pierre-et-Miquelon (France)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"PM\",\n    cities: cityList.filter(city => city.country === \"PM\")\n  },\n  {\n    country: {\n      de: \"Grenada\",\n      en: \"Grenada\",\n      fr: \"Grenade\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"GD\",\n    cities: cityList.filter(city => city.country === \"GD\")\n  },\n  {\n    country: {\n      de: \"Haiti\",\n      en: \"Haiti\",\n      fr: \"Haïti\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"HT\",\n    cities: cityList.filter(city => city.country === \"HT\")\n  },\n  {\n    country: {\n      de: \"Jamaika\",\n      en: \"Jamaica\",\n      fr: \"Jamaïque\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"JM\",\n    cities: cityList.filter(city => city.country === \"JM\")\n  },\n  {\n    country: {\n      de: \"Martinique (Frankreich)\",\n      en: \"Martinique (France)\",\n      fr: \"Martinique (France)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"MQ\",\n    cities: cityList.filter(city => city.country === \"MQ\")\n  },\n  {\n    country: {\n      de: \"Montserrat (Vereinigtes Königreich)\",\n      en: \"Montserrat (United Kingdom)\",\n      fr: \"Montserrat (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"MS\",\n    cities: cityList.filter(city => city.country === \"MS\")\n  },\n  {\n    country: {\n      de: \"Bonaire, Saba, Sint Eustatius (Niederlande)\",\n      en: \"Bonaire, Saba, Sint Eustatius (Netherlands)\",\n      fr: \"Bonaire, Saba, Saint-Eustache (Pays-Bas)\"\n    },\n    subdiv: [\n      {title: \"Bonaire\"}, \n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"BQ\",\n    cities: cityList.filter(city => city.country === \"BQ\" && city.adminCode === \"BO\")\n  },\n  {\n    country: {\n      de: \"Bonaire, Saba, Sint Eustatius (Niederlande)\",\n      en: \"Bonaire, Saba, Sint Eustatius (Netherlands)\",\n      fr: \"Bonaire, Saba, Saint-Eustache (Pays-Bas)\"\n    },\n    subdiv: [\n      {title: \"Saba\"}, \n      {\n        title: {\n          de: \"Sint Eustatius\",\n          en: \"Sint Eustatius\",\n          fr: \"Saint-Eustache\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"BQ\",\n    cities: cityList.filter(city => city.country === \"BQ\" && [\"SB\", \"SE\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Puerto Rico (USA)\",\n      en: \"Puerto Rico (United States)\",\n      fr: \"Porto Rico (États-Unis)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"PR\",\n    cities: cityList.filter(city => city.country === \"PR\")\n  },\n  {\n    country: {\n      de: \"St. Kitts und Nevis\",\n      en: \"Saint Kitts and Nevis\",\n      fr: \"Saint-Christophe-et-Niévès\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"KN\",\n    cities: cityList.filter(city => city.country === \"KN\")\n  },\n  {\n    country: {\n      de: \"St. Lucia\",\n      en: \"Saint Lucia\",\n      fr: \"Sainte-Lucie\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"LC\",\n    cities: cityList.filter(city => city.country === \"LC\")\n  },\n  {\n    country: {\n      de: \"St. Vincent und die Grenadinen\",\n      en: \"Saint Vincent and the Grenadines\",\n      fr: \"Saint-Vincent-et-les-Grenadines\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"VC\",\n    cities: cityList.filter(city => city.country === \"VC\")\n  },\n  {\n    country: {\n      de: \"Sint Maarten (Niederlande)\",\n      en: \"Sint Maarten (Netherlands)\",\n      fr: \"Saint-Martin (Pays-Bas)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"SX\",\n    cities: cityList.filter(city => city.country === \"SX\")\n  },\n  {\n    country: {\n      de: \"Trinidad und Tobago\",\n      en: \"Trinidad and Tobago\",\n      fr: \"Trinité-et-Tobago\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"TT\",\n    cities: cityList.filter(city => city.country === \"TT\")\n  },\n  {\n    country: {\n      de: \"Turks- und Caicosinseln (Vereinigtes Königreich)\",\n      en: \"Turks and Caicos Islands (United Kingdom)\",\n      fr: \"Îles Turques-et-Caïques (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"TC\",\n    cities: cityList.filter(city => city.country === \"TC\")\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Belize\",\n      en: \"Belize\",\n      fr: \"Belize\"\n    },\n    zone: \"Etc/GMT+7\",\n    flag: \"BZ\",\n    cities: cityList.filter(city => city.country === \"BZ\")\n  },\n  {\n    country: {\n      de: \"Costa Rica\",\n      en: \"Costa Rica\",\n      fr: \"Costa Rica\"\n    },\n    zone: \"Etc/GMT+6\",\n    flag: \"CR\",\n    cities: cityList.filter(city => city.country === \"CR\")\n  },\n  {\n    country: {\n      de: \"El Salvador\",\n      en: \"El Salvador\",\n      fr: \"Salvador\"\n    },\n    zone: \"Etc/GMT+6\",\n    flag: \"SV\",\n    cities: cityList.filter(city => city.country === \"SV\")\n  },\n  {\n    country: {\n      de: \"Guatemala\",\n      en: \"Guatemala\",\n      fr: \"Guatemala\"\n    },\n    zone: \"Etc/GMT+6\",\n    flag: \"GT\",\n    cities: cityList.filter(city => city.country === \"GT\")\n  },\n  {\n    country: {\n      de: \"Honduras\",\n      en: \"Honduras\",\n      fr: \"Honduras\"\n    },\n    zone: \"Etc/GMT+6\",\n    flag: \"HN\",\n    cities: cityList.filter(city => city.country === \"HN\")\n  },\n  {\n    country: {\n      de: \"Mexiko\",\n      en: \"Mexico\",\n      fr: \"Mexique\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Baja California\",\n          en: \"Baja California\",\n          fr: \"Basse-Californie\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Baja California Sur\",\n          en: \"Baja California Sur\",\n          fr: \"Basse-Californie du Sud\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Revillagigedo-Inseln\",\n          en: \"Revillagigedo Islands\",\n          fr: \"Îles Revillagigedo\"\n        }\n      } // nur 45 Einwohner, deshalb \n    ],\n    zone: \"Etc/GMT+8\",\n    flag: \"MX\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MX\") {\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"03\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Mexiko\",\n      en: \"Mexico\",\n      fr: \"Mexique\"\n    },\n    subdiv: [\n      {title: \"Aguascalientes\"}, // 01\n      {title: \"Chihuahua\"}, // 06\n      {title: \"Coahuila\"}, // 07\n      {title: \"Colima\"}, // 08\n      {title: \"Durango\"}, // 10\n      {title: \"Guanajuato\"}, // 11\n      {title: \"Guerrero\"}, // 12\n      {title: \"Hidalgo\"}, // 13\n      {title: \"Jalisco\"}, // 14\n      {title: \"México\"}, // 15\n      {\n        title: {\n          de: \"Mexiko-Stadt\",\n          en: \"Mexico City\",\n          fr: \"Ville de Mexico\"\n        }\n      }, // 09\n      {title: \"Michoacán\"}, // 16\n      {title: \"Morelos\"}, // 17\n      {title: \"Nayarit\"}, // 18\n      {title: \"Nuevo León\"}, // 19\n      {title: \"Puebla\"}, // 21\n      {title: \"Querétaro\"}, // 22\n      {title: \"San Luis Potosí\"}, // 24 \n      {title: \"Sinaloa\"}, // 25\n      {title: \"Sonora\"}, // 26\n      {title: \"Tamaulipas\"}, // 28\n      {title: \"Tlaxcala\"}, // 29\n      {title: \"Zacatecas\"} // 32\n    ],\n    zone: \"Etc/GMT+7\",\n    flag: \"MX\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MX\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"06\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\") return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"15\") return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"17\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"19\") return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"22\") return true\n        if(city.adminCode === \"24\") return true\n        if(city.adminCode === \"25\") return true\n        if(city.adminCode === \"26\") return true\n        if(city.adminCode === \"28\") return true\n        if(city.adminCode === \"29\") return true\n        if(city.adminCode === \"32\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Mexiko\",\n      en: \"Mexico\",\n      fr: \"Mexique\"\n    },\n    subdiv: [\n      {title: \"Campeche\"}, // 04\n      {title: \"Chiapas\"}, // 05\n      {title: \"Oaxaca\"}, // 20\n      {title: \"Quintana Roo\"}, // 23\n      {title: \"Tabasco\"}, // 27\n      {title: \"Veracruz\"}, // 30\n      {title: \"Yucatán\"}, // 31\n    ],\n    zone: \"Etc/GMT+6\",\n    flag: \"MX\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MX\") {\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"20\") return true\n        if(city.adminCode === \"23\") return true\n        if(city.adminCode === \"27\") return true\n        if(city.adminCode === \"30\") return true\n        if(city.adminCode === \"31\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Nicaragua\",\n      en: \"Nicaragua\",\n      fr: \"Nicaragua\"\n    },\n    zone: \"Etc/GMT+6\",\n    flag: \"NI\",\n    cities: cityList.filter(city => city.country === \"NI\")\n  },\n  {\n    country: {\n      de: \"Panama\",\n      en: \"Panama\",\n      fr: \"Panama\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"PA\",\n    cities: cityList.filter(city => city.country === \"PA\")\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Kasachstan\",\n      en: \"Kazakhstan\",\n      fr: \"Kazakhstan\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Oblys Atyrau\",\n          en: \"Atyrau Region\",\n          fr: \"Oblys d'Atyraw\"\n        }\n      }, // 06\n      {\n        title: {\n          de: \"Oblys Mangghystau\",\n          en: \"Mangystau Region\",\n          fr: \"Oblys de Mañğıstaw\"\n        }\n      }, // 09\n      {\n        title: {\n          de: \"Oblys Westkasachstan\",\n          en: \"West Kazakhstan Region\",\n          fr: \"Oblys du Kazakhstan-Occidental\"\n        }\n      } // 07\n    ],\n    zone: \"Etc/GMT-3\",\n    flag: \"KZ\",\n    cities : cityList.filter(city => {\n      if(city.country === \"KZ\") {\n        if(city.adminCode === \"06\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"09\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kasachstan\",\n      en: \"Kazakhstan\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Oblys Aqtöbe\",\n          en: \"Aktobe Region\",\n          fr: \"Oblys d'Aqtöbe\"\n        }\n      }, // 04\n      {\n        title: {\n          de: \"Oblys Qostonai\",\n          en: \"Kostanay Region\",\n          fr: \"Oblys de Kostanaï\"\n        }\n      }, // 13\n      {\n        title: {\n          de: \"Oblys Qysylorda\",\n          en: \"Kyzylorda Region\",\n          fr: \"Oblys de Qızılorda\"\n        }\n      }, // 14\n      {\n        title: {\n          de: \"Baikonur\",\n          en: \"Baykonyr\",\n          fr: \"Baïkonour\"\n        }\n      } // 18\n    ],\n    zone: \"Etc/GMT-4\",\n    flag: \"KZ\",\n    cities: cityList.filter(city => {\n      if(city.country === \"KZ\") {\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"18\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kasachstan\",\n      en: \"Kazakhstan\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Oblys Akmola\",\n          en: \"Akmola Region\",\n          fr: \"Oblys d'Aqmola\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Oblys Almaty\",\n          en: \"Almaty Region\",\n          fr: \"Oblys d'Almaty\"\n        }\n      }, // 01\n      {\n        title: {\n          de: \"Almaty\",\n          en: \"Almaty\",\n          fr: \"Almaty\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Astana\",\n          en: \"Astana\",\n          fr: \"Astana\"\n        }\n      }, // 05\n      {\n        title: {\n          de: \"Oblys Ostkasachstan\",\n          en: \"East Kazakhstan Region\",\n          fr: \"Oblys du Kazakhstan-Oriental\"\n        }\n      }, // 15\n      {\n        title: {\n          de: \"Oblys Schambyl\",\n          en: \"Jambyl Region\",\n          fr: \"Oblys de Jambıl\"\n        }\n      }, // 17\n      {\n        title: {\n          de: \"Oblys Qaraghandy\",\n          en: \"Karaganda Region\",\n          fr: \"Oblys de Karaganda\"\n        }\n      }, // 12\n      {\n        title: {\n          de: \"Oblys Nordkasachstan\",\n          en: \"North Kazakhstan Region\",\n          fr: \"Oblys du Kazakhstan-Septentrional\"\n        }\n      }, // 16 \n      {\n        title: {\n          de: \"Oblys Pawlodar\",\n          en: \"Pavlodar Region\",\n          fr: \"Oblys de Pavlodar\"\n        }\n      }, // 11\n      {\n        title: {\n          de: \"Oblys Türkistan\",\n          en: \"Turkistan Region\",\n          fr: \"Oblys de Turkestan\"\n        }\n      }, // 10\n      {\n        title: {\n          de: \"Schymkent\",\n          en: \"Shymkent\",\n          fr: \"Chimkent\"\n        }\n      } // 1537272\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"KZ\",\n    cities: cityList.filter(city => {\n      if(city.country === \"KZ\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"15\") return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"17\") return true\n        if(city.adminCode === \"1537272\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kirgisistan\",\n      en: \"Kyrgyzstan\",\n      fr: \"Kirghizistan\"\n    },\n    zone: \"Etc/GMT-5\",\n    flag: \"KG\",\n    cities: cityList.filter(city => city.country === \"KG\")\n  },\n  {\n    country: {\n      de: \"Tadschikistan\",\n      en: \"Tajikistan\",\n      fr: \"Tadjikistan\"\n    },\n    zone: \"Etc/GMT-5\",\n    flag: \"TJ\",\n    cities: cityList.filter(city => city.country === \"TJ\")\n  },\n  {\n    country: {\n      de: \"Turkmenistan\",\n      en: \"Turkmenistan\",\n      fr: \"Turkménistan\"\n    },\n    zone: \"Etc/GMT-4\",\n    flag: \"TM\",\n    cities: cityList.filter(city => city.country === \"TM\")\n  },\n  {\n    country: {\n      de: \"Usbekistan\",\n      en: \"Uzbekistan\",\n      fr: \"Ouzbékistan\"\n    },\n    zone: \"Etc/GMT-4\",\n    flag: \"UZ\",\n    cities: cityList.filter(city => city.country === \"UZ\")\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Volksrepublik China\",\n      en: \"People's Republic of China\",\n      fr: \"République populaire de Chine\"\n    },\n    subdiv: [\n      {\n        title: \"Tibet\", \n        extra: {\n          de: \"(westlich von 82.5° O)\",\n          en: \"(west of 82.5° E)\",\n          fr: \"(ouest de 82.5° E)\"\n        }\n      }, // 14\n      {\n        title: \"Xinjiang\", \n        extra: {\n          de: \"(westlich von 82.5° O)\",\n          en: \"(west of 82.5° E)\",\n          fr: \"(ouest de 82.5° E)\"\n        }\n      }, // 13\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"13\" && city.lon < 82.5) return true\n        if(city.adminCode === \"14\" && city.lon < 82.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Volksrepublik China\",\n      en: \"People's Republic of China\",\n      fr: \"République populaire de Chine\"\n    },\n    subdiv: [\n      {\n        title: \"Gansu\", \n        extra: {\n          de: \"(westlich von 97.5° O)\",\n          en: \"(west of 97.5° E)\",\n          fr: \"(ouest de 97.5° E)\"\n        }\n      }, // 15\n      {\n        title: \"Qinghai\", \n        extra: {\n          de: \"(westlich von 97.5° O)\",\n          en: \"(west of 97.5° E)\",\n          fr: \"(ouest de 97.5° E)\"\n        }\n      }, // 06\n      {\n        title: \"Tibet\", \n        extra: {\n          de: \"(östlich von 82.5° O)\",\n          en: \"(east of 82.5° E)\",\n          fr: \"(est de 82.5° E)\"\n        }\n      }, // 14\n      {\n        title: \"Xinjiang\", \n        extra: {\n          de: \"(östlich von 82.5° O)\",\n          en: \"(east of 82.5° E)\",\n          fr: \"(est de 82.5° E)\"\n        }\n      }, // 13\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"06\" && city.lon < 97.5) return true\n        if(city.adminCode === \"13\" && city.lon >= 82.5) return true\n        if(city.adminCode === \"14\" && city.lon >= 82.5) return true\n        if(city.adminCode === \"15\" && city.lon < 97.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Volksrepublik China\",\n      en: \"People's Republic of China\",\n      fr: \"République populaire de Chine\"\n    },\n    subdiv: [\n      {title: \"Chongqing\"}, // 33\n      {\n        title: \"Gansu\", \n        extra: {\n          de: \"(östlich von 97.5° O)\",\n          en: \"(east of 97.5° E)\",\n          fr: \"(est de 97.5° E)\"\n        }\n      }, // 15\n      {\n        title: \"Guangdong\", \n        extra: {\n          de: \"(westlich von 112.5° O)\",\n          en: \"(west of 112.5° E)\",\n          fr: \"(ouest de 112.5° E)\"\n        }\n      }, // 30\n      {title: \"Guangxi Zhuang\"}, // 16\n      {title: \"Guizhou\"}, // 18\n      {title: \"Hainan\"}, // 31\n      {\n        title: \"Hubei\", \n        extra: {\n          de: \"(westlich von 112.5° O)\",\n          en: \"(west of 112.5° E)\",\n          fr: \"(ouest de 112.5° E)\"\n        }\n      }, // 12\n      {title: \"Hunan\"}, // 11\n      {\n        title: {\n          de: \"Innere Mongolei\",\n          en: \"Inner Mongolia\",\n          fr: \"Mongolie-Intérieure\"\n        }, \n        extra: {\n          de: \"(westlich von 112.5° O)\",\n          en: \"(west of 112.5° E)\",\n          fr: \"(ouest de 112.5° E)\"\n        }\n      }, // 20\n      {title: \"Ningxia\"}, // 21\n      {\n        title: \"Qinghai\", \n        extra: {\n          de: \"(östlich von 97.5° E)\",\n          en: \"(east of 97.5° E)\",\n          fr: \"(est de 97.5° E)\"\n        }\n      }, // 06\n      {title: \"Shaanxi\"}, // 26\n      {title: \"Shanxi\"}, // 24\n      {title: \"Sichuan\"}, // 32\n      {title: \"Yunnan\"}, // 29\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"06\" && city.lon >= 97.5) return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"12\" && city.lon < 112.5) return true\n        if(city.adminCode === \"15\" && city.lon >= 97.5) return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"20\" && city.lon < 112.5) return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"24\") return true\n        if(city.adminCode === \"26\") return true\n        if(city.adminCode === \"29\") return true\n        if(city.adminCode === \"30\" && city.lon < 112.5) return true\n        if(city.adminCode === \"31\") return true\n        if(city.adminCode === \"32\") return true\n        if(city.adminCode === \"33\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Volksrepublik China\",\n      en: \"People's Republic of China\",\n      fr: \"République populaire de Chine\"\n    },\n    subdiv: [\n      {title: \"Anhui\"}, // 01\n      {\n        title: {\n          de: \"Peking\",\n          en: \"Beijing\",\n          fr: \"Pékin\"\n        }\n      }, // 22\n      {title: \"Fujian\"}, // 07\n      {\n        title: \"Guangdong\", \n        extra: {\n          de: \"(östlich von 112.5° O)\",\n          en: \"(east of 112.5° E)\",\n          fr: \"(est de 112.5° E)\"\n        }\n      }, // 30\n      {title: \"Hebei\"}, // 10\n      {title: \"Henan\"}, // 09\n      {\n        title: \"Hubei\", \n        extra: {\n          de: \"(östlich von 112.5° O)\",\n          en: \"(east of 112.5° E)\",\n          fr: \"(est de 112.5° E)\"\n        }\n      }, // 12\n      {\n        title: \"Heilongjiang\", \n        extra: {\n          de: \"(westlich von 127.5° O)\",\n          en: \"(west of 127.5° E)\",\n          fr: \"(ouest de 127.5° E)\"\n        }\n      }, // 08\n      {\n        title: {\n          de: \"Innere Mongolei\",\n          en: \"Inner Mongolia\",\n          fr: \"Mongolie-Intérieure\"\n        }, \n        extra: {\n          de: \"(östlich von 112.5° O)\",\n          en: \"(east of 112.5° E)\",\n          fr: \"(est de 112.5° E)\"\n        }\n      }, // 20\n      {title: \"Jiangsu\"}, // 04\n      {title: \"Jiangxi\"}, // 03\n      {\n        title: \"Jilin\", \n        extra: {\n          de: \"(westlich von 127.5° O)\",\n          en: \"(west of 127.5° E)\",\n          fr: \"(ouest de 127.5° E)\"\n        }\n      }, // 05\n      {title: \"Liaoning\"}, // 19\n      {title: \"Shandong\"}, // 25\n      {\n        title: {\n          de: \"Schanghai\",\n          en: \"Shanghai\",\n          fr: \"Shanghai\"\n        }\n      }, // 23\n      {title: \"Tianjin\"}, // 28\n      {title: \"Zhejiang\"}, // 02\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\" && city.lon < 127.5) return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\" && city.lon < 127.5) return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"12\" && city.lon >= 112.5) return true\n        if(city.adminCode === \"19\") return true\n        if(city.adminCode === \"20\" && city.lon >= 112.5) return true\n        if(city.adminCode === \"22\") return true\n        if(city.adminCode === \"23\") return true\n        if(city.adminCode === \"25\") return true\n        if(city.adminCode === \"28\") return true\n        if(city.adminCode === \"30\" && city.lon >= 112.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Volksrepublik China\",\n      en: \"People's Republic of China\",\n      fr: \"République populaire de Chine\"\n    },\n    subdiv: [\n      {\n        title: \"Heilongjiang\", \n        extra: {\n          de: \"(östlich von 127.5° O)\",\n          en: \"(east of 127.5° E)\",\n          fr: \"(est de 127.5° E)\"\n        }\n      }, // 08\n      {\n        title: \"Jilin\", \n        extra: {\n          de: \"(östlich von 127.5° O)\",\n          en: \"(east of 127.5° E)\",\n          fr: \"(est de 127.5° E)\"\n        }\n      }, // 05\n    ],\n    zone: \"Etc/GMT-9\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"05\" && city.lon >= 127.5) return true\n        if(city.adminCode === \"08\" && city.lon >= 127.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Hongkong (VR China)\",\n      en: \"Hong Kong (PR of China)\",\n      fr: \"Hong Kong (RP de Chine)\"\n    },\n    zone: \"Etc/GMT-8\",\n    flag: \"HK\",\n    cities: cityList.filter(city => city.country === \"HK\")\n  },\n  {\n    country: {\n      de: \"Japan\",\n      en: \"Japan\",\n      fr: \"Japon\"\n    },\n    zone: \"Etc/GMT-9\",\n    flag: \"JP\",\n    cities: cityList.filter(city => city.country === \"JP\")\n  },\n  {\n    country: {\n      de: \"Macau (VR China)\",\n      en: \"Macau (PR of China)\",\n      fr: \"Macao (RP de Chine)\"\n    },\n    zone: \"Etc/GMT-8\",\n    flag: \"MO\",\n    cities: cityList.filter(city => city.country === \"MO\")\n  },\n  {\n    country: {\n      de: \"Mongolei\",\n      en: \"Mongolia\",\n      fr: \"Mongolie\"\n    },\n    subdiv: [\n      {title: \"Bayan-Ölgii\"}, // 03\n      {title: \"Govi-Altai\"}, // 10\n      {title: \"Khovd\"}, // 12\n      {title: \"Uvs\"}, // 19\n      {title: \"Zavkhan\"} // 09\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"MN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MN\") {\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"19\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Mongolei\",\n      en: \"Mongolia\",\n      fr: \"Mongolie\"\n    },\n    subdiv: [\n      {title: \"Arkhangai\"}, // 01\n      {title: \"Bayankhongor\"}, // 02\n      {title: \"Bulgan\"}, // 21\n      {title: \"Darkhan-Uul\"}, // 23\n      {title: \"Dornogovi\"}, // 07\n      {title: \"Dundgovi\"}, // 08\n      {title: \"Govisümber\"}, // 24\n      {title: \"Khentii\"}, // 11\n      {title: \"Khövsgöl\"}, // 13\n      {title: \"Orkhon\"}, // 25\n      {title: \"Selenge\"}, // 16\n      {title: \"Töv\"}, // 18\n      {title: \"Ömnögovi\"}, // 14\n      {title: \"Övörkhanghai\"} // 15\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"MN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MN\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"15\") return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"23\") return true\n        if(city.adminCode === \"24\") return true\n        if(city.adminCode === \"25\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Mongolei\",\n      en: \"Mongolia\",\n      fr: \"Mongolie\"\n    },\n    subdiv: [\n      {title: \"Dornod\"}, // 06\n      {title: \"Sükhbaatar\"} // 17\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"MN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MN\") {\n        if(city.adminCode === \"06\") return true\n        if(city.adminCode === \"17\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Nordkorea\",\n      en: \"North Korea\",\n      fr: \"Corée du Nord\"\n    },\n    zone: \"Etc/GMT-9\",\n    flag: \"KP\",\n    cities: cityList.filter(city => city.country === \"KP\")\n  },\n  {\n    country: {\n      de: \"Südkorea\",\n      en: \"South Korea\",\n      fr: \"Corée du Sud\"\n    },\n    zone: \"Etc/GMT-9\",\n    flag: \"KR\",\n    cities: cityList.filter(city => city.country === \"KR\")\n  },\n  {\n    country: {\n      de: \"Taiwan\",\n      en: \"Taiwan\",\n      fr: \"Taïwan\"\n    },\n    zone: \"Etc/GMT-8\",\n    flag: \"TW\",\n    cities: cityList.filter(city => city.country === \"TW\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Åland (Finnland)\",\n      en: \"Åland (Finland)\",\n      fr: \"Åland (Finlande)\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"AX\",\n    cities: cityList.filter(city => city.country === \"AX\")\n  },\n  {\n    country: {\n      de: \"Albanien\",\n      en: \"Albania\",\n      fr: \"Albanie\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"AL\",\n    cities: cityList.filter(city => city.country === \"AL\")\n  },\n  {\n    country: {\n      de: \"Andorra\",\n      en: \"Andorra\",\n      fr: \"Andorre\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"AD\",\n    cities: cityList.filter(city => city.country === \"AD\")\n  },\n  {\n    country: {\n      de: \"Österreich\",\n      en: \"Austria\",\n      fr: \"Autriche\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"AT\",\n    cities: cityList.filter(city => city.country === \"AT\")\n  },\n  {\n    country: {\n      de: \"Belarus\",\n      en: \"Belarus\",\n      fr: \"Bélarus\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"BY\",\n    cities: cityList.filter(city => city.country === \"BY\")\n  },\n  {\n    country: {\n      de: \"Belgien\",\n      en: \"Belgium\",\n      fr: \"Belgique\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"BE\",\n    cities: cityList.filter(city => city.country === \"BE\")\n  },\n  {\n    country: {\n      de: \"Bosnien und Herzegowina\",\n      en: \"Bosnia and Herzegovina\",\n      fr: \"Bosnie et Herzégovine\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"BA\",\n    cities: cityList.filter(city => city.country === \"BA\")\n  },\n  {\n    country: {\n      de: \"Bulgarien\",\n      en: \"Bulgaria\",\n      fr: \"Bulgarie\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"BG\",\n    cities: cityList.filter(city => city.country === \"BG\")\n  },\n  {\n    country: {\n      de: \"Kroatien\",\n      en: \"Croatia\",\n      fr: \"Croatie\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"HR\",\n    cities: cityList.filter(city => city.country === \"HR\")\n  },\n  {\n    country: {\n      de: \"Zypern\",\n      en: \"Cyprus\",\n      fr: \"Chypre\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"CY\",\n    cities: cityList.filter(city => city.country === \"CY\")\n  },\n  {\n    country: {\n      de: \"Tschechien\",\n      en: \"Czechia\",\n      fr: \"Tchéquie\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"CZ\",\n    cities: cityList.filter(city => city.country === \"CZ\")\n  },\n  {\n    country: {\n      de: \"Dänemark\",\n      en: \"Denmark\",\n      fr: \"Danemark\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"DK\",\n    cities: cityList.filter(city => city.country === \"DK\")\n  },\n  {\n    country: {\n      de: \"Estland\",\n      en: \"Estonia\",\n      fr: \"Estonie\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"EE\",\n    cities: cityList.filter(city => city.country === \"EE\")\n  },\n  {\n    country: {\n      de: \"Färöer (Dänemark)\",\n      en: \"Faroe Islands (Denmark)\",\n      fr: \"Îles Féroé (Danemark)\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"FO\",\n    cities: cityList.filter(city => city.country === \"FO\")\n  },\n  {\n    country: {\n      de: \"Finnland\",\n      en: \"Finland\",\n      fr: \"Finlande\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"FI\",\n    cities: cityList.filter(city => city.country === \"FI\")\n  },\n  {\n    country: {\n      de: \"Frankreich\",\n      en: \"France\",\n      fr: \"France\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"FR\",\n    cities: cityList.filter(city => city.country === \"FR\")\n  },\n  {\n    country: {\n      de: \"Deutschland\",\n      en: \"Germany\",\n      fr: \"Allemagne\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"DE\",\n    cities: cityList.filter(city => city.country === \"DE\")\n  },\n  {\n    country: {\n      de: \"Gibraltar (Vereinigtes Königreich)\",\n      en: \"Gibraltar (United Kingdom)\",\n      fr: \"Gibraltar (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"GI\",\n    cities: cityList.filter(city => city.country === \"GI\")\n  },\n  {\n    country: {\n      de: \"Griechenland\",\n      en: \"Greece\",\n      fr: \"Grèce\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Epirus\",\n          en: \"Epirus\",\n          fr: \"Épire\"\n        }\n      }, // ESYE21\n      {\n        title: {\n          de: \"Westmakedonien\",\n          en: \"Western Macedonia\",\n          fr: \"Macédoine-Occidentale\"\n        }\n      }, // ESYE13\n      {\n        title: {\n          de: \"Peloponnes\",\n          en: \"Peloponnese\",\n          fr: \"Péloponnèse\"\n        }\n      }, // ESYE25\n      {\n        title: {\n          de: \"Westgriechenland\",\n          en: \"Western Greece\",\n          fr: \"Grèce-Occidentale\"\n        }\n      }, // ESYE23\n      {\n        title: {\n          de: \"Ionische Inseln\",\n          en: \"Ionian\",\n          fr: \"Îles Ioniennes\"\n        }\n      }, // ESYE22\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"GR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"GR\") {\n        if(city.adminCode === \"ESYE13\") return true\n        if(city.adminCode === \"ESYE21\") return true\n        if(city.adminCode === \"ESYE22\") return true\n        if(city.adminCode === \"ESYE23\") return true\n        if(city.adminCode === \"ESYE25\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Griechenland\",\n      en: \"Greece\",\n      fr: \"Grèce\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Nördliche Ägäis\",\n          en: \"Northern Aegean\",\n          fr: \"Égée-Septentrionale\"\n        }\n      }, // ESYE41\n      {\n        title: {\n          de: \"Südliche Ägäis\",\n          en: \"Southern Aegean\",\n          fr: \"Égée-Méridionale\"\n        }\n      }, // ESYE42\n      {\n        title: {\n          de: \"Attika\",\n          en: \"Attica\",\n          fr: \"Attique\"\n        }\n      }, // ESYE31\n      {\n        title: {\n          de: \"Kreta\",\n          en: \"Crete\",\n          fr: \"Crète\"\n        }\n      }, // ESYE43\n      {\n        title: {\n          de: \"Ostmakedonien und Thrakien\",\n          en: \"Eastern Macedonia and Thrace\",\n          fr: \"Macédoine-Orientale-et-Thrace\"\n        }\n      }, // ESYE11\n      {\n        title: {\n          de: \"Zentralmakedonien\",\n          en: \"Central Macedonia\",\n          fr: \"Macédoine-Centrale\"\n        }\n      }, // ESYE12\n      {\n        title: {\n          de: \"Thessalien\",\n          en: \"Thessaly\",\n          fr: \"Thessalie\"\n        }\n      }, // ESYE14\n      {\n        title: {\n          de: \"Mittelgriechenland\",\n          en: \"Central Greece\",\n          fr: \"Grèce-Centrale\"\n        }\n      }, // ESYE24\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"GR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"GR\") {\n        if(city.adminCode === \"ESYE11\") return true\n        if(city.adminCode === \"ESYE12\") return true\n        if(city.adminCode === \"ESYE14\") return true\n        if(city.adminCode === \"ESYE24\") return true\n        if(city.adminCode === \"ESYE31\") return true\n        if(city.adminCode === \"ESYE41\") return true\n        if(city.adminCode === \"ESYE42\") return true\n        if(city.adminCode === \"ESYE43\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Grönland (Dänemark)\",\n      en: \"Greenland (Denmark)\",\n      fr: \"Groenland (Danemark)\"\n    },\n    subdiv: [\n      {title: \"Danmarkshavn\"}\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"GL\",\n    cities: cityList.filter(city => city.country === \"GL\" && city.tz === \"America/Danmarkshavn\")\n  },\n  {\n    country: {\n      de: \"Grönland (Dänemark)\",\n      en: \"Greenland (Denmark)\",\n      fr: \"Groenland (Danemark)\"\n    },\n    subdiv: [\n      {title: \"Ittoqqortoormit\"}, \n      {title: \"Scoresbysund\"}\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"GL\",\n    cities: cityList.filter(city => city.country === \"GL\" && city.tz === \"America/Scoresbysund\")\n  },\n  {\n    country: {\n      de: \"Grönland (Dänemark)\",\n      en: \"Greenland (Denmark)\",\n      fr: \"Groenland (Danemark)\"\n    },\n    subdiv: [\n      {title: \"Thule\"}, \n      {title: \"Pituffik\"}\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"GL\",\n    cities: cityList.filter(city => city.country === \"GL\" && city.tz === \"America/Thule\")\n  },\n  {\n    country: {\n      de: \"Grönland (Dänemark)\",\n      en: \"Greenland (Denmark)\",\n      fr: \"Groenland (Danemark)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Westgrönland\",\n          en: \"Western Greenland\",\n          fr: \"Groenland-Occidental\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+3\",\n    flag: \"GL\",\n    cities: cityList.filter(city => city.country === \"GL\" && city.tz === \"America/Nuuk\")\n  },\n  {\n    country: {\n      de: \"Guernsey (Vereinigtes Königreich)\",\n      en: \"Guernsey (United Kingdom)\",\n      fr: \"Guernesey (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"GG\",\n    cities: cityList.filter(city => city.country === \"GG\")\n  },\n  {\n    country: {\n      de: \"Ungarn\",\n      en: \"Hungary\",\n      fr: \"Hongrie\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"HU\",\n    cities: cityList.filter(city => city.country === \"HU\")\n  },\n  {\n    country: {\n      de: \"Island\",\n      en: \"Iceland\",\n      fr: \"Islande\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"IS\",\n    cities: cityList.filter(city => city.country === \"IS\")\n  },\n  {\n    country: {\n      de: \"Irland\",\n      en: \"Ireland\",\n      fr: \"Irlande\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"IE\",\n    cities: cityList.filter(city => city.country === \"IE\")\n  },\n  {\n    country: {\n      de: \"Isle of Man (Vereinigtes Königreich)\",\n      en: \"Isle of Man (United Kingdom)\",\n      fr: \"Île de Man (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"IM\",\n    cities: cityList.filter(city => city.country === \"IM\")\n  },\n  {\n    country: {\n      de: \"Italien\",\n      en: \"Italy\",\n      fr: \"Italie\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"IT\",\n    cities: cityList.filter(city => city.country === \"IT\")\n  },\n  {\n    country: {\n      de: \"Jersey (Vereinigtes Königreich)\",\n      en: \"Jersey (United Kingdom)\",\n      fr: \"Jersey (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"JE\",\n    cities: cityList.filter(city => city.country === \"JE\")\n  },\n  {\n    country: {\n      de: \"Kosovo\",\n      en: \"Kosovo\",\n      fr: \"Kosovo\"\n    },\n    zone: \"Etc/GMT-1\",  // no explicit timezone for Kosovo/Pristina\n    flag: \"XK\",\n    cities: cityList.filter(city => city.country === \"XK\")\n  },\n  {\n    country: {\n      de: \"Lettland\",\n      en: \"Latvia\",\n      fr: \"Lettonie\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"LV\",\n    cities: cityList.filter(city => city.country === \"LV\")\n  },\n  {\n    country: {\n      de: \"Liechtenstein\",\n      en: \"Liechtenstein\",\n      fr: \"Liechtenstein\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"LI\",\n    cities: cityList.filter(city => city.country === \"LI\")\n  },\n  {\n    country: {\n      de: \"Litauen\",\n      en: \"Lithuania\",\n      fr: \"Lituanie\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"LT\",\n    cities: cityList.filter(city => city.country === \"LT\")\n  },\n  {\n    country: {\n      de: \"Luxemburg\",\n      en: \"Luxembourg\",\n      fr: \"Luxembourg\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"LU\",\n    cities: cityList.filter(city => city.country === \"LU\")\n  },\n  {\n    country: {\n      de: \"Malta\",\n      en: \"Malta\",\n      fr: \"Malte\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"MT\",\n    cities: cityList.filter(city => city.country === \"MT\")\n  },\n  {\n    country: {\n      de: \"Moldau\",\n      en: \"Moldova\",\n      fr: \"Moldavie\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"MD\",\n    cities: cityList.filter(city => city.country === \"MD\")\n  },\n  {\n    country: {\n      de: \"Monaco\",\n      en: \"Monaco\",\n      fr: \"Monaco\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"MC\",\n    cities: cityList.filter(city => city.country === \"MC\")\n  },\n  {\n    country: {\n      de: \"Montenegro\",\n      en: \"Montenegro\",\n      fr: \"Monténégro\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"ME\",\n    cities: cityList.filter(city => city.country === \"ME\")\n  },\n  {\n    country: {\n      de: \"Niederlande\",\n      en: \"Netherlands\",\n      fr: \"Pays-Bas\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"NL\",\n    cities: cityList.filter(city => city.country === \"NL\")\n  },\n  {\n    country: {\n      de: \"Nordmazedonien\",\n      en: \"North Macedonia\",\n      fr: \"Macédoine du Nord\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"MK\",\n    cities: cityList.filter(city => city.country === \"MK\")\n  },\n  {\n    country: {\n      de: \"Norwegen\",\n      en: \"Norway\",\n      fr: \"Norvège\"\n    },\n    subdiv: [\n      {title: \"Agder\"},\n      {title: \"Innlandet\"},\n      {title: \"Møre og Romsdal\"},\n      {title: \"Nordland\"},\n      {title: \"Oslo\"},\n      {title: \"Rogaland\"},\n      {title: \"Troms og Finnmark\"},\n      {title: \"Trøndelag\"},\n      {title: \"Vestfold og Telemark\"},\n      {title: \"Vestland\"},\n      {title: \"Viken\"},\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"NO\",\n    cities: cityList.filter(city => city.country === \"NO\")\n  },\n  {\n    country: {\n      de: \"Norwegen\",\n      en: \"Norway\",\n      fr: \"Norvège\"\n    },\n    subdiv: [\n      {title: \"Jan Mayen\"}\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"NO\", // eigentlich SJ\n    cities: cityList.filter(city => city.country === \"SJ\" && city.adminCode === \"22\")\n  },\n  {\n    country: {\n      de: \"Norwegen\",\n      en: \"Norway\",\n      fr: \"Norvège\"\n    },\n    subdiv: [\n      {title: \"Svalbard\"}\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"NO\", // eigentlich SJ\n    cities: cityList.filter(city => city.country === \"SJ\" && city.adminCode === \"21\")\n  },\n  {\n    country: {\n      de: \"Polen\",\n      en: \"Poland\",\n      fr: \"Pologne\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"PL\",\n    cities: cityList.filter(city => city.country === \"PL\")\n  },\n  {\n    country: {\n      de: \"Portugal\",\n      en: \"Portugal\",\n      fr: \"Portugal\"\n    },\n    subdiv: [\n      {title: \"Aveiro\"}, // 02\n      {title: \"Beja\"}, // 03\n      {title: \"Braga\"}, // 04\n      {title: \"Bragança\"}, // 05\n      {title: \"Castelo Branco\"}, // 06\n      {title: \"Coimbra\"}, // 07\n      {title: \"Évora\"}, // 08\n      {title: \"Faro\"}, // 09\n      {title: \"Guarda\"}, // 11\n      {title: \"Leiria\"}, // 13\n      {\n        title: {\n          de: \"Lissabon\",\n          en: \"Lisbon\",\n          fr: \"Lisbonne\"\n        }\n      }, // 14\n      {title: \"Portalegre\"}, // 16\n      {title: \"Porto\"}, // 17\n      {title: \"Santarém\"}, // 18\n      {title: \"Setúbal\"}, // 19\n      {title: \"Viana do Castelo\"}, // 20\n      {title: \"Vila Real\"}, // 21\n      {title: \"Viseu\"}, // 22\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"PT\",\n    cities: cityList.filter(city => {\n      if(city.country === \"PT\") {\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"06\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\") return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"17\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"19\") return true\n        if(city.adminCode === \"20\") return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"22\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Portugal\",\n      en: \"Portugal\",\n      fr: \"Portugal\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Madeira\",\n          en: \"Madeira\",\n          fr: \"Madère\"\n        }\n      } // 10\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"PT\",\n    cities: cityList.filter(city => city.country === \"PT\" && city.adminCode === \"10\")\n  },\n  {\n    country: {\n      de: \"Portugal\",\n      en: \"Portugal\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Azoren\",\n          en: \"Azores\",\n          fr: \"Açores\"\n        }\n      } // 23\n    ],\n    zone: \"Etc/GMT+2\",\n    flag: \"PT\",\n    cities: cityList.filter(city => city.country === \"PT\" && city.adminCode === \"23\")\n  },\n  {\n    country: {\n      de: \"Rumänien\",\n      en: \"Romania\",\n      fr: \"Roumanie\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"RO\",\n    cities: cityList.filter(city => city.country === \"RO\")\n  },\n  {\n    country: {\n      de: \"San Marino\",\n      en: \"San Marino\",\n      fr: \"Saint-Marin\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"SM\",\n    cities: cityList.filter(city => city.country === \"SM\")\n  },\n  {\n    country: {\n      de: \"Serbien\",\n      en: \"Serbia\",\n      fr: \"Serbie\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"RS\",\n    cities: cityList.filter(city => city.country === \"RS\")\n  },\n  {\n    country: {\n      de: \"Slowakei\",\n      en: \"Slovakia\",\n      fr: \"Slovaquie\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"SK\",\n    cities: cityList.filter(city => city.country === \"SK\")\n  },\n  {\n    country: {\n      de: \"Slowenien\",\n      en: \"Slovenia\",\n      fr: \"Slovénie\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"SI\",\n    cities: cityList.filter(city => city.country === \"SI\")\n  },\n  {\n    country: {\n      de: \"Spanien\",\n      en: \"Spain\",\n      fr: \"Espagne\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Andalusien\",\n          en: \"Andalusia\",\n          fr: \"Andalousie\"\n        }\n      }, // 51\n      {title: \"Aragón\"}, // 52\n      {\n        title: {\n          de: \"Asturien\",\n          en: \"Asturias\",\n          fr: \"Asturies\"\n        }\n      }, // 34\n      {\n        title: {\n          de: \"Kantabrien\",\n          en: \"Cantabria\",\n          fr: \"Cantabrie\"\n        }\n      }, // 39\n      {\n        title: {\n          de: \"Kastilien und León\",\n          en: \"Castile and León\",\n          fr: \"Castille-et-León\"\n        }\n      }, // 55\n      {\n        title: {\n          de: \"Kastilien-La Mancha\",\n          en: \"Castilla-La Mancha\",\n          fr: \"Castille-La Manche\"\n        }\n      }, // 54\n      {\n        title: {\n          de: \"Katalonien\",\n          en: \"Catalonia\",\n          fr: \"Catalogne\"\n        }\n      }, // 56\n      {\n        title: {\n          de: \"Extremadura\",\n          en: \"Extremadura\",\n          fr: \"Extrémadure\"\n        }\n      }, // 57\n      {\n        title: {\n          de: \"Galicien\",\n          en: \"Galicia\",\n          fr: \"Galice\"\n        }\n      }, // 58\n      {\n        title: {\n          de: \"Balearische Inseln\",\n          en: \"Balearic Islands\",\n          fr: \"Îles Baléares\"\n        }\n      }, // 07\n      {\n        title: {\n          de: \"Murcia\",\n          en: \"Murcia\",\n          fr: \"Murcie\"\n        }\n      }, // 31\n      {\n        title: {\n          de: \"Autonome Gemeinschaft Madrid\",\n          en: \"Community of Madrid\",\n          fr: \"Communauté de Madrid\"\n        }\n      }, // 29\n      {\n        title: {\n          de: \"Navarra\",\n          en: \"Navarre\",\n          fr: \"Navarre\"\n        }\n      }, // 32\n      {\n        title: {\n          de: \"Baskenland\",\n          en: \"Basque Country\",\n          fr: \"Pays Basque\"\n        }\n      }, // 59\n      {title: \"La Rioja\"}, // 27\n      {\n        title: {\n          de: \"Valencianische Gemeinschaft\",\n          en: \"Valencian Community\",\n          fr: \"Communauté valencienne\"\n        }\n      }, // 60\n    ],\n    zone: \"Etc/GMT+0\",\n    flag: \"ES\",\n    cities: cityList.filter(city => {\n      if(city.country === \"ES\") {\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"27\") return true\n        if(city.adminCode === \"29\") return true\n        if(city.adminCode === \"31\") return true\n        if(city.adminCode === \"32\") return true\n        if(city.adminCode === \"34\") return true\n        if(city.adminCode === \"39\") return true\n        if(city.adminCode === \"51\") return true\n        if(city.adminCode === \"52\") return true\n        if(city.adminCode === \"54\") return true\n        if(city.adminCode === \"55\") return true\n        if(city.adminCode === \"56\") return true\n        if(city.adminCode === \"57\") return true\n        if(city.adminCode === \"58\") return true\n        if(city.adminCode === \"59\") return true\n        if(city.adminCode === \"60\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Spanien\",\n      en: \"Spain\",\n      fr: \"Espagne\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Kanarische Inseln\",\n          en: \"Canary Islands\",\n          fr: \"Îles Canaries\"\n        }\n      } // 53\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"ES\",\n    cities: cityList.filter(city => city.country === \"ES\" && city.adminCode === \"53\")\n  },\n  {\n    country: {\n      de: \"Schweden\",\n      en: \"Sweden\",\n      fr: \"Suède\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"SE\",\n    cities: cityList.filter(city => city.country === \"SE\")\n  },\n  {\n    country: {\n      de: \"Schweiz\",\n      en: \"Switzerland\",\n      fr: \"Suisse\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"CH\",\n    cities: cityList.filter(city => city.country === \"CH\")\n  },\n  {\n    country: {\n      de: \"Vereinigtes Königreich\",\n      en: \"United Kingdom\",\n      fr: \"Royaume-Uni\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"England\",\n          en: \"England\",\n          fr: \"Angleterre\"\n        }\n      }, // ENG\n      {\n        title: {\n          de: \"Schottland\",\n          en: \"Scotland\",\n          fr: \"Écosse\"\n        }\n      }, // SCT\n      {\n        title: {\n          de: \"Wales\",\n          en: \"Wales\",\n          fr: \"Pays de Galles\"\n        }\n      } // WLS\n    ],\n    zone: \"Etc/GMT+0\",\n    flag: \"GB\",\n    cities: cityList.filter(city => {\n      if(city.country === \"GB\") {\n        if(city.adminCode === \"ENG\") return true\n        if(city.adminCode === \"SCT\") return true\n        if(city.adminCode === \"WLS\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigtes Königreich\",\n      en: \"United Kingdom\",\n      fr: \"Royaume-Uni\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Nordirland\",\n          en: \"Northern Ireland\",\n          fr: \"Irlande du Nord\"\n        }\n      } // NIR\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"GB\",\n    cities: cityList.filter(city => city.country === \"GB\" && city.adminCode === \"NIR\")\n  },\n  {\n    country: {\n      de: \"Ukraine\",\n      en: \"Ukraine\",\n      fr: \"Ukraine\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"UA\",\n    cities: cityList.filter(city => city.country === \"UA\")\n  },\n  {\n    country: {\n      de: \"Vatikanstadt\",\n      en: \"Vatican City\",\n      fr: \"Vatican\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"VA\",\n    cities: cityList.filter(city => city.country === \"VA\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Indonesien\",\n      en: \"Indonesia\",\n      fr: \"Indonésie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Aceh\",\n          en: \"Aceh\",\n          fr: \"Aceh\"\n        }\n      }, // 01\n      {\n        title: {\n          de: \"Bengkulu\",\n          en: \"Bengkulu\",\n          fr: \"Bengkulu\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Jakarta\",\n          en: \"Jakarta\",\n          fr: \"Jakarta\"\n        }\n      }, // 04\n      {\n        title: {\n          de: \"Jambi\",\n          en: \"Jambi\",\n          fr: \"Jambi\"\n        }\n      }, // 05\n      {\n        title: {\n          de: \"Zentraljava\",\n          en: \"Central Java\",\n          fr: \"Java central\"\n        }\n      }, // 07\n      {\n        title: {\n          de: \"Ostjava\",\n          en: \"East Java\",\n          fr: \"Java oriental\"\n        }\n      }, // 08\n      {\n        title: {\n          de: \"Yogyakarta\",\n          en: \"Yogyakarta\",\n          fr: \"Yogyakarta\"\n        }\n      }, // 10\n      {\n        title: {\n          de: \"Westkalimantan\",\n          en: \"West Kalimantan\",\n          fr: \"Kalimantan occidental\"\n        }\n      }, // 11\n      {\n        title: {\n          de: \"Zentralkalimantan\",\n          en: \"Central Kalimantan\",\n          fr: \"Kalimantan central\"\n        }\n      }, // 13 \n      {\n        title: {\n          de: \"Lampung\",\n          en: \"Lampung\",\n          fr: \"Lampung\"\n        }\n      }, // 15\n      {\n        title: {\n          de: \"Westsumatra\",\n          en: \"West Sumatra\",\n          fr: \"Sumatra occidental\"\n        }\n      }, // 24\n      {\n        title: {\n          de: \"Nordsumatra\",\n          en: \"North Sumatra\",\n          fr: \"Sumatra du Nord\"\n        }\n      }, // 26\n      {\n        title: {\n          de: \"Westjava\",\n          en: \"West Java\",\n          fr: \"Java occidental\"\n          \n        }\n      }, // 30\n      {\n        title: {\n          de: \"Südsumatra\",\n          en: \"South Sumatra\",\n          fr: \"Sumatra du Sud\"\n        }\n      }, // 32\n      {\n        title: {\n          de: \"Banten\",\n          en: \"Banten\",\n          fr: \"Banten\"\n        }\n      }, // 33\n      {\n        title: {\n          de: \"Bangka-Belitung\",\n          en: \"Bangka Belitung\",\n          fr: \"Îles Bangka Belitung\"\n        }\n      }, // 35\n      {\n        title: {\n          de: \"Riau\",\n          en: \"Riau\",\n          fr: \"Riau\"\n        }\n      }, // 37\n      {\n        title: {\n          de: \"Riau-Inseln\",\n          en: \"Riau Islands\",\n          fr: \"Îles Riau\"\n        }\n      }, // 40\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"ID\",\n    cities: cityList.filter(city => {\n      if(city.country === \"ID\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"15\") return true\n        if(city.adminCode === \"24\") return true\n        if(city.adminCode === \"26\") return true\n        if(city.adminCode === \"30\") return true\n        if(city.adminCode === \"32\") return true\n        if(city.adminCode === \"33\") return true\n        if(city.adminCode === \"35\") return true\n        if(city.adminCode === \"37\") return true\n        if(city.adminCode === \"40\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Indonesien\",\n      en: \"Indonesia\",\n      fr: \"Indonésie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Bali\",\n          en: \"Bali\",\n          fr: \"Bali\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Südkalimantan\",\n          en: \"South Kalimantan\",\n          fr: \"Kalimantan du Sud\"\n        }\n      }, // 12\n      {\n        title: {\n          de: \"Ostkalimantan\",\n          en: \"East Kalimantan\",\n          fr: \"Kalimantan oriental\"\n        }\n      }, // 14 \n      {\n        title: {\n          de: \"West-Nusa-Tenggara\",\n          en: \"West Nusa Tenggara\",\n          fr: \"Petites îles de la Sonde occidentales\"\n        }\n      }, // 17\n      {\n        title: {\n          de: \"Ost-Nusa-Tenggara\",\n          en: \"East Nusa Tenggara\",\n          fr: \"Petites îles de la Sonde orientales\"\n        }\n      }, // 18 \n      {\n        title: {\n          de: \"Zentralsulawesi\",\n          en: \"Central Sulawesi\",\n          fr: \"Sulawesi central\"\n        }\n      }, // 21\n      {\n        title: {\n          de: \"Südostsulawesi\",\n          en: \"Southeast Sulawesi\",\n          fr: \"Sulawesi du Sud-Est\"\n        }\n      }, // 22\n      {\n        title: {\n          de: \"Nordsulawesi\",\n          en: \"North Sulawesi\",\n          fr: \"Kalimantan du Nord\"\n        }\n      }, // 31\n      {\n        title: {\n          de: \"Gorontalo\",\n          en: \"Gorontalo\",\n          fr: \"Gorontalo\"\n        }\n      }, // 34\n      {\n        title: {\n          de: \"Südsulawesi\",\n          en: \"South Sulawesi\",\n          fr: \"Sulawesi du Sud\"\n        }\n      }, // 38\n      {\n        title: {\n          de: \"Westsulawesi\",\n          en: \"West Sulawesi\",\n          fr: \"Sulawesi occidental\"\n        }\n      }, // 41\n      {\n        title: {\n          de: \"Nordkalimantan\",\n          en: \"North Kalimantan\",\n          fr: \"Kalimantan du Nord\"\n        }\n      }, // 42\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"ID\",\n    cities: cityList.filter(city => {\n      if(city.country === \"ID\") {\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"17\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"22\") return true\n        if(city.adminCode === \"31\") return true\n        if(city.adminCode === \"34\") return true\n        if(city.adminCode === \"38\") return true\n        if(city.adminCode === \"41\") return true\n        if(city.adminCode === \"42\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Indonesien\",\n      en: \"Indonesia\",\n      fr: \"Indonésie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Maluku\",\n          en: \"Maluku\",\n          fr: \"Moluques\"\n        }\n      }, // 28\n      {\n        title: {\n          de: \"Nordmaluku\",\n          en: \"North Maluku\",\n          fr: \"Moluques du Nord\"\n        }\n      }, // 29\n      {\n        title: {\n          de: \"Papua\",\n          en: \"Papua\",\n          fr: \"Papouasie\"\n        }\n      }, // 36\n      {\n        title: {\n          de: \"Westpapua\",\n          en: \"West Papua\",\n          fr: \"Papouasie occidentale\"\n        }\n      }, // 39\n    ],\n    zone: \"Etc/GMT-9\",\n    flag: \"ID\",\n    cities: cityList.filter(city => {\n      if(city.country === \"ID\") {\n        if(city.adminCode === \"28\") return true\n        if(city.adminCode === \"29\") return true\n        if(city.adminCode === \"36\") return true\n        if(city.adminCode === \"39\") return true\n        return false\n      }\n      return false\n    })\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Afghanistan\",\n      en: \"Afghanistan\",\n      fr: \"Afghanistan\"\n    },\n    utcOffset: 270,\n    flag: \"AF\",\n    cities: cityList.filter(city => city.country === \"AF\")\n  },\n  {\n    country: {\n      de: \"Armenien\",\n      en: \"Armenia\",\n      fr: \"Arménie\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"AM\",\n    cities: cityList.filter(city => city.country === \"AM\")\n  },\n  {\n    country: {\n      de: \"Aserbaidschan\",\n      en: \"Azerbaijan\",\n      fr: \"Azerbaïdjan\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"AZ\",\n    cities: cityList.filter(city => city.country === \"AZ\")\n  },\n  {\n    country: {\n      de: \"Bahrain\",\n      en: \"Bahrain\",\n      fr: \"Bahreïn\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"BH\",\n    cities: cityList.filter(city => city.country === \"BH\")\n  },\n  {\n    country: {\n      de: \"Georgien\",\n      en: \"Georgia\",\n      fr: \"Géorgie\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"GE\",\n    cities: cityList.filter(city => city.country === \"GE\")\n  },\n  {\n    country: {\n      de: \"Iran\",\n      en: \"Iran\",\n      fr: \"Iran\"\n    },\n    utcOffset: 210,\n    flag: \"IR\",\n    cities: cityList.filter(city => city.country === \"IR\")\n  },\n  {\n    country: {\n      de: \"Irak\",\n      en: \"Iraq\",\n      fr: \"Irak\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"IQ\",\n    cities: cityList.filter(city => city.country === \"IQ\")\n  },\n  {\n    country: {\n      de: \"Israel\",\n      en: \"Israel\",\n      fr: \"Israël\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"IL\",\n    cities: cityList.filter(city => city.country === \"IL\")\n  },\n  {\n    country: {\n      de: \"Jordanien\",\n      en: \"Jordan\",\n      fr: \"Jordanie\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"JO\",\n    cities: cityList.filter(city => city.country === \"JO\")\n  },\n  {\n    country: {\n      de: \"Kuwait\",\n      en: \"Kuwait\",\n      fr: \"Koweït\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"KW\",\n    cities: cityList.filter(city => city.country === \"KW\")\n  },\n  {\n    country: {\n      de: \"Libanon\",\n      en: \"Lebanon\",\n      fr: \"Liban\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"LB\",\n    cities: cityList.filter(city => city.country === \"LB\")\n  },\n  {\n    country: {\n      de: \"Oman\",\n      en: \"Oman\",\n      fr: \"Oman\"\n    },\n    zone: \"Etc/GMT-4\",\n    flag: \"OM\",\n    cities: cityList.filter(city => city.country === \"OM\")\n  },\n  {\n    country: {\n      de: \"Palästina\",\n      en: \"Palestine\",\n      fr: \"Palestine\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"PS\",\n    cities: cityList.filter(city => city.country === \"PS\")\n  },\n  {\n    country: {\n      de: \"Katar\",\n      en: \"Qatar\",\n      fr: \"Qatar\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"QA\",\n    cities: cityList.filter(city => city.country === \"QA\")\n  },\n  {\n    country: {\n      de: \"Saudi-Arabien\",\n      en: \"Saudi Arabia\",\n      fr: \"Arabie saoudite\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"SA\",\n    cities: cityList.filter(city => city.country === \"SA\")\n  },\n  {\n    country: {\n      de: \"Syrien\",\n      en: \"Syria\",\n      fr: \"Syrie\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"SY\",\n    cities: cityList.filter(city => city.country === \"SY\")\n  },\n  {\n    country: {\n      de: \"Türkei\",\n      en: \"Turkey\",\n      fr: \"Turquie\"\n    },\n    subdiv: [\n      {title: \"Adana\"}, // 81\n      {title: \"Afyonkarahisar\"}, // 03\n      {title: \"Aksaray\"}, // 75\n      {title: \"Amasya\"}, // 05\n      {title: \"Ankara\"}, // 68\n      {title: \"Antalya\"}, // 07\n      {title: \"Aydin\"}, // 09\n      {title: \"Balıkesir\"}, // 10\n      {title: \"Bartın\"}, // 87\n      {title: \"Bilecik\"}, // 11\n      {title: \"Bolu\"}, // 14\n      {title: \"Burdur\"}, // 15\n      {title: \"Bursa\"}, // 16\n      {title: \"Çanakkale\"}, // 17\n      {title: \"Çankırı\"}, // 82\n      {title: \"Çorum\"}, // 19\n      {title: \"Denizli\"}, // 20\n      {title: \"Düzce\"}, // 93\n      {title: \"Edirne\"}, // 22\n      {title: \"Eskişehir\"}, // 26\n      {title: \"Hatay\"}, // 31\n      {title: \"Isparta\"}, // 33\n      {title: \"Mersin\"}, // 32\n      {title: \"İstanbul\"}, // 34\n      {title: \"İzmir\"}, // 35\n      {title: \"Kahramanmaraş\"}, // 46\n      {title: \"Karabük\"}, // 89\n      {title: \"Karaman\"}, // 78\n      {title: \"Kastamonu\"}, // 37\n      {title: \"Kayseri\"}, // 38\n      {title: \"Kırıkkale\"}, // 79\n      {title: \"Kırklareli\"}, // 39\n      {title: \"Kırşehir\"}, // 40\n      {title: \"Kocaeli\"}, // 41\n      {title: \"Konya\"}, // 71\n      {title: \"Kütahya\"}, // 43\n      {title: \"Manisa\"}, // 45\n      {title: \"Muğla\"}, // 48\n      {title: \"Nevşehir\"}, // 50\n      {title: \"Niğde\"}, // 73\n      {title: \"Osmaniye\"}, // 91\n      {title: \"Sakarya\"}, // 54\n      {title: \"Samsun\"}, // 55\n      {title: \"Sinop\"}, // 57\n      {title: \"Sivas\"}, // 58\n      {title: \"Tekirdağ\"}, // 59\n      {title: \"Tokat\"}, // 60\n      {title: \"Uşak\"}, // 64\n      {title: \"Yalova\"}, // 92\n      {title: \"Yozgat\"}, // 66\n      {title: \"Zonguldak\"}, // 85\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"TR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"TR\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"05\":\n          case \"07\":\n          case \"09\":\n          case \"10\":\n          case \"11\":\n          case \"14\":\n          case \"15\":\n          case \"16\":\n          case \"17\":\n          case \"19\":\n          case \"20\":\n          case \"22\":\n          case \"26\":\n          case \"31\":\n          case \"32\":\n          case \"33\":\n          case \"34\":\n          case \"35\":\n          case \"37\":\n          case \"38\":\n          case \"39\":\n          case \"40\":\n          case \"41\":\n          case \"43\":\n          case \"45\":\n          case \"46\":\n          case \"48\":\n          case \"50\":\n          case \"54\":\n          case \"55\":\n          case \"57\":\n          case \"58\":\n          case \"59\":\n          case \"60\":\n          case \"64\":\n          case \"66\":\n          case \"68\":\n          case \"71\":\n          case \"73\":\n          case \"75\":\n          case \"78\":\n          case \"79\":\n          case \"81\":\n          case \"82\":\n          case \"85\":\n          case \"87\":\n          case \"89\":\n          case \"91\":\n          case \"92\":\n          case \"93\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Türkei\",\n      en: \"Turkey\",\n      fr: \"Turquie\"\n    },\n    subdiv: [\n      {title: \"Adıyaman\"}, // 02\n      {title: \"Ağrı\"}, // 04\n      {title: \"Ardahan\"}, // 86\n      {title: \"Artvin\"}, // 08\n      {title: \"Batman\"}, // 76\n      {title: \"Bayburt\"}, // 77\n      {title: \"Bingöl\"}, // 12\n      {title: \"Bitlis\"}, // 13\n      {title: \"Diyarbakır\"}, // 21\n      {title: \"Elazığ\"}, // 23\n      {title: \"Erzincan\"}, // 24\n      {title: \"Erzurum\"}, // 25\n      {title: \"Gaziantep\"}, // 83\n      {title: \"Giresun\"}, // 28\n      {title: \"Gümüşhane\"}, // 69\n      {title: \"Hakkari\"}, // 70\n      {title: \"Iğdır\"}, // 88\n      {title: \"Kars\"}, // 84\n      {title: \"Kilis\"}, // 90\n      {title: \"Malatya\"}, // 44\n      {title: \"Mardin\"}, // 72\n      {title: \"Muş\"}, // 49\n      {title: \"Ordu\"}, // 52\n      {title: \"Rize\"}, // 53\n      {title: \"Şanlıurfa\"}, // 63\n      {title: \"Siirt\"}, // 74\n      {title: \"Şırnak\"}, // 80\n      {title: \"Trabzon\"}, // 61\n      {title: \"Tunceli\"}, // 62\n      {title: \"Van\"}, // 65\n    ],\n    zone: \"Etc/GMT-3\",\n    flag: \"TR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"TR\") {\n        switch(city.adminCode) {\n          case \"02\":\n          case \"04\":\n          case \"08\":\n          case \"12\":\n          case \"13\":\n          case \"21\":\n          case \"23\":\n          case \"24\":\n          case \"25\":\n          case \"28\":\n          case \"44\":\n          case \"49\":\n          case \"52\":\n          case \"53\":\n          case \"61\":\n          case \"62\":\n          case \"63\":\n          case \"65\":\n          case \"69\":\n          case \"70\":\n          case \"72\":\n          case \"74\":\n          case \"76\":\n          case \"77\":\n          case \"80\":\n          case \"83\":\n          case \"84\":\n          case \"86\":\n          case \"88\":\n          case \"90\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Arabische Emirate\",\n      en: \"United Arab Emirates\",\n      fr: \"Émirats arabes unis\"\n    },\n    utcOffset: 210,\n    flag: \"AE\",\n    cities: cityList.filter(city => city.country === \"AE\")\n  },\n  {\n    country: {\n      de: \"Jemen\",\n      en: \"Yemen\",\n      fr: \"Yémen\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"YE\",\n    cities: cityList.filter(city => city.country === \"YE\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Amerikanisch-Samoa (USA)\",\n      en: \"American Samoa (United States)\",\n      fr: \"Samoa américaines (États-Unis)\"\n    },\n    zone: \"Etc/GMT+11\",\n    flag: \"AS\",\n    cities: cityList.filter(city => city.country === \"AS\")\n  },\n  {\n    country: {\n      de: \"Cookinseln (Neuseeland)\",\n      en: \"Cook Islands (New Zealand)\",\n      fr: \"Îles Cook (Nouvelle-Zélande)\"\n    },\n    zone: \"Etc/GMT+11\",\n    flag: \"CK\",\n    cities: cityList.filter(city => city.country === \"CK\")\n  },\n  {\n    country: {\n      de: \"Fidschi\",\n      en: \"Fiji\",\n      fr: \"Fidji\"\n    },\n    zone: \"Etc/GMT-12\",\n    flag: \"FJ\",\n    cities: cityList.filter(city => city.country === \"FJ\")\n  },\n  {\n    country: {\n      de: \"Französisch-Polynesien (Frankreich)\",\n      en: \"French Polynesia (France)\",\n      fr: \"Polynésie française (France)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Austral-Inseln\",\n          en: \"Austral Islands\",\n          fr: \"Îles Australes\"\n        }\n      }, // 05\n      {\n        title: {\n          de: \"Gesellschaftsinseln\",\n          en: \"Society Islands\",\n          fr: \"Îles de la Societé\"\n        }\n      }, // 01, 02\n      {\n        title: {\n          de: \"Tuamotu-Archipel\",\n          en: \"Tuamotus\",\n          fr: \"Tuamotu\"\n        }\n      } // part of 03\n    ],\n    zone: \"Etc/GMT+10\",\n    flag: \"PF\",\n    cities: cityList.filter(city => {\n      if(city.country === \"PF\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"02\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Französisch-Polynesien (Frankreich)\",\n      en: \"French Polynesia (France)\",\n      fr: \"Polynésie française (France)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Gambierinseln\",\n          en: \"Gambier Islands\",\n          fr: \"Îles Gambier\"\n        }\n      } // part of 03\n    ],\n    zone: \"Etc/GMT+9\",\n    flag: \"PF\"\n  },\n  {\n    country: {\n      de: \"Französisch-Polynesien (Frankreich)\",\n      en: \"French Polynesia (France)\",\n      fr: \"Polynésie française (France)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Marquesasinseln\",\n          en: \"Marquesas Islands\",\n          fr: \"Îles Marquises\"\n        }\n      } // 04\n    ],\n    zone: \"Etc/GMT+9\",\n    flag: \"PF\",\n    cities: cityList.filter(city => city.country === \"PF\" && city.adminCode === \"04\")\n  },\n  {\n    country: {\n      de: \"Guam (USA)\",\n      en: \"Guam (United States)\",\n      fr: \"Guam (États-Unis)\"\n    },\n    zone: \"Etc/GMT-10\",\n    flag: \"GU\",\n    cities: cityList.filter(city => city.country === \"GU\")\n  },\n  {\n    country: {\n      de: \"Kiribati\",\n      en: \"Kiribati\",\n      fr: \"Kiribati\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Banaba\",\n          en: \"Banaba\",\n          fr: \"Banaba\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"KI\"\n  },\n  {\n    country: {\n      de: \"Kiribati\",\n      en: \"Kiribati\",\n      fr: \"Kiribati\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Gilbertinseln\",\n          en: \"Gilbert Islands\",\n          fr: \"Îles Gilbert\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"KI\",\n    cities: cityList.filter(city => city.country === \"KI\" && city.adminCode === \"01\")\n  },\n  {\n    country: {\n      de: \"Kiribati\",\n      en: \"Kiribati\",\n      fr: \"Kiribati\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Phoenixinseln\",\n          en: \"Phoenix Islands\",\n          fr: \"Îles Phœnix\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-13\",\n    flag: \"KI\"\n  },\n  {\n    country: {\n      de: \"Kiribati\",\n      en: \"Kiribati\",\n      fr: \"Kiribati\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Kiritimati\",\n          en: \"Kiritimati\",\n          fr: \"Île Christmas\"\n        }\n      },\n      {\n        title: {\n          de: \"Line Islands\",\n          en: \"Line Islands\",\n          fr: \"Îles de la Ligne\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-14\",\n    flag: \"KI\"\n  },\n  {\n    country: {\n      de: \"Marshallinseln\",\n      en: \"Marshall Islands\",\n      fr: \"Îles Marshall\"\n    },\n    zone: \"Etc/GMT-11\",\n    flag: \"MH\",\n    cities: cityList.filter(city => city.country === \"MH\")\n  },\n  {\n    country: {\n      de: \"Föderierte Staaten von Mikronesien\",\n      en: \"Federated States of Micronesia\",\n      fr: \"États fédérés de Micronésie\"\n    },\n    subdiv: [\n      {title: \"Chuuk\"}, // 03\n      {title: \"Yap\"} // 04\n    ],\n    zone: \"Etc/GMT-10\",\n    flag: \"FM\",\n    cities: cityList.filter(city => {\n      if(city.country === \"FM\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"04\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Föderierte Staaten von Mikronesien\",\n      en: \"Federated States of Micronesia\",\n      fr: \"États fédérés de Micronésie\"\n    },\n    subdiv: [\n      {title: \"Kosrae\"}, // 01\n      {title: \"Pohnpei\"} // 02\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"FM\",\n    cities: cityList.filter(city => {\n      if(city.country === \"FM\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"02\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Nauru\",\n      en: \"Nauru\",\n      fr: \"Nauru\"\n    },\n    zone: \"Etc/GMT-11\",\n    flag: \"NR\",\n    cities: cityList.filter(city => city.country === \"NR\")\n  },\n  {\n    country: {\n      de: \"Neukaledonien (Frankreich)\",\n      en: \"New Caledonia (France)\",\n      fr: \"Nouvelle-Calédonie (France)\"\n    },\n    zone: \"Etc/GMT-11\",\n    flag: \"NC\",\n    cities: cityList.filter(city => city.country === \"NC\")\n  },\n  {\n    country: {\n      de: \"Neuseeland\",\n      en: \"New Zealand\",\n      fr: \"Nouvelle-Zélande\"\n    },\n    subdiv: [\n      {title: \"Canterbury\"}, // E9\n      {title: \"Marlborough\"}, // F4\n      {title: \"Nelson\"}, // F5\n      {title: \"Otago\"}, // F7\n      {title: \"Southland\"}, // F8\n      {title: \"West Coast\"}, // G3\n      {title: \"Tasman\"}, // TAS\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"NZ\",\n    cities: cityList.filter(city => {\n      if(city.country === \"NZ\") {\n        switch(city.adminCode) {\n          case \"E9\":\n          case \"F4\":\n          case \"F5\":\n          case \"F7\":\n          case \"F8\":\n          case \"G3\":\n          case \"TAS\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Neuseeland\",\n      en: \"New Zealand\",\n      fr: \"Nouvelle-Zélande\"\n    },\n    subdiv: [\n      {title: \"Auckland\"}, // E7\n      {title: \"Bay of Plenty\"}, // E8\n      {title: \"Gisborne\"}, // F1\n      {title: \"Hawke's Bay\"}, // F2\n      {title: \"Manawatu-Wanganui\"}, // F3\n      {title: \"Northland\"}, // F6\n      {title: \"Taranaki\"}, // F9\n      {title: \"Waikato\"}, // G1\n      {title: \"Wellington\"}, // G2\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"NZ\",\n    cities: cityList.filter(city => {\n      if(city.country === \"NZ\") {\n        switch(city.adminCode) {\n          case \"E7\":\n          case \"E8\":\n          case \"F1\":\n          case \"F2\":\n          case \"F3\":\n          case \"F6\":\n          case \"F9\":\n          case \"G1\":\n          case \"G2\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Neuseeland\",\n      en: \"New Zealand\",\n      fr: \"Nouvelle-Zélande\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Chathaminseln\",\n          en: \"Chatham Islands\",\n          fr: \"Îles Chatham\"\n        }\n      } // 10\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"NZ\",\n    cities: cityList.filter(city => city.country === \"NZ\" && city.adminCode === \"10\")\n  },\n  {\n    country: {\n      de: \"Niue (Neuseeland)\",\n      en: \"Niue (New Zealand)\",\n      fr: \"Niue (Nouvelle-Zélande)\"\n    },\n    zone: \"Etc/GMT+11\",\n    flag: \"NU\",\n    cities: cityList.filter(city => city.country === \"NU\")\n  },\n  {\n    country: {\n      de: \"Nördliche Marianen (USA)\",\n      en: \"Northern Mariana Islands (United States)\",\n      fr: \"Îles Mariannes du Nord (États-Unis)\"\n    },\n    zone: \"Etc/GMT-10\",\n    flag: \"MP\",\n    cities: cityList.filter(city => city.country === \"MP\")\n  },\n  {\n    country: {\n      de: \"Palau\",\n      en: \"Palau\",\n      fr: \"Palaos\"\n    },\n    zone: \"Etc/GMT-9\",\n    flag: \"PW\",\n    cities: cityList.filter(city => city.country === \"PW\")\n  },\n  {\n    country: {\n      de: \"Papua-Neuguinea\",\n      en: \"Papua New Guinea\",\n      fr: \"Papouasie-Nouvelle-Guinée\"\n    },\n    zone: \"Etc/GMT-10\",\n    flag: \"PG\",\n    cities: cityList.filter(city => city.country === \"PG\")\n  },\n  {\n    country: {\n      de: \"Pitcairninseln (Vereinigtes Königreich)\",\n      en: \"Pitcairn Islands (United Kingdom)\",\n      fr: \"Îles Pitcairn (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT-9\",\n    flag: \"PN\",\n    cities: cityList.filter(city => city.country === \"PN\")\n  },\n  {\n    country: {\n      de: \"Samoa\",\n      en: \"Samoa\",\n      fr: \"Samoa\"\n    },\n    zone: \"Etc/GMT-13\",\n    flag: \"WS\",\n    cities: cityList.filter(city => city.country === \"WS\")\n  },\n  {\n    country: {\n      de: \"Salomonen\",\n      en: \"Solomon Islands\",\n      fr: \"Îles Salomon\"\n    },\n    zone: \"Etc/GMT-11\",\n    flag: \"SB\",\n    cities: cityList.filter(city => city.country === \"SB\")\n  },\n  {\n    country: {\n      de: \"Tokelau (Neuseeland)\",\n      en: \"Tokelau (New Zealand)\",\n      fr: \"Tokelau (Nouvelle-Zélande)\"\n    },\n    zone: \"Etc/GMT-13\",\n    flag: \"TK\",\n    cities: cityList.filter(city => city.country === \"TK\")\n  },\n  {\n    country: {\n      de: \"Tonga\",\n      en: \"Tonga\",\n      fr: \"Tonga\"\n    },\n    zone: \"Etc/GMT-12\",\n    flag: \"TO\",\n    cities: cityList.filter(city => city.country === \"TO\")\n  },\n  {\n    country: {\n      de: \"Tuvalu\",\n      en: \"Tuvalu\",\n      fr: \"Tuvalu\"\n    },\n    zone: \"Etc/GMT-12\",\n    flag: \"TV\",\n    cities: cityList.filter(city => city.country === \"TV\")\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\",\n      fr: \"États-Unis\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Hawaii\",\n          en: \"Hawaii\",\n          fr: \"Hawaï\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+10\",\n    flag: \"US\",\n    cities: cityList.filter(city => city.country === \"US\" && city.adminCode === \"HI\")\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\",\n      fr: \"États-Unis\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Midwayinseln\",\n          en: \"Midway Islands\",\n          fr: \"Îles Midway\"\n        }\n      } // 300\n    ],\n    zone: \"Etc/GMT+12\",\n    flag: \"US\", // eigentlich UM\n    cities: cityList.filter(city => {\n      if(city.country === \"UM\") {\n        switch(city.adminCode) {\n          case \"300\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\",\n      fr: \"États-Unis\"\n    },\n    subdiv: [\n      {title: \"Wake\"}\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"US\", // eigentlich UM\n    cities: cityList.filter(city => city.country === \"UM\" && city.adminCode === \"450\")\n  },\n  {\n    country: {\n      de: \"Vanuatu\",\n      en: \"Vanuatu\",\n      fr: \"Vanuatu\"\n    },\n    zone: \"Etc/GMT-11\",\n    flag: \"VU\",\n    cities: cityList.filter(city => city.country === \"VU\")\n  },\n  {\n    country: {\n      de: \"Wallis und Futuna (Frankreich)\",\n      en: \"Wallis and Futuna (France)\",\n      fr: \"Wallis-et-Futuna (France)\"\n    },\n    zone: \"Etc/GMT-12\",\n    flag: \"WF\",\n    cities: cityList.filter(city => city.country === \"WF\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\",\n      fr: \"Russie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Oblast Kaliningrad\",\n          en: \"Kaliningrad Oblast\",\n          fr: \"Oblast de Kaliningrad\"\n        }\n      } //23\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"RU\",\n    cities: cityList.filter(city => city.country === \"RU\" && city.adminCode === \"23\")\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\",\n      fr: \"Russie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"St. Petersburg\",\n          en: \"Saint Petersburg\",\n          fr: \"Saint-Pétersbourg\"\n        }\n      }, // 66\n      {\n        title: {\n          de: \"Republik Karelien\",\n          en: \"Karelia\",\n          fr: \"République de Carélie\"\n        }\n      }, // 28\n      {\n        title: {\n          de: \"Oblast Belgorod\",\n          en: \"Belgorod Oblast\",\n          fr: \"Oblast de Belgorod\"\n        }\n      }, // 09\n      {\n        title: {\n          de: \"Oblast Brjansk\",\n          en: \"Bryansk Oblast\",\n          fr: \"Oblast de Briansk\"\n        }\n      }, // 10\n      {\n        title: {\n          de: \"Oblast Kaluga\",\n          en: \"Kaluga Oblast\",\n          fr: \"Oblast de Kalouga\"\n        }\n      }, // 25\n      {\n        title: {\n          de: \"Oblast Kursk\",\n          en: \"Kursk Oblast\",\n          fr: \"Oblast de Koursk\"\n        }\n      }, // 41\n      {\n        title: {\n          de: \"Oblast Leningrad\",\n          en: \"Leningrad Oblast\",\n          fr: \"Oblast de Leningrad\"\n        }\n      }, // 42\n      {\n        title: {\n          de: \"Oblast Murmansk\",\n          en: \"Murmansk Oblast\",\n          fr: \"Oblast de Mourmansk\"\n        }\n      }, // 49\n      {\n        title: {\n          de: \"Oblast Nowgorod\",\n          en: \"Novgorod Oblast\",\n          fr: \"Oblast de Novgorod\"\n        }\n      }, // 52\n      {\n        title: {\n          de: \"Oblast Orjol\",\n          en: \"Oryol Oblast\",\n          fr: \"Oblast d'Orel\"\n        }\n      }, // 56\n      {\n        title: {\n          de: \"Oblast Pskow\",\n          en: \"Pskov Oblast\",\n          fr: \"Oblast de Pskov\"\n        }\n      }, // 60\n      {\n        title: {\n          de: \"Oblast Smolensk\",\n          en: \"Smolensk Oblast\",\n          fr: \"Oblast de Smolensk\"\n        }\n      }, // 69\n      {\n        title: {\n          de: \"Oblast Tula\",\n          en: \"Tula Oblast\",\n          fr: \"Oblast de Toula\"\n        }\n      }, // 76\n      {\n        title: {\n          de: \"Oblast Twer\",\n          en: \"Tver Oblast\",\n          fr: \"Oblast de Tver\"\n        }\n      }, // 77\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"09\":\n          case \"10\":\n          case \"25\":\n          case \"28\":\n          case \"41\":\n          case \"42\":\n          case \"49\":\n          case \"52\":\n          case \"56\":\n          case \"60\":\n          case \"66\":\n          case \"69\":\n          case \"76\":\n          case \"77\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\",\n      fr: \"Russie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Moskau\",\n          en: \"Moscow\",\n          fr: \"Moscou\"\n        }\n      }, // 48 \n      {\n        title: {\n          de: \"Republik Adygeja\",\n          en: \"Adygea\",\n          fr: \"République d'Adyguée\"\n        }\n      }, // 01\n      {\n        title: {\n          de: \"Republik Tschetschenien\",\n          en: \"Chechnya\",\n          fr: \"République de Tchétchénie\"\n        }\n      }, // 12\n      {\n        title: {\n          de: \"Republik Tschuwaschien\",\n          en: \"Chuvashia\",\n          fr: \"République de Tchouvashie\"\n        }\n      }, // 16\n      {\n        title: {\n          de: \"Republik Dagestan\",\n          en: \"Dagestan\",\n          fr: \"République de Daghestan\"\n        }\n      }, // 17\n      {\n        title: {\n          de: \"Republik Inguschetien\",\n          en: \"Ingushetia\",\n          fr: \"République d'Ingushie\"\n        }\n      },  // 19\n      {\n        title: {\n          de: \"Republik Kabardino-Balkarien\",\n          en: \"Kabardino-Balkaria\",\n          fr: \"République de Kabardino-Balkarie\"\n        }\n      }, // 22 \n      {\n        title: {\n          de: \"Republik Kalmückien\",\n          en: \"Kalmykia\",\n          fr: \"République de Kalmoukie\"\n        }\n      }, // 24\n      {\n        title: {\n          de: \"Republik Karatschai-Tscherkessien\",\n          en: \"Karachay-Cherkessia\",\n          fr: \"République de Karatchaïévo-Tcherkessie\"\n        }\n      }, // 27\n      {\n        title: {\n          de: \"Republik Mari El\",\n          en: \"Mari El\",\n          fr: \"République des Maris\"\n        }\n      }, // 45\n      {\n        title: {\n          de: \"Republik Mordwinien\",\n          en: \"Mordovia\",\n          fr: \"République de Mordovie\"\n        }\n      }, // 46\n      {\n        title: {\n          de: \"Republik Nordossetien-Alanien\",\n          en: \"North Ossetia-Alania\",\n          fr: \"République d'Ossétie du Nord-Alanie\"\n        }\n      }, // 68\n      {\n        title: {\n          de: \"Republik Tatarstan\",\n          en: \"Tatarstan\",\n          fr: \"République de Tatarstan\"\n        }\n      }, // 73\n      {\n        title: {\n          de: \"Republik Udmurtien\",\n          en: \"Udmurtia\",\n          fr: \"République d'Oudmourtie\"\n        }\n      }, // 80\n      {\n        title: {\n          de: \"Region Krasnodar\",\n          en: \"Krasnodar Region\",\n          fr: \"Kraï de Krasnodar\"\n        }\n      }, // 38\n      {\n        title: {\n          de: \"Region Stawropol\",\n          en: \"Stavropol Region\",\n          fr: \"Kraï de Stavropol\"\n        }\n      }, // 70\n      {\n        title: {\n          de: \"Oblast Archangelsk\",\n          en: \"Arkhangelsk Oblast\",\n          fr: \"Oblast d'Arkhangelsk\"\n        }\n      }, // 06\n      {\n        title: {\n          de: \"Oblast Astrachan\",\n          en: \"Astrakhan Oblast\",\n          fr: \"Oblast d'Astrakhan\"\n        }\n      }, // 07\n      {\n        title: {\n          de: \"Oblast Iwanowo\",\n          en: \"Ivanovo Oblast\",\n          fr: \"Oblast d'Ivanovo\"\n        }\n      }, // 21\n      {\n        title: {\n          de: \"Oblast Kirow\",\n          en: \"Kirov Oblast\",\n          fr: \"Oblast de Kirov\"\n        }\n      }, // 33\n      {\n        title: {\n          de: \"Oblast Kostroma\",\n          en: \"Kostroma Oblast\",\n          fr: \"Oblast de Kostroma\"\n        }\n      }, // 37\n      {\n        title: {\n          de: \"Oblast Lipezk\",\n          en: \"Lipetsk Oblast\",\n          fr: \"Oblast de Lipetsk\"\n        }\n      }, // 43\n      {\n        title: {\n          de: \"Oblast Moskau\",\n          en: \"Moscow Oblast\",\n          fr: \"Oblast de Moscou\"\n        }\n      }, // 47\n      {\n        title: {\n          de: \"Oblast Nischni Nowgorod\",\n          en: \"Nizhnyi Novgorod Oblast\",\n          fr: \"Oblast de Nijni Novgorod\"\n        }\n      }, // 51\n      {\n        title: {\n          de: \"Oblast Pensa\",\n          en: \"Penza Oblast\",\n          fr: \"Oblast de Penza\"\n        }\n      }, // 57\n      {\n        title: {\n          de: \"Oblast Rostow\",\n          en: \"Rostov Oblast\",\n          fr: \"Oblast de Rostov\"\n        }\n      }, // 61\n      {\n        title: {\n          de: \"Oblast Rjasan\",\n          en: \"Ryazan Oblast\",\n          fr: \"Oblast de Riazan\"\n        }\n      }, // 62\n      {\n        title: {\n          de: \"Oblast Samara\",\n          en: \"Samara Oblast\",\n          fr: \"Oblast de Samara\"\n        }\n      }, // 65\n      {\n        title: {\n          de: \"Oblast Saratow\",\n          en: \"Saratov Oblast\",\n          fr: \"Oblast de Saratov\"\n        }\n      }, // 67\n      {\n        title: {\n          de: \"Oblast Tambow\",\n          en: \"Tambov Oblast\",\n          fr: \"Oblast de Tambov\"\n        }\n      }, // 72\n      {\n        title: {\n          de: \"Oblast Uljanowsk\",\n          en: \"Ulyanovsk Oblast\",\n          fr: \"Oblast d'Oulianovsk\"\n        }\n      }, // 81\n      {\n        title: {\n          de: \"Oblast Wladimir\",\n          en: \"Vladimir Oblast\",\n          fr: \"Oblast de Vladimir\"\n        }\n      }, // 83\n      {\n        title: {\n          de: \"Oblast Wolgograd\",\n          en: \"Volgograd Oblast\",\n          fr: \"Oblast de Volgograd\"\n        }\n      }, // 84\n      {\n        title: {\n          de: \"Oblast Wologda\",\n          en: \"Vologda Oblast\",\n          fr: \"Oblast de Vologda\"\n        }\n      }, // 85\n      {\n        title: {\n          de: \"Oblast Woronesch\",\n          en: \"Voronezh Oblast\",\n          fr: \"Oblast de Voronej\"\n        }\n      }, // 86\n      {\n        title: {\n          de: \"Oblast Jaroslawl\",\n          en: \"Yaroslavl Oblast\",\n          fr: \"Oblast d'Iaroslavl\"\n        }\n      }, // 88\n      {\n        title: {\n          de: \"Autonomer Kreis der Nenzen\",\n          en: \"Nenets Autonomous Okrug\",\n          fr: \"District autonome de Nénétsie\"\n        }, \n        extra: {\n          de: \"(westlich von 52.5° O)\",\n          en: \"(west of 52.5° E)\",\n          fr: \"(ouest de 52.5° E)\"\n        }\n      } // 50\n    ],\n    zone: \"Etc/GMT-3\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"06\":\n          case \"07\":\n          case \"12\":\n          case \"16\":\n          case \"17\":\n          case \"19\":\n          case \"21\":\n          case \"22\":\n          case \"24\":\n          case \"27\":\n          case \"33\":\n          case \"37\":\n          case \"38\":\n          case \"43\":\n          case \"45\":\n          case \"46\":\n          case \"47\":\n          case \"48\":\n          case \"51\":\n          case \"57\":\n          case \"61\":\n          case \"62\":\n          case \"65\":\n          case \"67\":\n          case \"68\":\n          case \"70\":\n          case \"72\":\n          case \"73\":\n          case \"80\":\n          case \"81\":\n          case \"83\":\n          case \"84\":\n          case \"85\":\n          case \"86\":\n          case \"88\":\n            return true\n          case \"50\":\n            if(city.lon < 52.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\",\n      fr: \"Russie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Republik Baschkortostan\",\n          en: \"Bashkortostan\",\n          fr: \"République de Bachkirie\"\n        }\n      }, // 08\n      {\n        title: {\n          de: \"Republik Komi\",\n          en: \"Komi\",\n          fr: \"République de Komis\"\n        }\n      }, // 34\n      {\n        title: {\n          de: \"Region Perm\",\n          en: \"Perm Region\",\n          fr: \"Kraï de Perm\"\n        }\n      }, // 90\n      {\n        title: {\n          de: \"Oblast Tscheljabinsk\",\n          en: \"Chelyabinsk Oblast\",\n          fr: \"Oblast de Tcheliabinsk\"\n        }\n      }, // 13\n      {\n        title: {\n          de: \"Oblast Kurgan\",\n          en: \"Kurgan Oblast\",\n          fr: \"Oblast de Kourgan\"\n        }\n      }, // 40\n      {\n        title: {\n          de: \"Oblast Orenburg\",\n          en: \"Orenburg Oblast\",\n          fr: \"Oblast d'Orenbourg\"\n        }\n      }, // 55\n      {\n        title: {\n          de: \"Oblast Swerdlowsk\",\n          en: \"Sverdlovsk Oblast\",\n          fr: \"Oblast de Sverdlovsk\"\n        }\n      }, // 71\n      {\n        title: {\n          de: \"Autonomer Kreis der Nenzen\",\n          en: \"Nenets Autonomous Okrug\",\n          fr: \"District autonome de Nénétsie\"\n        }, \n        extra: {\n          de: \"(östlich von 52.5° O)\",\n          en: \"(east of 52.5° E)\",\n          fr: \"(est de 52.5° E)\"\n        }\n      } // 50\n    ],\n    zone: \"Etc/GMT-4\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"08\":\n          case \"13\":\n          case \"34\":\n          case \"40\":\n          case \"55\":\n          case \"71\":\n          case \"90\":\n            return true\n          case \"50\":\n            if(city.lon >= 52.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\",\n      fr: \"Russie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Region Altai\",\n          en: \"Altai Region\",\n          fr: \"Kraï d'Altaï\"\n        }\n      }, // 04\n      {\n        title: {\n          de: \"Oblast Nowosibirsk\",\n          en: \"Novosibirsk Oblast\",\n          fr: \"Oblast de Novossibirsk\"\n        }\n      }, // 53\n      {\n        title: {\n          de: \"Oblast Omsk\",\n          en: \"Omsk Oblast\",\n          fr: \"Oblast d'Omsk\"\n        }\n      }, // 54\n      {\n        title: {\n          de: \"Oblast Tjumen\",\n          en: \"Tyumen Oblast\",\n          fr: \"Oblast de Tioumen\"\n        }\n      }, // 78\n      {\n        title: {\n          de: \"Autonomer Kreis der Chanten und Mansen\",\n          en: \"Khanty-Mansi Autonomous Okrug\",\n          fr: \"District autonome des Khantys-Mansis-Iougra\"\n        }\n      }, // 32\n      {\n        title: {\n          de: \"Autonomer Kreis der Jamal-Nenzen\",\n          en: \"Yamalo-Nenets Autonomous Okrug\",\n          fr: \"District autonome de Iamalo-Nénétsie\"\n        }\n      }, // 87\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"04\":\n          case \"32\":\n          case \"53\":\n          case \"54\":\n          case \"78\":\n          case \"87\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\",\n      fr: \"Russie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Republik Altai\",\n          en: \"Altai Republic\",\n          fr: \"République d'Altaï\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Republik Chakassien\",\n          en: \"Khakassia\",\n          fr: \"République de Khakassie\"\n        }\n      }, // 31\n      {\n        title: {\n          de: \"Republik Tuwa\",\n          en: \"Tuva Republic\",\n          fr: \"République de Touva\"\n        }\n      }, // 79\n      {\n        title: {\n          de: \"Region Krasnojarsk\",\n          en: \"Krasnoyarsk Region\",\n          fr: \"Kraï de Krasnoïarsk\"\n        }, \n        extra: {\n          de: \"(westlich von 97.5° O)\",\n          en: \"(west of 97.5° E)\",\n          fr: \"(ouest de 97.5° E)\"\n        }\n      }, // 91\n      {\n        title: {\n          de: \"Oblast Kemerowo\",\n          en: \"Kemerovo Oblast\",\n          fr: \"Oblast de Kemerovo\"\n        }\n      }, // 29\n      {\n        title: {\n          de: \"Oblast Tomsk\",\n          en: \"Tomsk Oblast\",\n          fr: \"Oblast de Tomsk\"\n        }\n      }, // 75\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"29\":\n          case \"31\":\n          case \"75\":\n          case \"79\":\n            return true\n          case \"91\":\n            if(city.lon < 97.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\",\n      fr: \"Russie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Republik Burjatien\",\n          en: \"Buryatia\",\n          fr: \"République de Bouriatie\"\n        }\n      }, // 11\n      {\n        title: {\n          de: \"Republik Sacha\",\n          en: \"Sakha\",\n          fr: \"République de Sakha\"\n        }, \n        extra: {\n          de: \"(westlich von 112.5° O)\",\n          en: \"(west of 112.5° E)\",\n          fr: \"(ouest de 112.5 E)\"\n        }\n      }, // 63\n      {\n        title: {\n          de: \"Region Krasnojarsk\",\n          en: \"Krasnoyarsk Region\",\n          fr: \"Kraï de Krasnoïarsk\"\n        }, \n        extra: {\n          de: \"(östlich von 97.5° O)\",\n          en: \"(east of 97.5° E)\",\n          fr: \"(est de 97.5° E)\"\n        }\n      }, // 91\n      {\n        title: {\n          de: \"Oblast Irkutsk\",\n          en: \"Irkutsk Oblast\",\n          fr: \"Oblast de Irkoutsk\"\n        }, \n        extra: {\n          de: \"(westlich von 112.5° O)\",\n          en: \"(west of 112.5° E)\",\n          fr: \"(ouest de 112.5° E)\"\n        }\n      }, // 20\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"11\":\n            return true\n          case \"91\":\n            if(city.lon >= 97.5) return true\n            return false\n          case \"20\":\n          case \"63\":\n            if(city.lon < 112.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\",\n      fr: \"Russie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Republik Sacha\",\n          en: \"Sakha\",\n          fr: \"République de Sakha\"\n        }, \n        extra: {\n          de: \"(112.5° O – 127.5° O)\",\n          en: \"(112.5° E – 127.5° E)\",\n          fr: \"(112.5° E – 127.5° E)\"\n        }\n      }, // 63\n      {\n        title: {\n          de: \"Oblast Amur\",\n          en: \"Amur Oblast\",\n          fr: \"Oblast d'Amour\"\n        }\n      }, // 05\n      {\n        title: {\n          de: \"Oblast Irkutsk\",\n          en: \"Irkutsk Oblast\",\n          fr: \"Oblast de Irkoutsk\"\n        }, \n        extra: {\n          de: \"(östlich von 112.5° O)\",\n          en: \"(east of 112.5° E)\",\n          fr: \"(est de 112.5° E)\"\n        }\n      }, // 20\n      {\n        title: {\n          de: \"Region Transbaikalien\",\n          en: \"Zabaykalsky Krai\",\n          fr: \"Kraï de Transbaïkalie\"\n        }\n      }, // 93\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"05\":\n          case \"93\":\n            return true\n          case \"20\":\n            if(city.lon >= 112.5) return true\n            return false\n          case \"63\":\n            if(city.lon >= 112.5 && city.lon < 127.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\",\n      fr: \"Russie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Republik Sacha\",\n          en: \"Sakha\",\n          fr: \"République de Sakha\"\n        }, \n        extra: {\n          de: \"(127.5° O – 142.5° O)\",\n          en: \"(127.5° E – 142.5° E)\",\n          fr: \"(127.5° E – 142.5° E)\"\n        }\n      }, // 63\n      {\n        title: {\n          de: \"Region Chabarowsk\",\n          en: \"Khabarovsk Region\",\n          fr: \"Kraï de Khabarovsk\"\n        }\n      }, // 30\n      {\n        title: {\n          de: \"Region Primorje\",\n          en: \"Primorsky Krai\",\n          fr: \"Kraï de Primorié\"\n        }\n      }, // 59\n      {\n        title: {\n          de: \"Oblast Sachalin\",\n          en: \"Sakhalin Oblast\",\n          fr: \"Oblast de Sakhaline\"\n        }\n      }, // 64\n      {\n        title: {\n          de: \"Jüdische Autonome Oblast\",\n          en: \"Jewish Autonomous Oblast\",\n          fr: \"Oblast autonome juif\"\n        }\n      }, // 89\n    ],\n    zone: \"Etc/GMT-9\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"30\":\n          case \"59\":\n          case \"64\":\n          case \"89\":\n            return true\n          case \"63\":\n            if(city.lon >= 127.5 && city.lon < 142.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\",\n      fr: \"Russie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Republik Sacha\",\n          en: \"Sakha\",\n          fr: \"République de Sakha\"\n        },\n        extra: {\n          de: \"(östlich von 142.5° O)\",\n          en: \"(east of 142.5° E)\",\n          fr: \"(est de 142.5° E)\"\n        }\n      }, // 63\n      {\n        title: {\n          de: \"Oblast Magadan\",\n          en: \"Magadan Oblast\",\n          fr: \"Oblast de Magadan\"\n        }, \n        extra: {\n          de: \"(westlich von 157.5° O)\",\n          en: \"(west of 157.5° E)\",\n          fr: \"(ouest de 157.5° E)\"\n        }\n      } // 44\n    ],\n    zone: \"Etc/GMT-10\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"44\":\n            if(city.lon < 157.5) return true\n            return false\n          case \"63\":\n            if(city.lon >= 142.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\",\n      fr: \"Russie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Oblast Magadan\",\n          en: \"Magadan Oblast\",\n          fr: \"Oblast de Magadan\"\n        },\n        extra: {\n          de: \"(östlich von 157.5° O)\",\n          en: \"(east of 157.5° E)\",\n          fr: \"(est de 157.5° E)\"\n        }\n      }, // 44\n      {\n        title: {\n          de: \"Region Kamtschatka\",\n          en: \"Kamchatka\",\n          fr: \"Kraï de Kamtchatka\"\n        }\n      }, // 92\n      {\n        title: {\n          de: \"Autonomer Kreis der Tschuktschen\",\n          en: \"Chukotka Autonomous Okrug\",\n          fr: \"District autonome de Tchoukotka\"\n        }, \n        extra: {\n          de: \"(westlich von 172.5° O)\",\n          en: \"(west of 172.5° E)\",\n          fr: \"(ouest de 172.5° E)\"\n        }\n      }, // 15\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"92\":\n            return true\n          case \"15\":\n            if(city.lon < 172.5) return true\n            return false\n          case \"44\":\n            if(city.lon >= 157.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\",\n      fr: \"Russie\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Autonomer Kreis der Tschuktschen\",\n          en: \"Chukotka Autonomous Okrug\",\n          fr: \"District autonome de Tchoukotka\"\n        },\n        extra: {\n          de: \"(östlich von 172.5° O)\",\n          en: \"(east of 172.5° E)\",\n          fr: \"(est de 172.5° E)\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"RU\",\n    cities: cityList.filter(city => city.country === \"RU\" && city.adminCode === \"15\" && city.lon >= 172.5)\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Argentinien\",\n      en: \"Argentina\",\n      fr: \"Argentine\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"AR\",\n    cities: cityList.filter(city => city.country === \"AR\")\n  },\n  {\n    country: {\n      de: \"Bolivien\",\n      en: \"Bolivia\",\n      fr: \"Bolivie\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"BO\",\n    cities: cityList.filter(city => city.country === \"BO\")\n  },\n  {\n    country: {\n      de: \"Brasilien\",\n      en: \"Brazil\",\n      fr: \"Brésil\"\n    },\n    subdiv: [\n      {title: \"Acre\"}, // 01\n      {\n        title: \"Amazonas\", \n        extra: {\n          de: \"(westlicher Teil)\",\n          en: \"(western part)\",\n          fr: \"(ouest)\"\n        }\n      } // 04\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"BR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"BR\") {\n        switch(city.adminCode) {\n          case \"01\":\n            return true\n          case \"04\":\n            if(city.lon < -67.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Brasilien\",\n      en: \"Brazil\",\n      fr: \"Brésil\"\n    },\n    subdiv: [\n      {\n        title: \"Amazonas\", \n        extra: {\n          de: \"(östlicher Teil)\",\n          en: \"(eastern part)\",\n          fr: \"(est)\"\n        }\n      }, // 04\n      {title: \"Mato Grosso\"}, // 14\n      {title: \"Mato Grosso do Sul\"}, // 11\n      {\n        title: \"Pará\", \n        extra: {\n          de: \"(westlich von 52.5° W)\",\n          en: \"(west of 52.5° W)\",\n          fr: \"(ouest de 52.5° O)\"\n        }\n      }, // 16\n      {title: \"Rio Grande do Sul\"}, // 23\n      {title: \"Rondônia\"}, // 24\n      {title: \"Roraima\"}, // 25\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"BR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"BR\") {\n        switch(city.adminCode) {\n          case \"11\":\n          case \"14\":\n          case \"23\":\n          case \"24\":\n          case \"25\":\n            return true\n          case \"04\":\n            if(city.lon >= -67.5) return true\n            return false\n          case \"16\":\n            if(city.lon < -52.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false \n    })\n  },\n  {\n    country: {\n      de: \"Brasilien\",\n      en: \"Brazil\",\n      fr: \"Brésil\"\n    },\n    subdiv: [\n      {title: \"Amapá\"}, // 03\n      {title: \"Bahia\"}, // 05\n      {title: \"Ceará\"},  // 06\n      {title: \"Distrito Federal\"}, // 07\n      {title: \"Espírito Santo\"},  // 08\n      {title: \"Goiás\"}, // 29 \n      {title: \"Maranhão\"}, // 13\n      {title: \"Minas Gerais\"}, // 15\n      {\n        title: \"Pará\", \n        extra: {\n          de: \"(östlich von 52.5° W)\",\n          en: \"(east of 52.5° W)\",\n          fr: \"(est de 52.5° O)\"\n        }\n      }, // 16\n      {title: \"Paraná\"}, // 18\n      {\n        title: {\n          de: \"Pernambuco\",\n          en: \"Pernambuco\",\n          fr: \"Pernambouc\"\n        }\n      }, // 30\n      {title: \"Piauí\"}, // 20\n      {title: \"Rio de Janeiro\"}, // 21\n      {title: \"Santa Catarina\"}, // 26\n      {title: \"São Paulo\"}, // 27\n      {title: \"Tocantins\"}, // 31\n    ],\n    zone: \"Etc/GMT+3\",\n    flag: \"BR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"BR\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"05\":\n          case \"06\":\n          case \"07\":\n          case \"08\":\n          case \"13\":\n          case \"15\":\n          case \"18\":\n          case \"20\":\n          case \"21\":\n          case \"26\":\n          case \"27\":\n          case \"29\":\n          case \"30\":\n          case \"31\":\n            return true\n          case \"16\":\n            if(city.lon >= -52.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Brasilien\",\n      en: \"Brazil\",\n      fr: \"Brésil\"\n    },\n    subdiv: [\n      {title: \"Alagoas\"}, // 02\n      {title: \"Fernando de Noronha\"}, \n      {title: \"Paraíba\"}, // 17\n      {title: \"Rio Grande do Norte\"}, // 22\n      {title: \"Sergipe\"}, // 28\n    ],\n    zone: \"Etc/GMT+2\",\n    flag: \"BR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"BR\") {\n        if(city.tz === \"America/Noronha\") return true\n        switch(city.adminCode) {\n          case \"02\":\n          case \"17\":\n          case \"22\":\n          case \"28\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Chile\",\n      en: \"Chile\",\n      fr: \"Chili\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Osterinsel/Rapa Nui\",\n          en: \"Easter Island/Rapa Nui\",\n          fr: \"Île de Paques/Rapa Nui\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+7\",\n    flag: \"CL\",\n    cities: cityList.filter(city => city.country === \"CL\" && city.tz === \"Pacific/Easter\")\n  },\n  {\n    country: {\n      de: \"Chile\",\n      en: \"Chile\",\n      fr: \"Chili\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Aisén\",\n          en: \"Aisén\",\n          fr: \"Aysén\"\n        }\n      },\n      {title: \"Antofagasta\"},\n      {\n        title: {\n          de: \"Araucanía\",\n          en: \"Araucanía\",\n          fr: \"Araucanie\"\n        }\n      },\n      {\n        title: {\n          de: \"Arica und Parinacota\",\n          en: \"Arica and Parinacota\",\n          fr: \"Arica et Parinacota\"\n        }\n      },\n      {title: \"Atacama\"},\n      {title: \"Biobío\"},\n      {title: \"Coquimbo\"},\n      {\n        title: {\n          de: \"Los Lagos\",\n          en: \"Los Lagos\",\n          fr: \"Lacs\"\n        }\n      },\n      {\n        title: {\n          de: \"Los Ríos\",\n          en: \"Los Ríos\",\n          fr: \"Fleuves\"\n        }\n      },\n      {\n        title: {\n          de: \"Magallanes and Antártica Chilena Region\",\n          en: \"Magallanes and Antártica Chilena Region\",\n          fr: \"Région de Magallanes et de l'Antarctique chilien\"\n        }\n      },\n      {title: \"Maule\"},\n      {title: \"Ñuble\"},\n      {\n        title: {\n          de: \"Región del Libertador Bernardo O'Higgins\",\n          en: \"Región del Libertador Bernardo O'Higgins\",\n          fr: \"Région du Libérateur Général Bernardo O'Higgins\"\n        }\n      },\n      {title: \"Santiago\"},\n      {title: \"Tarapacá\"},\n      {\n        title: \"Valparaíso\", \n        extra: {\n          de: \"(Festland)\",\n          en: \"(continental part)\",\n          fr: \"(terre ferme)\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"CL\",\n    cities: cityList.filter(city => city.country === \"CL\" && city.tz !== \"Pacific/Easter\")\n  },\n  {\n    country: {\n      de: \"Kolumbien\",\n      en: \"Colombia\",\n      fr: \"Colombie\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"CO\",\n    cities: cityList.filter(city => city.country === \"CO\")\n  },\n  {\n    country: {\n      de: \"Ecuador\",\n      en: \"Ecuador\",\n      fr: \"Équateur\"\n    },\n    subdiv: [\n      {title: \"Azuay\"},\n      {title: \"Bolívar\"},\n      {title: \"Cañar\"},\n      {title: \"Carchi\"},\n      {title: \"Chimborazo\"},\n      {title: \"Cotopaxi\"},\n      {title: \"El Oro\"},\n      {title: \"Esmeraldas\"},\n      {title: \"Guayas\"},\n      {title: \"Imbabura\"},\n      {title: \"Loja\"},\n      {title: \"Los Ríos\"},\n      {title: \"Manabí\"},\n      {title: \"Morona Santiago\"},\n      {title: \"Napo\"},\n      {title: \"Orellana\"},\n      {title: \"Pastaza\"},\n      {title: \"Pichincha\"},\n      {title: \"Santa Elena\"},\n      {title: \"Santo Domingo de los Tsáchilas\"},\n      {title: \"Sucumbíos\"},\n      {title: \"Tungurahua\"},\n      {title: \"Zamora Chinchipe\"}\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"EC\",\n    cities: cityList.filter(city => city.country === \"CL\" && city.tz !== \"Pacific/Galapagos\")\n  },\n  {\n    country: {\n      de: \"Ecuador\",\n      en: \"Ecuador\",\n      fr: \"Équateur\"\n    },\n    subdiv: [\n      {title: \"Galápagos\"}\n    ],\n    zone: \"Etc/GMT+6\",\n    flag: \"EC\",\n    cities: cityList.filter(city => city.country === \"CL\" && city.tz === \"Pacific/Galapagos\")\n  },\n  {\n    country: {\n      de: \"Falklandinseln (Vereinigtes Königreich)\",\n      en: \"Falkland Islands (United Kingdom)\",\n      fr: \"Îles Malouines (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"FK\",\n    cities: cityList.filter(city => city.country === \"FK\")\n  },\n  {\n    country: {\n      de: \"Französisch-Guayana (Frankreich)\",\n      en: \"French Guiana (France)\",\n      fr: \"Guyane Française (France)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"GF\",\n    cities: cityList.filter(city => city.country === \"GF\")\n  },\n  {\n    country: {\n      de: \"Guyana\",\n      en: \"Guyana\",\n      fr: \"Guyana\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"GY\",\n    cities: cityList.filter(city => city.country === \"GY\")\n  },\n  {\n    country: {\n      de: \"Paraguay\",\n      en: \"Paraguay\",\n      fr: \"Paraguay\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"PY\",\n    cities: cityList.filter(city => city.country === \"PY\")\n  },\n  {\n    country: {\n      de: \"Peru\",\n      en: \"Peru\",\n      fr: \"Pérou\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"PE\",\n    cities: cityList.filter(city => city.country === \"PE\")\n  },\n  {\n    country: {\n      de: \"Südgeorgien und die Südlichen Sandwichinseln (Vereinigtes Königreich)\",\n      en: \"South Georgia and the South Sandwich Islands (United Kingdom)\",\n      fr: \"Géorgie du Sud-et-les îles Sandwich du Sud (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT+2\",\n    flag: \"GS\",\n    cities: cityList.filter(city => city.country === \"GS\")\n  },\n  {\n    country: {\n      de: \"Suriname\",\n      en: \"Suriname\",\n      fr: \"Suriname\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"SR\",\n    cities: cityList.filter(city => city.country === \"SR\")\n  },\n  {\n    country: {\n      de: \"Uruguay\",\n      en: \"Uruguay\",\n      fr: \"Uruguay\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"UY\",\n    cities: cityList.filter(city => city.country === \"UY\")\n  },\n  {\n    country: {\n      de: \"Venezuela\",\n      en: \"Venezuela\",\n      fr: \"Venezuela\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"VE\",\n    cities: cityList.filter(city => city.country === \"VE\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Bangladesch\",\n      en: \"Bangladesh\",\n      fr: \"Bangladesh\"\n    },\n    zone: \"Etc/GMT-6\",\n    flag: \"BD\",\n    cities: cityList.filter(city => city.country === \"BD\")\n  },\n  {\n    country: {\n      de: \"Bhutan\",\n      en: \"Bhutan\",\n      fr: \"Bhoutan\"\n    },\n    zone: \"Etc/GMT-6\",\n    flag: \"BT\",\n    cities: cityList.filter(city => city.country === \"BT\")\n  },\n  {\n    country: {\n      de: \"Britisches Territorium im Indischen Ozean (Vereinigtes Territorium)\",\n      en: \"British Indian Ocean Territory (United Kingdom)\",\n      fr: \"Territoire britannique de l'océan Indien (Royaume-Uni)\"\n    },\n    zone: \"Etc/GMT-5\",\n    flag: \"IO\",\n    cities: cityList.filter(city => city.country === \"IO\")\n  },\n  {\n    country: {\n      de: \"Kokosinseln (Australien)\",\n      en: \"Cocos Islands (Australia)\",\n      fr: \"Îles Cocos (Australie)\"\n    },\n    zone: \"Etc/GMT-6\",\n    flag: \"CC\",\n    cities: cityList.filter(city => city.country === \"CC\")\n  },\n  {\n    country: {\n      de: \"Indien\",\n      en: \"India\",\n      fr: \"Inde\"\n    },\n    subdiv: [\n      {title: \"Andhra Pradesh\"}, // 02\n      {title: \"Chhattisgarh\"}, // 37\n      {title: \"Goa\"}, // 33\n      {title: \"Gujarat\"}, // 09\n      {title: \"Haryana\"}, // 10\n      {title: \"Himachal Pradesh\"}, // 11\n      {title: \"Karnataka\"}, // 19\n      {title: \"Kerala\"}, // 13\n      {title: \"Madhya Pradesh\"}, // 35\n      {title: \"Maharashtra\"}, // 16\n      {\n        title: {\n          de: \"Punjab\",\n          en: \"Punjab\",\n          fr: \"Pendjab\"\n        }\n      }, // 23\n      {title: \"Rajasthan\"}, // 24\n      {title: \"Tamil Nadu\"}, // 25\n      {title: \"Telangana\"}, // 40\n      {title: \"Uttarakhand\"}, // 39\n      {title: \"Uttar Pradesh\"}, // 36\n      {\n        title: {\n          de: \"Dadra und Nagar Haveli und Daman und Diu\",\n          en: \"Dadra and Nagar Haveli and Daman and Diu\",\n          fr: \"Dadra et Nagar Haveli et Daman et Diu\"\n        }\n      }, // 52\n      {title: \"Delhi\"}, // 07\n      {\n        title: {\n          de: \"Jammu und Kaschmir\",\n          en: \"Jammu and Kashmir\",\n          fr: \"Jammu et Cachemire\"\n        }\n      }, // 12\n      {title: \"Ladakh\"}, // 41\n      {title: \"Lakshadweep\"}, // 14\n      {title: \"Puducherry\"}, // 22\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"IN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"IN\") {\n        switch(city.adminCode) {\n          case \"02\":\n          case \"07\":\n          case \"09\":\n          case \"10\":\n          case \"11\":\n          case \"12\":\n          case \"13\":\n          case \"14\":\n          case \"16\":\n          case \"19\":\n          case \"22\":\n          case \"23\":\n          case \"24\":\n          case \"25\":\n          case \"33\":\n          case \"35\":\n          case \"36\":\n          case \"37\":\n          case \"39\":\n          case \"40\":\n          case \"41\":\n          case \"52\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Indien\",\n      en: \"India\"\n    },\n    subdiv: [\n      {title: \"Arunachal Pradesh\"}, // 30\n      {title: \"Assam\"}, // 03\n      {title: \"Bihar\"}, // 34\n      {title: \"Jharkhand\"}, // 38\n      {title: \"Manipur\"}, // 17\n      {title: \"Meghalaya\"}, // 18\n      {title: \"Mizoram\"}, // 31\n      {title: \"Nagaland\"}, // 20\n      {title: \"Odisha\"}, // 21\n      {title: \"Sikkim\"}, // 29\n      {title: \"Tripura\"}, // 26\n      {\n        title: {\n          de: \"Westbengalen\",\n          en: \"West Bengal\",\n          fr: \"Bengale-Occidental\"\n        }\n      }, // 28\n      {\n        title: {\n          de: \"Andamanen und Nikobaren\",\n          en: \"Andaman and Nicobar Islands\",\n          fr: \"Îles Andaman-et-Nicobar\"\n        }\n      }, // 01\n      {title: \"Chandigarh\"}, // 05\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"IN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"IN\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"03\":\n          case \"05\":\n          case \"17\":\n          case \"18\":\n          case \"20\":\n          case \"21\":\n          case \"26\":\n          case \"28\":\n          case \"29\":\n          case \"30\":\n          case \"31\":\n          case \"34\":\n          case \"38\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Myanmar\",\n      en: \"Myanmar\",\n      fr: \"Birmanie\"\n    },\n    utcOffset: 390,\n    flag: \"MM\",\n    cities: cityList.filter(city => city.country === \"MM\")\n  },\n  {\n    country: {\n      de: \"Nepal\",\n      en: \"Nepal\",\n      fr: \"Népal\"\n    },\n    zone: \"Etc/GMT-5\",\n    flag: \"NP\",\n    cities: cityList.filter(city => city.country === \"NP\")\n  },\n  {\n    country: {\n      de: \"Malediven\",\n      en: \"Maldives\",\n      fr: \"Maldives\"\n    },\n    zone: \"Etc/GMT-5\",\n    flag: \"MV\",\n    cities: cityList.filter(city => city.country === \"MV\")\n  },\n  {\n    country: {\n      de: \"Pakistan\",\n      en: \"Pakistan\",\n      fr: \"Pakistan\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Belutschistan\",\n          en: \"Balochistan\",\n          fr: \"Baloutchistan\"\n        }\n      }, // 02\n    ],\n    zone: \"Etc/GMT-4\",\n    flag: \"PK\",\n    cities: cityList.filter(city => city.country === \"PK\" && city.adminCode === \"02\")\n  },\n  {\n    country: {\n      de: \"Pakistan\",\n      en: \"Pakistan\",\n      fr: \"Pakistan\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Asad Jammu und Kaschmir\",\n          en: \"Azad Jammu and Kashmir\",\n          fr: \"Azad Cachemire\"\n        }\n      }, // 06\n      {title: \"Gilgit-Baltistan\"}, // 07\n      {\n        title: {\n          de: \"Hauptstadtterritorium Islamabad\",\n          en: \"Islamabad Capital Territory\",\n          fr: \"Territoire fédéral d'Islamabad\"\n        }\n      }, // 08\n      {title: \"Khyber Pakhtunkhwa\"}, // 03\n      {\n        title: {\n          de: \"Punjab\",\n          en: \"Punjab\",\n          fr: \"Pendjab\"\n        }\n      }, // 04\n      {\n        title: {\n          de: \"Sindh\",\n          en: \"Sindh\",\n          fr: \"Sind\"\n        }\n      }, // 05\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"PK\",\n    cities: cityList.filter(city => {\n      if(city.country === \"PK\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"04\":\n          case \"05\":\n          case \"06\":\n          case \"07\":\n          case \"08\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Sri Lanka\",\n      en: \"Sri Lanka\",\n      fr: \"Sri Lanka\"\n    },\n    zone: \"Etc/GMT-5\",\n    flag: \"LK\",\n    cities: cityList.filter(city => city.country === \"LK\")\n  }\n]\n\nexport default countryList\n","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Brunei\",\n      en: \"Brunei\",\n      fr: \"Brunei\"\n    },\n    zone: \"Etc/GMT-8\",\n    flag: \"BN\",\n    cities: cityList.filter(city => city.country === \"BN\")\n  },\n  {\n    country: {\n      de: \"Kambodscha\",\n      en: \"Cambodia\",\n      fr: \"Cambodge\"\n    },\n    zone: \"Etc/GMT-7\",\n    flag: \"KH\",\n    cities: cityList.filter(city => city.country === \"KH\")\n  },\n  {\n    country: {\n      de: \"Weihnachtsinsel (Australien)\",\n      en: \"Christmas Island (Australia)\",\n      fr: \"Île Christmas (Australie)\"\n    },\n    zone: \"Etc/GMT-7\",\n    flag: \"CX\",\n    cities: cityList.filter(city => city.country === \"CX\")\n  },\n  {\n    country: {\n      de: \"Laos\",\n      en: \"Laos\",\n      fr: \"Laos\"\n    },\n    zone: \"Etc/GMT-7\",\n    flag: \"LA\",\n    cities: cityList.filter(city => city.country === \"LA\")\n  },\n  {\n    country: {\n      de: \"Malaysia\",\n      en: \"Malaysia\",\n      fr: \"Malaisie\"\n    },\n    subdiv: [\n      {title: \"Johor\"}, // 01\n      {title: \"Kedah\"}, // 02\n      {title: \"Kelantan\"}, // 03\n      {title: \"Kuala Lumpur\"}, // 14\n      {title: \"Malacca\"}, // 04\n      {title: \"Negeri Sembilan\"}, // 05\n      {title: \"Pahang\"}, // 06\n      {title: \"Penang\"}, // 09\n      {title: \"Perak\"}, // 07\n      {title: \"Perlis\"}, // 08\n      {title: \"Putrajaya\"}, // 17\n      {title: \"Selangor\"}, // 12\n      {title: \"Terengganu\"}, // 13\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"MY\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MY\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"02\":\n          case \"03\":\n          case \"04\":\n          case \"05\":\n          case \"06\":\n          case \"07\":\n          case \"08\":\n          case \"09\":\n          case \"12\":\n          case \"13\":\n          case \"14\":\n          case \"17\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Malaysia\",\n      en: \"Malaysia\",\n      fr: \"Malaisie\"\n    },\n    subdiv: [\n      {title: \"Labuan\"}, // 15\n      {title: \"Sabah\"},  // 16\n      {title: \"Sarawak\"} // 11\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"MY\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MY\") {\n        switch(city.adminCode) {\n          case \"11\":\n          case \"15\":\n          case \"16\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Philippinen\",\n      en: \"Philippines\",\n      fr: \"Philippines\"\n    },\n    zone: \"Etc/GMT-8\",\n    flag: \"PH\",\n    cities: cityList.filter(city => city.country === \"PH\")\n  },\n  {\n    country: {\n      de: \"Singapur\",\n      en: \"Singapore\",\n      fr: \"Singapour\"\n    },\n    zone: \"Etc/GMT-7\",\n    flag: \"SG\",\n    cities: cityList.filter(city => city.country === \"SG\")\n  },\n  {\n    country: {\n      de: \"Thailand\",\n      en: \"Thailand\",\n      fr: \"Thaïlande\"\n    },\n    zone: \"Etc/GMT-7\",\n    flag: \"TH\",\n    cities: cityList.filter(city => city.country === \"TH\")\n  },\n  {\n    country: {\n      de: \"Osttimor\",\n      en: \"Timor-Leste\",\n      fr: \"Timor oriental\"\n    },\n    zone: \"Etc/GMT-8\",\n    flag: \"TL\",\n    cities: cityList.filter(city => city.country === \"TL\")\n  },\n  {\n    country: {\n      de: \"Vietnam\",\n      en: \"Vietnam\",\n      fr: \"Viêt Nam\"\n    },\n    zone: \"Etc/GMT-7\",\n    flag: \"VN\",\n    cities: cityList.filter(city => city.country === \"VN\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\",\n      fr: \"États-Unis\"\n    },\n    subdiv: [\n      {\n        title: \"Alaska\", \n        extra: {\n          de: \"(westlich von 172.5° W)\",\n          en: \"(west of 172.5° W)\",\n          fr: \"(ouest de 172.5° O)\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT+12\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AK\":\n            if(city.lon < -172.5) return true\n            if(city.lon >= 172.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\",\n      fr: \"États-Unis\"\n    },\n    subdiv: [\n      {\n        title: \"Alaska\", \n        extra: {\n          de: \"(172.5° W – 157.5° W)\",\n          en: \"(172.5° W - 157.5° W)\",\n          fr: \"(172.5° O - 157.5° O)\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT+11\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AK\":\n            if(city.lon >= -172.5 && city.lon < -157.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\",\n      fr: \"États-Unis\"\n    },\n    subdiv: [\n      {\n        title: \"Alaska\", \n        extra: {\n          de: \"(157.5° W – 142.5° W)\",\n          en: \"(157.5° W - 142.5° W)\",\n          fr: \"(157.5° O - 142.5° O)\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT+10\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AK\":\n            if(city.lon >= -157.5 && city.lon < -142.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\",\n      fr: \"États-Unis\"\n    },\n    subdiv: [\n      {\n        title: \"Alaska\", \n        extra: {\n          de: \"(östlich von 142.5° W)\",\n          en: \"(east of 142.5° W)\",\n          fr: \"(est de 142.5° O)\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT+9\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AK\":\n            if(city.lon >= -142.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\",\n      fr: \"États-Unis\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Kalifornien\",\n          en: \"California\",\n          fr: \"Californie\"\n        }\n      },\n      {title: \"Idaho\"},\n      {title: \"Nevada\"},\n      {title: \"Oregon\"},\n      {title: \"Washington\"},\n    ],\n    zone: \"Etc/GMT+8\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"CA\":\n          case \"ID\":\n          case \"NV\":\n          case \"OR\":\n          case \"WA\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\",\n      fr: \"États-Unis\"\n    },\n    subdiv: [\n      {title: \"Arizona\"},\n      {title: \"Colorado\"},\n      {title: \"Kansas\"},\n      {title: \"Montana\"},\n      {title: \"Nebraska\"},\n      {\n        title: {\n          de: \"New Mexico\",\n          en: \"New Mexico\",\n          fr: \"Nouveau-Mexique\"\n        }\n      },\n      {\n        title: {\n          de: \"North Dakota\",\n          en: \"North Dakota\",\n          fr: \"Dakota du Nord\"\n        }\n      },\n      {title: \"Oklahoma\"},\n      {\n        title: {\n          de: \"South Dakota\",\n          en: \"South Dakota\",\n          fr: \"Dakota du Sud\"\n        }\n      },\n      {title: \"Texas\"},\n      {title: \"Utah\"},\n      {title: \"Wyoming\"},\n    ],\n    zone: \"Etc/GMT+7\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AZ\":\n          case \"CO\":\n          case \"KS\":\n          case \"MT\":\n          case \"NE\":\n          case \"NM\":\n          case \"ND\":\n          case \"OK\":\n          case \"SD\":\n          case \"TX\":\n          case \"UT\":\n          case \"WY\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\",\n      fr: \"États-Unis\"\n    },\n    subdiv: [\n      {title: \"Alabama\"},\n      {title: \"Arkansas\"},\n      {\n        title: {\n          de: \"Florida\",\n          en: \"Florida\",\n          fr: \"Floride\"\n        }, \n        extra: {\n          de: \"(westlicher Zipfel)\",\n          en: \"(panhandle)\",\n          fr: \"(panhandle)\"\n        }\n      },\n      {title: \"Illinois\"},\n      {title: \"Indiana\"},\n      {title: \"Iowa\"},\n      {title: \"Kentucky\"},\n      {\n        title: {\n          de: \"Louisiana\",\n          en: \"Louisiana\",\n          fr: \"Louisiane\"\n        }\n      },\n      {title: \"Michigan\"},\n      {title: \"Minnesota\"},\n      {title: \"Mississippi\"},\n      {title: \"Missouri\"},\n      {title: \"Tennessee\"},\n      {title: \"Wisconsin\"},\n    ],\n    zone: \"Etc/GMT+6\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AL\":\n          case \"AR\":\n          case \"IL\":\n          case \"IN\":\n          case \"IA\":\n          case \"KY\":\n          case \"LA\":\n          case \"MI\":\n          case \"MN\":\n          case \"MS\":\n          case \"MO\":\n          case \"TN\":\n          case \"WI\":\n            return true\n          case \"FL\":\n            if(city.lon < -84) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\",\n      fr: \"États-Unis\"\n    },\n    subdiv: [\n      {title: \"Connecticut\"},\n      {title: \"Delaware\"}, \n      {\n        title: {\n          de: \"District of Columbia\",\n          en: \"District of Columbia\",\n          fr: \"District de Columbia\"\n        }\n      }, \n      {\n        title: {\n          de: \"Florida\",\n          en: \"Florida\",\n          fr: \"Floride\"\n        }, \n        extra: {\n          de: \"(Hauptteil)\",\n          en: \"(except panhandle)\",\n          fr: \"(sauf panhandle)\"\n        }\n      },\n      {\n        title: {\n          de: \"Georgia\",\n          en: \"Georgia\",\n          fr: \"Géorgie\"\n        }\n      },\n      {title: \"Maine\"},\n      {title: \"Maryland\"},\n      {title: \"Massachusetts\"},\n      {title: \"New Hampshire\"},\n      {title: \"New Jersey\"},\n      {title: \"New York\"},\n      {\n        title: {\n          de: \"North Carolina\",\n          en: \"North Carolina\",\n          fr: \"Caroline du Nord\"\n        }\n      },\n      {title: \"Ohio\"},\n      {\n        title: {\n          de: \"Pennsylvania\",\n          en: \"Pennsylvania\",\n          fr: \"Pennsylvanie\"\n        }\n      },\n      {title: \"Rhode Island\"},\n      {\n        title: {\n          de: \"South Carolina\",\n          en: \"South Carolina\",\n          fr: \"Caroline du Sud\"\n        }\n      },\n      {title: \"Vermont\"},\n      {\n        title: {\n          de: \"Virginia\",\n          en: \"Virginia\",\n          fr: \"Virginie\"\n        }\n      },\n      {\n        title: {\n          de: \"West Virginia\",\n          en: \"West Virginia\",\n          fr: \"Virginie-Occidentale\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"CT\":\n          case \"DE\":\n          case \"DC\":\n          case \"GE\":\n          case \"ME\":\n          case \"MD\":\n          case \"MA\":\n          case \"NH\":\n          case \"NJ\":\n          case \"NY\":\n          case \"NC\":\n          case \"OH\":\n          case \"PA\":\n          case \"RI\":\n          case \"SC\":\n          case \"VT\":\n          case \"VA\":\n          case \"WV\":\n            return true\n          case \"FL\":\n            if(city.lon >= -84) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n]\n\nexport default countryList","import Africa from \"./timezones-ideal/Africa\"\nimport Antarctica from \"./timezones-ideal/Antarctica\"\nimport Australia from \"./timezones-ideal/Australia\"\nimport Canada from \"./timezones-ideal/Canada\"\nimport Caribbean from \"./timezones-ideal/Caribbean\"\nimport CentralAmerica from \"./timezones-ideal/CentralAmerica\"\nimport CentralAsia from \"./timezones-ideal/CentralAsia\"\nimport EastAsia from \"./timezones-ideal/EastAsia\"\nimport Europe from \"./timezones-ideal/Europe\"\nimport Indonesia from \"./timezones-ideal/Indonesia\"\nimport MiddleEast from \"./timezones-ideal/MiddleEast\"\nimport Oceania from \"./timezones-ideal/Oceania\"\nimport Russia from \"./timezones-ideal/Russia\"\nimport SouthAmerica from \"./timezones-ideal/SouthAmerica\"\nimport SouthAsia from \"./timezones-ideal/SouthAsia\"\nimport SouthEastAsia from \"./timezones-ideal/SouthEastAsia\"\nimport UnitedStates from \"./timezones-ideal/UnitedStates\"\n\nconst tzlist = [\n  ...Africa, \n  ...Antarctica,\n  ...Australia,\n  ...Canada,\n  ...Caribbean,\n  ...CentralAmerica,\n  ...CentralAsia, \n  ...EastAsia, \n  ...Europe, \n  ...Indonesia,\n  ...MiddleEast,\n  ...Oceania, \n  ...Russia, \n  ...SouthAmerica,\n  ...SouthAsia,\n  ...SouthEastAsia,\n  ...UnitedStates\n]\n\nexport default tzlist","import React, { useEffect, lazy } from \"react\";\nimport { useDebugState } from \"use-named-state\";\nimport moment from \"moment-timezone\"\nimport timezonesRaw from \"../components/data-ideal\"\nimport \"../styles/App.css\";\nimport { getPermLocale } from \"../components/getLocale\";\nconst Clock = lazy(() => import(\"../components/Clock\"))\n/* eslint-disable react-hooks/exhaustive-deps */\n\nexport default function Ideal() {\n  const [allStates] = useDebugState(\"allStates\", timezonesRaw)\n  const [filtVal, setFiltVal] = useDebugState(\"filterValue\",\"\")\n  const [timezones, setTimezones] = useDebugState(\"timezones\",null)\n  const prepareZones = (filterVal) => {\n    const unsortedStates = allStates.map(tz => {\n      const Now = moment().utc().format(\"x\")\n      const {country, zone, flag, subdiv, utcOffset = undefined, cities = [] } = tz \n      if (utcOffset) {\n        const prefix = utcOffset < 0 ? \"-\" : \"+\"\n        const hours = Math.floor(Math.abs(utcOffset)/60)\n        const formattedHours = hours < 10 ? `0${hours}` : `${hours}`\n        const minutes = Math.abs(utcOffset) - (60 * hours)\n        const formattedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`\n        const offset = `${prefix}${formattedHours}:${formattedMinutes}`\n        const numericOffset = utcOffset\n        return { country, zone: null, flag, offset, numericOffset, subdiv, cities }\n      }\n      const offset = moment().tz(zone).format(\"Z\")\n      const numericOffset = -1 * moment.tz.zone(zone).utcOffset(Now)\n      return { country, zone, flag, offset, numericOffset, subdiv, cities }\n    })\n    const sortedStates = unsortedStates.sort((a,b) => (a.numericOffset - b.numericOffset))\n    const timezoneObject = sortedStates.reduce((acc, curr) => {\n      const obj = {...acc}\n      const { flag: code, offset, country: title, zone, numericOffset, subdiv = [], cities = [] } = curr\n      const city = numericOffset === 0 ? \"UTC±00:00\" : \"UTC\" + offset\n      const flag = { code, title, subdiv }\n      if (obj.hasOwnProperty(city)) {\n        obj[city].flags.push(flag)\n        obj[city].cities = obj[city].cities.concat(cities)\n      } else {\n        obj[city] = { city, numericOffset, zone, flags: [flag], cities }\n      }\n      return obj\n    }, {})\n    const timezoneArray = Object.values(timezoneObject).sort((a,b) => (a.numericOffset - b.numericOffset))\n    const filterValue = filterVal != null ? filterVal : filtVal\n    const filteredStates = filterValue !== \"\"  ? timezoneArray.filter(tz => {\n      const { flags, cities } = tz\n      const filteredFlags = flags.filter(flag => {\n        const { title: country, subdiv = [] } = flag\n        const title = subdiv.length > 0 ? `${country}: ${subdiv.map(item => item.title).join(\", \")}` : country\n        if(filterValue !== \"\"){\n          if(title.toLowerCase().includes(filterValue.toLowerCase())) return true\n          return false\n        }\n        return true\n      })\n      if(filteredFlags.length > 0) return true\n      const filteredCities = cities.filter(city => city.asciiname.toLowerCase().includes(filterValue.toLowerCase()))\n      if(filteredCities.length > 0) return true\n      return false\n    }) : timezoneArray\n    setTimezones(filteredStates)\n  }\n  useEffect(() => {\n    prepareZones()\n    setInterval(1000,prepareZones)\n  }, [])\n  return (\n    <div className=\"app\">\n      <div style={{ textAlign: \"center\", marginBottom: \"24px\", marginTop: \"24px\" }}>\n        <input type=\"text\" placeholder={getPermLocale(\"FilterCountries\")} onChange={(e) => {\n          setFiltVal(e.target.value)\n          prepareZones(e.target.value)\n          }} />\n      </div>\n      <div className=\"row album sk-album\"> \n      {timezones && timezones.length > 0 && timezones.map((time, index) => <Clock key={index} flags={time.flags} city={time.city} zone={time.zone} offset={time.numericOffset} cities={time.cities} />)}\n      </div>\n    </div>\n  );\n}\n"],"names":["cityListRaw","city","country","population","cPopulation","de","en","fr","zone","flag","cities","cityList","subdiv","title","includes","adminCode","tz","extra","lon","utcOffset","Africa","Antarctica","Australia","Canada","Caribbean","CentralAmerica","CentralAsia","EastAsia","Europe","Indonesia","MiddleEast","Oceania","Russia","SouthAmerica","SouthAsia","SouthEastAsia","UnitedStates","Clock","lazy","Ideal","useDebugState","timezonesRaw","allStates","filtVal","setFiltVal","timezones","setTimezones","prepareZones","filterVal","timezoneObject","map","Now","moment","utc","format","undefined","prefix","hours","Math","floor","abs","formattedHours","minutes","formattedMinutes","offset","numericOffset","sort","a","b","reduce","acc","curr","obj","code","hasOwnProperty","flags","push","concat","timezoneArray","Object","values","filterValue","filteredStates","filter","length","item","join","toLowerCase","asciiname","useEffect","setInterval","className","style","textAlign","marginBottom","marginTop","type","placeholder","getPermLocale","onChange","e","target","value","time","index"],"sourceRoot":""}
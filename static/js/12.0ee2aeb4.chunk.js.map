{"version":3,"sources":["components/timezones-ideal/cityList.js","components/timezones-ideal/Africa.js","components/timezones-ideal/Antarctica.js","components/timezones-ideal/Australia.js","components/timezones-ideal/Canada.js","components/timezones-ideal/Caribbean.js","components/timezones-ideal/CentralAmerica.js","components/timezones-ideal/CentralAsia.js","components/timezones-ideal/EastAsia.js","components/timezones-ideal/Europe.js","components/timezones-ideal/Indonesia.js","components/timezones-ideal/MiddleEast.js","components/timezones-ideal/Oceania.js","components/timezones-ideal/Russia.js","components/timezones-ideal/SouthAmerica.js","components/timezones-ideal/SouthAsia.js","components/timezones-ideal/SouthEastAsia.js","components/timezones-ideal/UnitedStates.js","components/data-ideal.js","pages/Ideal.js"],"names":["cityList","cityListRaw","filter","city","country","population","cPopulation","countryList","de","en","zone","flag","cities","subdiv","title","includes","adminCode","tz","extra","lon","utcOffset","tzlist","Africa","Antarctica","Australia","Canada","Caribbean","CentralAmerica","CentralAsia","EastAsia","Europe","Indonesia","MiddleEast","Oceania","Russia","SouthAmerica","SouthAsia","SouthEastAsia","UnitedStates","Clock","lazy","Ideal","useDebugState","timezonesRaw","allStates","filtVal","setFiltVal","timezones","setTimezones","prepareZones","filterVal","timezoneObject","map","Now","moment","utc","format","undefined","prefix","hours","Math","floor","abs","formattedHours","minutes","formattedMinutes","offset","numericOffset","sort","a","b","reduce","acc","curr","obj","code","hasOwnProperty","flags","push","concat","timezoneArray","Object","values","filterValue","filteredStates","length","item","join","toLowerCase","asciiname","useEffect","setInterval","className","style","textAlign","marginBottom","marginTop","type","placeholder","getPermLocale","onChange","e","target","value","time","index"],"mappings":"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EAAKC,YAEvC,CACEA,QAAS,CACPI,GAAI,gBACJC,GAAI,gBAENC,KAAM,YACNC,KAAM,KACNC,OAAQZ,EAASE,QAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKC,YAEvC,CACEA,QAAS,CACPI,GAAI,SACJC,GAAI,SAENC,KAAM,YACNC,KAAM,KACNC,OAAQZ,EAASE,QAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKC,YAEvC,CACEA,QAAS,CACPI,GAAI,YACJC,GAAI,UAENI,OAAQ,CACN,CAACC,MAAO,SACR,CAACA,MAAO,kBACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,UACR,CAACA,MAAO,WACR,CAACA,MAAO,SACR,CAACA,MAAO,kBACR,CAACA,MAAO,eACR,CAACA,MAAO,WACR,CAACA,MAAO,QACR,CAACA,MAAO,UACR,CAACA,MAAO,SACR,CAACA,MAAO,gBACR,CAACA,MAAO,wBACR,CAACA,MAAO,YACR,CAACA,MAAO,WACR,CAACA,MAAO,YACR,CAACA,MAAO,UACR,CAACA,MAAO,kBACR,CAACA,MAAO,SACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,iBACR,CAACA,MAAO,cACR,CAACA,MAAO,sBACR,CAACA,MAAO,cACR,CAACA,MAAO,WACR,CAACA,MAAO,aACR,CAACA,MAAO,WACR,CAACA,MAAO,uBACR,CAACA,MAAO,mBACR,CAACA,MAAO,sBACR,CAACA,MAAO,WACR,CAACA,MAAO,SACR,CAACA,MAAO,cACR,CAACA,MAAO,UACR,CAACA,MAAO,cACR,CAACA,MAAO,iBACR,CAACA,MAAO,cACR,CAACA,MAAO,YACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,SACR,CAACA,MAAO,SACR,CAACA,MAAO,iBACR,CAACA,MAAO,SACR,CAACA,MAAO,aACR,CAACA,MAAO,UACR,CAACA,MAAO,UACR,CAACA,MAAO,cAEVJ,KAAM,YACNC,KAAM,KACNC,OAAQZ,EAASE,QAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKC,QACN,OAAOD,EAAKab,OAAO,MAGX,CACEZ,QAAS,CACPI,GAAI,YACJC,GAAI,UAENI,OAAQ,CACN,CAACC,MAAO,iBACR,CAACA,MAAO,kBACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,UACR,CAACA,MAAO,WACR,CAACA,MAAO,aACR,CAACA,MAAO,UACR,CAACA,MAAO,mBACR,CAACA,MAAO,oBACR,CAACA,MAAO,YACR,CAACA,MAAO,WACR,CAACA,MAAO,aACR,CAACA,MAAO,WACR,CAACA,MAAO,wBACR,CAACA,MAAO,WACR,CAACA,MAAO,mBACR,CAACA,MAAO,QACR,CAACA,MAAO,SACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,YACR,CAACA,MAAO,QACR,CAACA,MAAO,QACR,CAACA,MAAO,uBACR,CAACA,MAAO,SACR,CAACA,MAAO,oBACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,QAEVJ,KAAM,YACNC,KAAM,KACNC,OAAQZ,EAASE,QAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKC,QACN,OAAOD,EAAKa,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,QACE,OAAO,EAGb,OAAO,MAGX,CACEZ,QAAS,CACPI,GAAI,+BACJC,GAAI,wBAENW,UAAW,IACXT,KAAM,KACNC,OAAQZ,EAASE,QAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKC,YAEvC,CACEA,QAAS,CACPI,GAAI,QACJC,GAAI,SAENC,KAAM,YACNC,KAAM,KACNC,OAAQZ,EAASE,QAAO,SAAAC,GAAI,MAAqB,OAAjBA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","file":"static/js/12.0ee2aeb4.chunk.js","sourcesContent":["import cityListRaw from \"../cities500K.json\"\nimport cPopulation from \"../population\"\n\nconst cityList = cityListRaw.filter(city => {\n  const { country, population } = city\n  const countryPopulation = cPopulation[country] \n  const minPopulation = 0.005 * countryPopulation\n  if (population >= minPopulation) {\n    return true\n  }\n  return false\n})\n\nexport default cityList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Algerien\",\n      en: \"Algeria\",\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"DZ\",\n    cities: cityList.filter(city => city.country === \"DZ\")\n  },\n  {\n    country: {\n      de: \"Angola\",\n      en: \"Angola\",\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"AO\",\n    cities: cityList.filter(city => city.country === \"AO\")\n  },\n  {\n    country: {\n      de: \"Benin\",\n      en: \"Benin\",\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"BJ\",\n    cities: cityList.filter(city => city.country === \"BJ\")\n  },\n  {\n    country: {\n      de: \"Botswana\",\n      en: \"Botswana\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"BW\",\n    cities: cityList.filter(city => city.country === \"BW\")\n  },\n  {\n    country: {\n      de: \"Burkina Faso\",\n      en: \"Burkina Faso\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"BF\",\n    cities: cityList.filter(city => city.country === \"BF\")\n  },\n  {\n    country: {\n      de: \"Burundi\",\n      en: \"Burundi\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"BI\",\n    cities: cityList.filter(city => city.country === \"BI\")\n  },\n  {\n    country: {\n      de: \"Kap Verde\",\n      en: \"Cabo Verde\"\n    },\n    zone: \"Etc/GMT+2\",\n    flag: \"CV\",\n    cities: cityList.filter(city => city.country === \"CV\")\n  },\n  {\n    country: {\n      de: \"Kamerun\",\n      en: \"Cameroon\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"CM\",\n    cities: cityList.filter(city => city.country === \"CM\")\n  },\n  {\n    country: {\n      de: \"Zentralafrikanische Republik\",\n      en: \"Central African Republic\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"CF\",\n    cities: cityList.filter(city => city.country === \"CF\")\n  },\n  {\n    country: {\n      de: \"Tschad\",\n      en: \"Chad\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"TD\",\n    cities: cityList.filter(city => city.country === \"TD\")\n  },\n  {\n    country: {\n      de: \"Komoren\",\n      en: \"Comoros\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"KM\",\n    cities: cityList.filter(city => city.country === \"KM\")\n  },\n  {\n    country: {\n      de: \"Elfenbeinküste\",\n      en: \"Côte d'Ivoire\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"CI\",\n    cities: cityList.filter(city => city.country === \"CI\")\n  },\n  {\n    country: {\n      de: \"Demokratische Republik Kongo\",\n      en: \"Democratic Republic of the Congo\"\n    },\n    subdiv: [\n      {title: \"Équateur\"}, // 02\n      {title: \"Kasaï\"}, // 18\n      {title: \"Kinshasa\"}, // 06\n      {title: \"Kongo Central\"}, // 08\n      {title: \"Kwango\"}, // 19\n      {title: \"Kwilu\"}, // 20\n      {title: \"Mai-Ndombe\"}, // 24\n      {title: \"Mongala\"}, // 25\n      {title: \"Nord-Ubangi\"}, // 26\n      {title: \"Sud-Ubangi\"}, // 28\n      {title: \"Tshuapa\"} // 31\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"CD\",\n    cities: cityList.filter(city => city.country === \"CD\" && [\"02\",\"06\",\"08\",\"18\",\"19\",\"20\",\"24\",\"25\",\"26\",\"28\",\"31\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Demokratische Republik Kongo\",\n      en: \"Democratic Republic of the Congo\"\n    },\n    subdiv: [\n      {title: \"Bas-Uele\"}, // 13\n      {title: \"Haut-Katanga\"}, // 14 \n      {title: \"Haut-Lomami\"}, // 15\n      {title: \"Haut-Uele\"}, // 16\n      {title: \"Ituri\"}, // 17\n      {title: \"Kasaï-Central\"}, // 23\n      {title: \"Kasaï-Oriental\"}, // 04\n      {title: \"Lomami\"}, // 21\n      {title: \"Lualaba\"}, // 22\n      {title: \"Maniema\"}, // 10\n      {title: \"Nord-Kivu\"}, // 11\n      {title: \"Sankuru\"}, // 27\n      {title: \"Sud-Kivu\"}, // 12\n      {title: \"Tanganjika\"}, // 29\n      {title: \"Tshopo\"}, // 30\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"CD\",\n    cities: cityList.filter(city => city.country === \"CD\" && [\"04\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"21\",\"22\",\"23\",\"27\",\"29\",\"30\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Dschibuti\",\n      en: \"Djibouti\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"DJ\",\n    cities: cityList.filter(city => city.country === \"DJ\")\n  },\n  {\n    country: {\n      de: \"Ägypten\",\n      en: \"Egypt\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"EG\",\n    cities: cityList.filter(city => city.country === \"EG\")\n  },\n  {\n    country: {\n      de: \"Äquatorialguinea\",\n      en: \"Equatorial Guinea\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"GQ\",\n    cities: cityList.filter(city => city.country === \"GQ\")\n  },\n  {\n    country: {\n      de: \"Eritrea\",\n      en: \"Eritrea\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"ER\",\n    cities: cityList.filter(city => city.country === \"ER\")\n  },\n  {\n    country: {\n      de: \"eSwatini\",\n      en: \"eSwatini\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"SZ\",\n    cities: cityList.filter(city => city.country === \"SZ\")\n  },\n  {\n    country: {\n      de: \"Äthiopien\",\n      en: \"Ethiopia\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"ET\",\n    cities: cityList.filter(city => city.country === \"ET\")\n  },\n  {\n    country: {\n      de: \"Mayotte (Frankreich)\",\n      en: \"Mayotte (France)\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"YT\",\n    cities: cityList.filter(city => city.country === \"YT\")\n  },\n  {\n    country: {\n      de: \"La Réunion (Frankreich)\",\n      en: \"La Réunion (France)\"\n    },\n    zone: \"Etc/GMT-4\",\n    flag: \"RE\",\n    cities: cityList.filter(city => city.country === \"RE\")\n  },\n  {\n    country: {\n      de: \"Französische Süd- und Antarktisgebiete (Frankreich)\",\n      en: \"French Southern and Antarctic Lands (France)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Crozetinseln\",\n          en: \"Crozet Islands\"\n        }\n      },\n      {\n        title: {\n          de: \"Îles Éparses\",\n          en: \"Scattered Islands in the Indian Ocean\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT-4\",\n    flag: \"TF\",\n    cities: cityList.filter(city => city.country === \"TF\" && [\"02\",\"05\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Französische Süd- und Antarktisgebiete (Frankreich)\",\n      en: \"French Southern and Antarctic Lands (France)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Kerguelen-Archipel\",\n          en: \"Kerguelen Islands\"\n        }\n      },\n      {\n        title: {\n          de: \"Sankt Paul und Amsterdam\",\n          en: \"St. Paul and Amsterdam Islands\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"TF\",\n    cities: cityList.filter(city => city.country === \"TF\" && [\"01\",\"03\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Gabun\",\n      en: \"Gabon\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"GA\",\n    cities: cityList.filter(city => city.country === \"GA\")\n  },\n  {\n    country: {\n      de: \"Gambia\",\n      en: \"The Gambia\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"GM\",\n    cities: cityList.filter(city => city.country === \"GM\")\n  },\n  {\n    country: {\n      de: \"Ghana\",\n      en: \"Ghana\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"GH\",\n    cities: cityList.filter(city => city.country === \"GH\")\n  },\n  {\n    country: {\n      de: \"Guinea\",\n      en: \"Guinea\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"GN\",\n    cities: cityList.filter(city => city.country === \"GN\")\n  },\n  {\n    country: {\n      de: \"Guinea-Bissau\",\n      en: \"Guinea-Bissau\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"GW\",\n    cities: cityList.filter(city => city.country === \"GW\")\n  },\n  {\n    country: {\n      de: \"Kenia\",\n      en: \"Kenya\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"KE\",\n    cities: cityList.filter(city => city.country === \"KE\")\n  },\n  {\n    country: {\n      de: \"Lesotho\",\n      en: \"Lesotho\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"LS\",\n    cities: cityList.filter(city => city.country === \"LS\")\n  },\n  {\n    country: {\n      de: \"Liberia\",\n      en: \"Liberia\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"LR\",\n    cities: cityList.filter(city => city.country === \"LR\")\n  },\n  {\n    country: {\n      de: \"Libyen\",\n      en: \"Libya\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"LY\",\n    cities: cityList.filter(city => city.country === \"LY\")\n  },\n  {\n    country: {\n      de: \"Madagaskar\",\n      en: \"Madagascar\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"MG\",\n    cities: cityList.filter(city => city.country === \"MG\")\n  },\n  {\n    country: {\n      de: \"Malawi\",\n      en: \"Malawi\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"MW\",\n    cities: cityList.filter(city => city.country === \"MW\")\n  },\n  {\n    country: {\n      de: \"Mali\",\n      en: \"Mali\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"ML\",\n    cities: cityList.filter(city => city.country === \"ML\")\n  },\n  {\n    country: {\n      de: \"Mauretanien\",\n      en: \"Mauritania\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"MR\",\n    cities: cityList.filter(city => city.country === \"MR\")\n  },\n  {\n    country: {\n      de: \"Mauritius\",\n      en: \"Mauritius\"\n    },\n    zone: \"Etc/GMT-4\",\n    flag: \"MU\",\n    cities: cityList.filter(city => city.country === \"MU\")\n  },\n  {\n    country: {\n      de: \"Marokko\",\n      en: \"Morocco\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"MA\",\n    cities: cityList.filter(city => city.country === \"MA\")\n  },\n  {\n    country: {\n      de: \"Mosambik\",\n      en: \"Mozambique\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"MZ\",\n    cities: cityList.filter(city => city.country === \"MZ\")\n  },\n  {\n    country: {\n      de: \"Namibia\",\n      en: \"Namibia\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"NA\",\n    cities: cityList.filter(city => city.country === \"NA\")\n  },\n  {\n    country: {\n      de: \"Niger\",\n      en: \"Niger\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"NE\",\n    cities: cityList.filter(city => city.country === \"NE\")\n  },\n  {\n    country: {\n      de: \"Nigeria\",\n      en: \"Nigeria\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"NG\",\n    cities: cityList.filter(city => city.country === \"NG\")\n  },\n  {\n    country: {\n      de: \"Republik Kongo\",\n      en: \"Republic of the Congo\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"CG\",\n    cities: cityList.filter(city => city.country === \"CG\")\n  },\n  {\n    country: {\n      de: \"Ruanda\",\n      en: \"Rwanda\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"RW\",\n    cities: cityList.filter(city => city.country === \"RW\")\n  },\n  {\n    country: {\n      de: \"São Tomé und Príncipe\",\n      en: \"São Tomé and Príncipe\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"ST\",\n    cities: cityList.filter(city => city.country === \"ST\")\n  },\n  {\n    country: {\n      de: \"Demokratische Arabische Republik Sahara\",\n      en: \"Sahrawi Arab Democratic Republic\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"EH\",\n    cities: cityList.filter(city => city.country === \"EH\")\n  },\n  {\n    country: {\n      de: \"Senegal\",\n      en: \"Senegal\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"SN\",\n    cities: cityList.filter(city => city.country === \"SN\")\n  },\n  {\n    country: {\n      de: \"Seychellen\",\n      en: \"Seychelles\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"SC\",\n    cities: cityList.filter(city => city.country === \"SC\")\n  },\n  {\n    country: {\n      de: \"Sierra Leone\",\n      en: \"Sierra Leone\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"SL\",\n    cities: cityList.filter(city => city.country === \"SL\")\n  },\n  {\n    country: {\n      de: \"Somalia\",\n      en: \"Somalia\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"SO\",\n    cities: cityList.filter(city => city.country === \"SO\")\n  },\n  {\n    country: {\n      de: \"Südafrika\",\n      en: \"South Africa\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Nordkap\",\n          en: \"Northern Cape\"\n        }\n      }, // 08\n      {\n        title: {\n          de: \"Westkap\",\n          en: \"Western Cape\"\n        }\n      }, // 11\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"ZA\",\n    cities: cityList.filter(city => city.country === \"ZA\" && [\"08\",\"11\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Südafrika\",\n      en: \"South Africa\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Ostkap\",\n          en: \"Eastern Cape\"\n        }\n      }, // 05\n      {\n        title: {\n          de: \"Freistaat\",\n          en: \"Free State\"\n        }\n      }, //  03\n      {\n        title: {\n          de: \"Gauteng\",\n          en: \"Gauteng\"\n        }\n      }, // 06\n      {\n        title: {\n          de: \"KwaZulu-Natal\",\n          en: \"KwaZulu-Natal\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Limpopo\",\n          en: \"Limpopo\"\n        }\n      }, // 09\n      {\n        title: {\n          de: \"Mpumalanga\",\n          en: \"Mpumalanga\"\n        }\n      }, // 07\n      {\n        title: {\n          de: \"Nordwest\",\n          en: \"North West\"\n        }\n      }, // 10\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"ZA\",\n    cities: cityList.filter(city => city.country === \"ZA\" && [\"02\",\"03\",\"05\",\"06\",\"07\",\"09\",\"10\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Südsudan\",\n      en: \"South Sudan\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"SS\",\n    cities: cityList.filter(city => city.country === \"SS\")\n  },\n  {\n    country: {\n      de: \"Spanien\",\n      en: \"Spain\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Ceuta\",\n          en: \"Ceuta\"\n        }\n      }, \n      {\n        title: {\n          de: \"Melilla\",\n          en: \"Melilla\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+0\",\n    flag: \"ES\",\n    cities: cityList.filter(city => city.country === \"ES\" && [\"CE\", \"ML\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Sudan\",\n      en: \"Sudan\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"SD\",\n    cities: cityList.filter(city => city.country === \"SD\")\n  },\n  {\n    country: {\n      de: \"Tansania\",\n      en: \"Tanzania\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"TZ\",\n    cities: cityList.filter(city => city.country === \"TZ\")\n  },\n  {\n    country: {\n      de: \"Togo\",\n      en: \"Togo\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"TG\",\n    cities: cityList.filter(city => city.country === \"TG\")\n  },\n  {\n    country: {\n      de: \"Tunesien\",\n      en: \"Tunisia\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"TN\",\n    cities: cityList.filter(city => city.country === \"TN\")\n  },\n  {\n    country: {\n      de: \"Uganda\",\n      en: \"Uganda\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"UG\",\n    cities: cityList.filter(city => city.country === \"UG\")\n  },\n  {\n    country: {\n      de: \"Ascension (Vereinigtes Königreich)\",\n      en: \"Ascension (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"AC\",\n    cities: cityList.filter(city => city.country === \"SH\" && city.adminCode === \"01\")\n  },\n  {\n    country: {\n      de: \"St. Helena (Vereinigtes Königreich)\",\n      en: \"St. Helena (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"SH\",\n    cities: cityList.filter(city => city.country === \"SH\" && city.adminCode === \"02\")\n  },\n  {\n    country: {\n      de: \"Tristan da Cunha (Vereinigtes Königreich)\",\n      en: \"Tristan da Cunha (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"TA\",\n    cities: cityList.filter(city => city.country === \"SH\" && city.adminCode === \"03\")\n  },\n  {\n    country: {\n      de: \"Sambia\",\n      en: \"Zambia\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"ZM\",\n    cities: cityList.filter(city => city.country === \"ZM\")\n  },\n  {\n    country: {\n      de: \"Simbabwe\",\n      en: \"Zimbabwe\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"ZW\",\n    cities: cityList.filter(city => city.country === \"ZW\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Casey (Australien)\",\n          en: \"Casey (Australia)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Casey\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Davis (Australien)\",\n          en: \"Davis (Australia)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Davis\")\n  },\n  {\n    country: {\n      de: \"Französische Süd- und Antarktisgebiete (Frankreich)\",\n      en: \"French Southern and Antarctic Lands (France)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Adélieland/Dumont-d'Urville-Station\",\n          en: \"Adélie Land/Dumont-d'Urville Station\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-10\",\n    flag: \"TF\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/DumontDUrville\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Mawson (Australien)\",\n          en: \"Mawson (Australia)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Mawson\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"McMurdo (USA)\",\n          en: \"McMurdo (United States)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/McMurdo\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Palmer (USA)\",\n          en: \"Palmer (United States)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+3\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Palmer\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Rothera (Vereinigtes Königreich)\",\n          en: \"Rothera (United Kingdom)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+3\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Rothera\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Shōwa (Japan)\",\n          en: \"Shōwa (Japan)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-3\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Syowa\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Troll (Norwegen)\",\n          en: \"Troll (Norway)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+0\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Troll\")\n  },\n  {\n    country: {\n      de: \"Antarktis\",\n      en: \"Antarctica\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Wostok (Russland)\",\n          en: \"Vostok (Russia)\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Vostok\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Australien\",\n      en: \"Australia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Westaustralien\",\n          en: \"Western Australia\"\n        }\n      } // 08\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"AU\",\n    cities: cityList.filter(city => city.country === \"AU\" && city.adminCode === \"08\")\n  },\n  {\n    country: {\n      de: \"Australien\",\n      en: \"Australia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Nordterritorium\",\n          en: \"Northern Territory\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Südaustralien\",\n          en: \"South Australia\"\n        }\n      }, // 05\n    ],\n    zone: \"Etc/GMT-9\",\n    flag: \"AU\",\n    cities: cityList.filter(city => city.country === \"AU\" && [\"03\",\"05\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Australien\",\n      en: \"Australia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Australisches Hauptstadtterritorium\",\n          en: \"Australian Capital Territory\"\n        }\n      }, // 01\n      {\n        title: {\n          de: \"Neusüdwales\",\n          en: \"New South Wales\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Queensland\",\n          en: \"Queensland\"\n        }\n      }, // 04\n      {\n        title: {\n          de: \"Tasmanien\",\n          en: \"Tasmania\"\n        }\n      }, // 06\n      {\n        title: {\n          de: \"Victoria\",\n          en: \"Victoria\"\n        }\n      } // 07\n    ],\n    zone: \"Etc/GMT-10\",\n    flag: \"AU\",\n    cities: cityList.filter(city => city.country === \"AU\" && [\"01\",\"02\",\"04\",\"06\",\"07\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Australien\",\n      en: \"Australia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Lord-Howe-Inselgruppe\",\n          en: \"Lord Howe Island\"\n        }\n      },\n      {\n        title: {\n          de: \"Norfolkinsel\",\n          en: \"Norfolk Island\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"AU\",\n    cities: []\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Kanada\",\n      en: \"Canada\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Neufundland und Labrador\",\n          en: \"Newfoundland and Labrador\"\n        }\n      }, // 05\n      {\n        title: {\n          de: \"New Brunswick\",\n          en: \"New Brunswick\"\n        }\n      }, // 04\n      {\n        title: {\n          de: \"Nova Scotia\",\n          en: \"Nova Scotia\"\n        }\n      }, // 07\n      {\n        title: {\n          de: \"Nunavut\",\n          en: \"Nunavut\"\n        }, \n        extra: {\n          de: \"(östlich von 67.5° W)\",\n          en: \"(east of 67.5° W)\"\n        }\n      }, // 14\n      {\n        title: {\n          de: \"Prince Edward Island\",\n          en: \"Prince Edward Island\"\n        }\n      }, // 09\n      {\n        title: {\n          de: \"Québec\",\n          en: \"Quebec\"\n        },\n        extra: {\n          de: \"(östlicher Teil)\",\n          en: \"(eastern part)\"\n        }\n      } // 10\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if (city.country === \"CA\") {\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"10\" && city.lon >= -67.5) return true\n        if(city.adminCode === \"14\" && city.lon >= -67.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kanada\",\n      en: \"Canada\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Nunavut\",\n          en: \"Nunavut\"\n        },\n        extra: \"(82.5°W – 67.5°W)\"\n      }, // 14\n      {\n        title: {\n          de: \"Ontario\",\n          en: \"Ontario\"\n        },\n        extra: {\n          de: \"(östlicher Teil)\",\n          en: \"(eastern part)\"\n        }\n      }, // 08\n      {\n        title: {\n          de: \"Québec\",\n          en: \"Quebec\"\n        },\n        extra: {\n          de: \"(westlicher Teil)\",\n          en: \"(western part)\"\n        }\n      } // 10\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CA\") {\n        if (city.adminCode === \"08\" && city.lon >= -82.5) return true\n        if (city.adminCode === \"10\" && city.lon < -67.5) return true\n        if (city.adminCode === \"14\" && city.lon >= -82.5 && city.lon < -67.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kanada\",\n      en: \"Canada\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Manitoba\",\n          en: \"Manitoba\"\n        }, \n        extra: {\n          de: \"(östlicher Teil)\",\n          en: \"(eastern part)\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Nunavut\",\n          en: \"Nunavut\"\n        },\n        extra: \"(97.5°W – 82.5°W)\"\n      }, // 14\n      {\n        title: {\n          de: \"Ontario\",\n          en: \"Ontario\"\n        },\n        extra: {\n          de: \"(westlicher Teil)\",\n          en: \"(western part)\"\n        }\n      } // 08\n    ],\n    zone: \"Etc/GMT+6\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CA\") {\n        if(city.adminCode === \"03\" && city.lon >= -97.5) return true\n        if(city.adminCode === \"08\" && city.lon < -82.5) return true\n        if(city.adminCode === \"14\" && city.lon >= -97.5 && city.lon < -82.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kanada\",\n      en: \"Canada\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Manitoba\",\n          en: \"Manitoba\"\n        }, \n        extra: {\n          de: \"(westlicher Teil)\",\n          en: \"(western part)\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Nordwest-Territorien\",\n          en: \"Northwest Territories\"\n        }, \n        extra: {\n          de: \"(östlicher Teil)\",\n          en: \"(eastern part)\"\n        }\n      }, // 13\n      {\n        title: {\n          de: \"Nunavut\",\n          en: \"Nunavut\"\n        },\n        extra: \"(112.5°W – 97.5°W)\"\n      }, // 14\n      {title: \"Saskatchewan\"} // 11\n    ],\n    zone: \"Etc/GMT+7\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if (city.country === \"CA\") {\n        if(city.adminCode === \"03\" && city.lon < -97.5) return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"13\" && city.lon >= -112.5) return true\n        if(city.adminCode === \"14\" && city.lon >= -112.5 && city.lon < -97.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kanada\",\n      en: \"Canada\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Alberta\",\n          en: \"Alberta\"\n        }\n      }, // 01\n      {\n        title: {\n          de: \"British Columbia\",\n          en: \"British Columbia\"\n        },\n        extra: {\n          de: \"(östlicher Teil)\",\n          en: \"(eastern part)\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Nordwest-Territorien\",\n          en: \"Northwest Territories\"\n        }, \n        extra: {\n          de: \"(mittlerer Teil)\",\n          en: \"(central part)\"\n        }\n      }, // 13\n      {\n        title: {\n          de: \"Nunavut\",\n          en: \"Nunavut\"\n        },\n        extra: {\n          de: \"(westlich von 112.5° W)\",\n          en: \"(west of 112.5° W)\"\n        }\n      } // 14\n    ],\n    zone: \"Etc/GMT+8\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if (city.country === \"CA\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"02\" && city.lon >= -127.5) return true\n        if(city.adminCode === \"13\" && city.lon >= -127.5 && city.lon < -112.5) return true\n        if(city.adminCode === \"14\" && city.lon < -112.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kanada\",\n      en: \"Canada\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"British Columbia\",\n          en: \"British Columbia\"\n        },\n        extra: {\n          de: \"(westlicher Teil)\",\n          en: \"(western part)\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Nordwest-Territorien\",\n          en: \"Northwest Territories\"\n        }, \n        extra: {\n          de: \"(westlicher Teil)\",\n          en: \"(western part)\"\n        }\n      }, // 13\n      {\n        title: {\n          de: \"Yukon\",\n          en: \"Yukon\"\n        }\n      } // 12\n    ],\n    zone: \"Etc/GMT+9\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CA\") {\n        if(city.adminCode === \"02\" && city.lon < -127.5) return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"13\" && city.lon < -127.5) return true\n        return false\n      }\n      return false\n    })\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Amerikanische Jungferninseln (USA)\",\n      en: \"American Virgin Islands (United States)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"VI\",\n    cities: cityList.filter(city => city.country === \"VI\")\n  },\n  {\n    country: {\n      de: \"Anguilla (Vereinigtes Königreich)\",\n      en: \"Anguilla (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"AI\",\n    cities: cityList.filter(city => city.country === \"AI\")\n  },\n  {\n    country: {\n      de: \"Antigua und Barbuda\",\n      en: \"Antigua and Barbuda\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"AG\",\n    cities: cityList.filter(city => city.country === \"AG\")\n  },\n  {\n    country: {\n      de: \"Aruba (Niederlande)\",\n      en: \"Aruba (Netherlands)\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"AW\",\n    cities: cityList.filter(city => city.country === \"AW\")\n  },\n  {\n    country: {\n      de: \"Bahamas\",\n      en: \"Bahamas\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"BS\",\n    cities: cityList.filter(city => city.country === \"BS\")\n  },\n  {\n    country: {\n      de: \"Barbados\",\n      en: \"Barbados\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"BB\",\n    cities: cityList.filter(city => city.country === \"BB\")\n  },\n  {\n    country: {\n      de: \"Bermuda (Vereinigtes Königreich)\",\n      en: \"Bermuda (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"BM\",\n    cities: cityList.filter(city => city.country === \"BM\")\n  },\n  {\n    country: {\n      de: \"Britische Jungferninseln (Vereinigtes Königreich)\",\n      en: \"British Virgin Islands (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"VG\",\n    cities: cityList.filter(city => city.country === \"VG\")\n  },\n  {\n    country: {\n      de: \"Cayman Islands (Vereinigtes Königreich)\",\n      en: \"Cayman Islands (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"KY\",\n    cities: cityList.filter(city => city.country === \"KY\")\n  },\n  {\n    country: {\n      de: \"Kuba\",\n      en: \"Cuba\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"CU\",\n    cities: cityList.filter(city => city.country === \"CU\")\n  },\n  {\n    country: {\n      de: \"Curaçao (Niederlande)\",\n      en: \"Curaçao (Netherlands)\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"CW\",\n    cities: cityList.filter(city => city.country === \"CW\")\n  },\n  {\n    country: {\n      de: \"Dominica\",\n      en: \"Dominica\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"DM\",\n    cities: cityList.filter(city => city.country === \"DM\")\n  },\n  {\n    country: {\n      de: \"Dominikanische Republik\",\n      en: \"Dominican Republic\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"DO\",\n    cities: cityList.filter(city => city.country === \"DO\")\n  },\n  {\n    country: {\n      de: \"Guadeloupe (Frankreich)\",\n      en: \"Guadeloupe (France)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"GP\",\n    cities: cityList.filter(city => city.country === \"GP\")\n  },\n  {\n    country: {\n      de: \"Frankreich\",\n      en: \"France\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Saint-Martin\",\n          en: \"Saint-Martin\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"FR\", // eigentlich MF\n    cities: cityList.filter(city => city.country === \"MF\")\n  },\n  {\n    country: {\n      de: \"Saint-Barthélemy (Frankreich)\",\n      en: \"Saint-Barthélemy (France)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"BL\",\n    cities: cityList.filter(city => city.country === \"BL\")\n  },\n  {\n    country: {\n      de: \"Saint-Pierre und Miquelon (Frankreich)\",\n      en: \"Saint-Pierre and Miquelon (France)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"PM\",\n    cities: cityList.filter(city => city.country === \"PM\")\n  },\n  {\n    country: {\n      de: \"Grenada\",\n      en: \"Grenada\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"GD\",\n    cities: cityList.filter(city => city.country === \"GD\")\n  },\n  {\n    country: {\n      de: \"Haiti\",\n      en: \"Haiti\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"HT\",\n    cities: cityList.filter(city => city.country === \"HT\")\n  },\n  {\n    country: {\n      de: \"Jamaika\",\n      en: \"Jamaica\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"JM\",\n    cities: cityList.filter(city => city.country === \"JM\")\n  },\n  {\n    country: {\n      de: \"Martinique (Frankreich)\",\n      en: \"Martinique (France)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"MQ\",\n    cities: cityList.filter(city => city.country === \"MQ\")\n  },\n  {\n    country: {\n      de: \"Montserrat (Vereinigtes Königreich)\",\n      en: \"Montserrat (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"MS\",\n    cities: cityList.filter(city => city.country === \"MS\")\n  },\n  {\n    country: {\n      de: \"Bonaire, Saba, Sint Eustatius (Niederlande)\",\n      en: \"Bonaire, Saba, Sint Eustatius (Netherlands)\"\n    },\n    subdiv: [\n      {title: \"Bonaire\"}, \n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"BQ\",\n    cities: cityList.filter(city => city.country === \"BQ\" && city.adminCode === \"BO\")\n  },\n  {\n    country: {\n      de: \"Bonaire, Saba, Sint Eustatius (Niederlande)\",\n      en: \"Bonaire, Saba, Sint Eustatius (Netherlands)\"\n    },\n    subdiv: [\n      {title: \"Saba\"}, \n      {title: \"Sint Eustatius\"}\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"BQ\",\n    cities: cityList.filter(city => city.country === \"BQ\" && [\"SB\", \"SE\"].includes(city.adminCode))\n  },\n  {\n    country: {\n      de: \"Puerto Rico (USA)\",\n      en: \"Puerto Rico (United States)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"PR\",\n    cities: cityList.filter(city => city.country === \"PR\")\n  },\n  {\n    country: {\n      de: \"St. Kitts und Nevis\",\n      en: \"Saint Kitts and Nevis\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"KN\",\n    cities: cityList.filter(city => city.country === \"KN\")\n  },\n  {\n    country: {\n      de: \"St. Lucia\",\n      en: \"Saint Lucia\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"LC\",\n    cities: cityList.filter(city => city.country === \"LC\")\n  },\n  {\n    country: {\n      de: \"St. Vincent und die Grenadinen\",\n      en: \"Saint Vincent and the Grenadines\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"VC\",\n    cities: cityList.filter(city => city.country === \"VC\")\n  },\n  {\n    country: {\n      de: \"Sint Maarten (Niederlande)\",\n      en: \"Sint Maarten (Netherlands)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"SX\",\n    cities: cityList.filter(city => city.country === \"SX\")\n  },\n  {\n    country: {\n      de: \"Trinidad und Tobago\",\n      en: \"Trinidad and Tobago\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"TT\",\n    cities: cityList.filter(city => city.country === \"TT\")\n  },\n  {\n    country: {\n      de: \"Turks- und Caicosinseln (Vereinigtes Königreich)\",\n      en: \"Turks and Caicos Islands (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"TC\",\n    cities: cityList.filter(city => city.country === \"TC\")\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Belize\",\n      en: \"Belize\"\n    },\n    zone: \"Etc/GMT+7\",\n    flag: \"BZ\",\n    cities: cityList.filter(city => city.country === \"BZ\")\n  },\n  {\n    country: {\n      de: \"Costa Rica\",\n      en: \"Costa Rica\"\n    },\n    zone: \"Etc/GMT+6\",\n    flag: \"CR\",\n    cities: cityList.filter(city => city.country === \"CR\")\n  },\n  {\n    country: {\n      de: \"El Salvador\",\n      en: \"El Salvador\"\n    },\n    zone: \"Etc/GMT+6\",\n    flag: \"SV\",\n    cities: cityList.filter(city => city.country === \"SV\")\n  },\n  {\n    country: {\n      de: \"Guatemala\",\n      en: \"Guatemala\"\n    },\n    zone: \"Etc/GMT+6\",\n    flag: \"GT\",\n    cities: cityList.filter(city => city.country === \"GT\")\n  },\n  {\n    country: {\n      de: \"Honduras\",\n      en: \"Honduras\"\n    },\n    zone: \"Etc/GMT+6\",\n    flag: \"HN\",\n    cities: cityList.filter(city => city.country === \"HN\")\n  },\n  {\n    country: {\n      de: \"Mexiko\",\n      en: \"Mexico\"\n    },\n    subdiv: [\n      {title: \"Baja California\"}, // 02\n      {title: \"Baja California Sur\"}, // 03\n      {\n        title: {\n          de: \"Revillagigedo-Inseln\",\n          en: \"Revillagigedo Islands\"\n        }\n      } // nur 45 Einwohner, deshalb \n    ],\n    zone: \"Etc/GMT+8\",\n    flag: \"MX\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MX\") {\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"03\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Mexiko\",\n      en: \"Mexico\"\n    },\n    subdiv: [\n      {title: \"Aguascalientes\"}, // 01\n      {title: \"Chihuahua\"}, // 06\n      {title: \"Coahuila\"}, // 07\n      {title: \"Colima\"}, // 08\n      {title: \"Durango\"}, // 10\n      {title: \"Guanajuato\"}, // 11\n      {title: \"Guerrero\"}, // 12\n      {title: \"Hidalgo\"}, // 13\n      {title: \"Jalisco\"}, // 14\n      {title: \"México\"}, // 15\n      {\n        title: {\n          de: \"Mexiko-Stadt\",\n          en: \"Mexico City\"\n        }\n      }, // 09\n      {title: \"Michoacán\"}, // 16\n      {title: \"Morelos\"}, // 17\n      {title: \"Nayarit\"}, // 18\n      {title: \"Nuevo León\"}, // 19\n      {title: \"Puebla\"}, // 21\n      {title: \"Querétaro\"}, // 22\n      {title: \"San Luis Potosí\"}, // 24 \n      {title: \"Sinaloa\"}, // 25\n      {title: \"Sonora\"}, // 26\n      {title: \"Tamaulipas\"}, // 28\n      {title: \"Tlaxcala\"}, // 29\n      {title: \"Zacatecas\"} // 32\n    ],\n    zone: \"Etc/GMT+7\",\n    flag: \"MX\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MX\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"06\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\") return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"15\") return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"17\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"19\") return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"22\") return true\n        if(city.adminCode === \"24\") return true\n        if(city.adminCode === \"25\") return true\n        if(city.adminCode === \"26\") return true\n        if(city.adminCode === \"28\") return true\n        if(city.adminCode === \"29\") return true\n        if(city.adminCode === \"32\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Mexiko\",\n      en: \"Mexico\"\n    },\n    subdiv: [\n      {title: \"Campeche\"}, // 04\n      {title: \"Chiapas\"}, // 05\n      {title: \"Oaxaca\"}, // 20\n      {title: \"Quintana Roo\"}, // 23\n      {title: \"Tabasco\"}, // 27\n      {title: \"Veracruz\"}, // 30\n      {title: \"Yucatán\"}, // 31\n    ],\n    zone: \"Etc/GMT+6\",\n    flag: \"MX\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MX\") {\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"20\") return true\n        if(city.adminCode === \"23\") return true\n        if(city.adminCode === \"27\") return true\n        if(city.adminCode === \"30\") return true\n        if(city.adminCode === \"31\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Nicaragua\",\n      en: \"Nicaragua\"\n    },\n    zone: \"Etc/GMT+6\",\n    flag: \"NI\",\n    cities: cityList.filter(city => city.country === \"NI\")\n  },\n  {\n    country: {\n      de: \"Panama\",\n      en: \"Panama\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"PA\",\n    cities: cityList.filter(city => city.country === \"PA\")\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Kasachstan\",\n      en: \"Kazakhstan\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Oblys Atyrau\",\n          en: \"Atyrau Region\"\n        }\n      }, // 06\n      {\n        title: {\n          de: \"Oblys Mangghystau\",\n          en: \"Mangystau Region\"\n        }\n      }, // 09\n      {\n        title: {\n          de: \"Oblys Westkasachstan\",\n          en: \"West Kazakhstan Region\"\n        }\n      } // 07\n    ],\n    zone: \"Etc/GMT-3\",\n    flag: \"KZ\",\n    cities : cityList.filter(city => {\n      if(city.country === \"KZ\") {\n        if(city.adminCode === \"06\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"09\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kasachstan\",\n      en: \"Kazakhstan\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Oblys Aqtöbe\",\n          en: \"Aktobe Region\"\n        }\n      }, // 04\n      {\n        title: {\n          de: \"Oblys Qostonai\",\n          en: \"Kostanay Region\"\n        }\n      }, // 13\n      {\n        title: {\n          de: \"Oblys Qysylorda\",\n          en: \"Kyzylorda Region\"\n        }\n      }, // 14\n      {\n        title: {\n          de: \"Baikonur\",\n          en: \"Baykonyr\"\n        }\n      } // 18\n    ],\n    zone: \"Etc/GMT-4\",\n    flag: \"KZ\",\n    cities: cityList.filter(city => {\n      if(city.country === \"KZ\") {\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"18\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kasachstan\",\n      en: \"Kazakhstan\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Oblys Akmola\",\n          en: \"Akmola Region\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Oblys Almaty\",\n          en: \"Almaty Region\"\n        }\n      }, // 01\n      {\n        title: {\n          de: \"Almaty\",\n          en: \"Almaty\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Nur-Sultan\",\n          en: \"Nur-Sultan\"\n        }\n      }, // 05\n      {\n        title: {\n          de: \"Oblys Ostkasachstan\",\n          en: \"East Kazakhstan Region\"\n        }\n      }, // 15\n      {\n        title: {\n          de: \"Oblys Schambyl\",\n          en: \"Jambyl Region\"\n        }\n      }, // 17\n      {\n        title: {\n          de: \"Oblys Qaraghandy\",\n          en: \"Karaganda Region\"\n        }\n      }, // 12\n      {\n        title: {\n          de: \"Oblys Nordkasachstan\",\n          en: \"North Kazakhstan Region\"\n        }\n      }, // 16 \n      {\n        title: {\n          de: \"Oblys Pawlodar\",\n          en: \"Pavlodar Region\"\n        }\n      }, // 11\n      {\n        title: {\n          de: \"Oblys Türkistan\",\n          en: \"Turkistan Region\"\n        }\n      }, // 10\n      {\n        title: {\n          de: \"Schymkent\",\n          en: \"Shymkent\"\n        }\n      } // 1537272\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"KZ\",\n    cities: cityList.filter(city => {\n      if(city.country === \"KZ\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"15\") return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"17\") return true\n        if(city.adminCode === \"1537272\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Kirgisistan\",\n      en: \"Kyrgyzstan\"\n    },\n    zone: \"Etc/GMT-5\",\n    flag: \"KG\",\n    cities: cityList.filter(city => city.country === \"KG\")\n  },\n  {\n    country: {\n      de: \"Tadschikistan\",\n      en: \"Tajikistan\"\n    },\n    zone: \"Etc/GMT-5\",\n    flag: \"TJ\",\n    cities: cityList.filter(city => city.country === \"TJ\")\n  },\n  {\n    country: {\n      de: \"Turkmenistan\",\n      en: \"Turkmenistan\"\n    },\n    zone: \"Etc/GMT-4\",\n    flag: \"TM\",\n    cities: cityList.filter(city => city.country === \"TM\")\n  },\n  {\n    country: {\n      de: \"Usbekistan\",\n      en: \"Uzbekistan\"\n    },\n    zone: \"Etc/GMT-4\",\n    flag: \"UZ\",\n    cities: cityList.filter(city => city.country === \"UZ\")\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Volksrepublik China\",\n      en: \"People's Republic of China\"\n    },\n    subdiv: [\n      {\n        title: \"Tibet\", \n        extra: {\n          de: \"(westlich von 82.5° E)\",\n          en: \"(west of 82.5° E)\"\n        }\n      }, // 14\n      {\n        title: \"Xinjiang\", \n        extra: {\n          de: \"(westlich von 82.5° E)\",\n          en: \"(west of 82.5° E)\"\n        }\n      }, // 13\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"13\" && city.lon < 82.5) return true\n        if(city.adminCode === \"14\" && city.lon < 82.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Volksrepublik China\",\n      en: \"People's Republic of China\"\n    },\n    subdiv: [\n      {\n        title: \"Gansu\", \n        extra: {\n          de: \"(westlich von 97.5° E)\",\n          en: \"(west of 97.5° E)\"\n        }\n      }, // 15\n      {\n        title: \"Qinghai\", \n        extra: {\n          de: \"(westlich von 97.5° E)\",\n          en: \"(west of 97.5° E)\"\n        }\n      }, // 06\n      {\n        title: \"Tibet\", \n        extra: {\n          de: \"(östlich von 82.5° E)\",\n          en: \"(east of 82.5° E)\"\n        }\n      }, // 14\n      {\n        title: \"Xinjiang\", \n        extra: {\n          de: \"(östlich von 82.5° E)\",\n          en: \"(east of 82.5° E)\"\n        }\n      }, // 13\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"06\" && city.lon < 97.5) return true\n        if(city.adminCode === \"13\" && city.lon >= 82.5) return true\n        if(city.adminCode === \"14\" && city.lon >= 82.5) return true\n        if(city.adminCode === \"15\" && city.lon < 97.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Volksrepublik China\",\n      en: \"People's Republic of China\"\n    },\n    subdiv: [\n      {title: \"Chongqing\"}, // 33\n      {\n        title: \"Gansu\", \n        extra: {\n          de: \"(östlich von 97.5° E)\",\n          en: \"(east of 97.5° E)\"\n        }\n      }, // 15\n      {\n        title: \"Guangdong\", \n        extra: {\n          de: \"(westlich von 112.5° E)\",\n          en: \"(west of 112.5° E)\"\n        }\n      }, // 30\n      {title: \"Guangxi Zhuang\"}, // 16\n      {title: \"Guizhou\"}, // 18\n      {title: \"Hainan\"}, // 31\n      {\n        title: \"Hubei\", \n        extra: {\n          de: \"(westlich von 112.5° E)\",\n          en: \"(west of 112.5° E)\"\n        }\n      }, // 12\n      {title: \"Hunan\"}, // 11\n      {\n        title: {\n          de: \"Innere Mongolei\",\n          en: \"Inner Mongolia\"\n        }, \n        extra: {\n          de: \"(westlich von 112.5° E)\",\n          en: \"(west of 112.5° E)\"\n        }\n      }, // 20\n      {title: \"Ningxia\"}, // 21\n      {\n        title: \"Qinghai\", \n        extra: {\n          de: \"(östlich von 97.5° E)\",\n          en: \"(east of 97.5° E)\"\n        }\n      }, // 06\n      {title: \"Shaanxi\"}, // 26\n      {title: \"Shanxi\"}, // 24\n      {title: \"Sichuan\"}, // 32\n      {title: \"Yunnan\"}, // 29\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"06\" && city.lon >= 97.5) return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"12\" && city.lon < 112.5) return true\n        if(city.adminCode === \"15\" && city.lon >= 97.5) return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"20\" && city.lon < 112.5) return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"24\") return true\n        if(city.adminCode === \"26\") return true\n        if(city.adminCode === \"29\") return true\n        if(city.adminCode === \"30\" && city.lon < 112.5) return true\n        if(city.adminCode === \"31\") return true\n        if(city.adminCode === \"32\") return true\n        if(city.adminCode === \"33\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Volksrepublik China\",\n      en: \"People's Republic of China\"\n    },\n    subdiv: [\n      {title: \"Anhui\"}, // 01\n      {\n        title: {\n          de: \"Peking\",\n          en: \"Beijing\"\n        }\n      }, // 22\n      {title: \"Fujian\"}, // 07\n      {\n        title: \"Guangdong\", \n        extra: {\n          de: \"(östlich von 112.5° E)\",\n          en: \"(east of 112.5° E)\"\n        }\n      }, // 30\n      {title: \"Hebei\"}, // 10\n      {title: \"Henan\"}, // 09\n      {\n        title: \"Hubei\", \n        extra: {\n          de: \"(östlich von 112.5° E)\",\n          en: \"(east of 112.5° E)\"\n        }\n      }, // 12\n      {\n        title: \"Heilongjiang\", \n        extra: {\n          de: \"(westlich von 127.5° E)\",\n          en: \"(west of 127.5° E)\"\n        }\n      }, // 08\n      {\n        title: {\n          de: \"Innere Mongolei\",\n          en: \"Inner Mongolia\"\n        }, \n        extra: {\n          de: \"(östlich von 112.5° E)\",\n          en: \"(east of 112.5° E)\"\n        }\n      }, // 20\n      {title: \"Jiangsu\"}, // 04\n      {title: \"Jiangxi\"}, // 03\n      {\n        title: \"Jilin\", \n        extra: {\n          de: \"(westlich von 127.5° E)\",\n          en: \"(west of 127.5° E)\"\n        }\n      }, // 05\n      {title: \"Liaoning\"}, // 19\n      {title: \"Shandong\"}, // 25\n      {\n        title: {\n          de: \"Schanghai\",\n          en: \"Shanghai\"\n        }\n      }, // 23\n      {title: \"Tianjin\"}, // 28\n      {title: \"Zhejiang\"}, // 02\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\" && city.lon < 127.5) return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\" && city.lon < 127.5) return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"12\" && city.lon >= 112.5) return true\n        if(city.adminCode === \"19\") return true\n        if(city.adminCode === \"20\" && city.lon >= 112.5) return true\n        if(city.adminCode === \"22\") return true\n        if(city.adminCode === \"23\") return true\n        if(city.adminCode === \"25\") return true\n        if(city.adminCode === \"28\") return true\n        if(city.adminCode === \"30\" && city.lon >= 112.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Volksrepublik China\",\n      en: \"People's Republic of China\"\n    },\n    subdiv: [\n      {\n        title: \"Heilongjiang\", \n        extra: {\n          de: \"(östlich von 127.5° E)\",\n          en: \"(east of 127.5° E)\"\n        }\n      }, // 08\n      {\n        title: \"Jilin\", \n        extra: {\n          de: \"(östlich von 127.5° E)\",\n          en: \"(east of 127.5° E)\"\n        }\n      }, // 05\n    ],\n    zone: \"Etc/GMT-9\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"05\" && city.lon >= 127.5) return true\n        if(city.adminCode === \"08\" && city.lon >= 127.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Hongkong (VR China)\",\n      en: \"Hong Kong (PR of China)\"\n    },\n    zone: \"Etc/GMT-8\",\n    flag: \"HK\",\n    cities: cityList.filter(city => city.country === \"HK\")\n  },\n  {\n    country: {\n      de: \"Japan\",\n      en: \"Japan\"\n    },\n    zone: \"Etc/GMT-9\",\n    flag: \"JP\",\n    cities: cityList.filter(city => city.country === \"JP\")\n  },\n  {\n    country: {\n      de: \"Macau (VR China)\",\n      en: \"Macau (PR of China)\"\n    },\n    zone: \"Etc/GMT-8\",\n    flag: \"MO\",\n    cities: cityList.filter(city => city.country === \"MO\")\n  },\n  {\n    country: {\n      de: \"Mongolei\",\n      en: \"Mongolia\"\n    },\n    subdiv: [\n      {title: \"Bayan-Ölgii\"}, // 03\n      {title: \"Govi-Altai\"}, // 10\n      {title: \"Khovd\"}, // 12\n      {title: \"Uvs\"}, // 19\n      {title: \"Zavkhan\"} // 09\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"MN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MN\") {\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"19\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Mongolei\",\n      en: \"Mongolia\"\n    },\n    subdiv: [\n      {title: \"Arkhangai\"}, // 01\n      {title: \"Bayankhongor\"}, // 02\n      {title: \"Bulgan\"}, // 21\n      {title: \"Darkhan-Uul\"}, // 23\n      {title: \"Dornogovi\"}, // 07\n      {title: \"Dundgovi\"}, // 08\n      {title: \"Govisümber\"}, // 24\n      {title: \"Khentii\"}, // 11\n      {title: \"Khövsgöl\"}, // 13\n      {title: \"Orkhon\"}, // 25\n      {title: \"Selenge\"}, // 16\n      {title: \"Töv\"}, // 18\n      {title: \"Ömnögovi\"}, // 14\n      {title: \"Övörkhanghai\"} // 15\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"MN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MN\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"15\") return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"23\") return true\n        if(city.adminCode === \"24\") return true\n        if(city.adminCode === \"25\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Mongolei\",\n      en: \"Mongolia\"\n    },\n    subdiv: [\n      {title: \"Dornod\"}, // 06\n      {title: \"Sükhbaatar\"} // 17\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"MN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MN\") {\n        if(city.adminCode === \"06\") return true\n        if(city.adminCode === \"17\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Nordkorea\",\n      en: \"North Korea\"\n    },\n    zone: \"Etc/GMT-9\",\n    flag: \"KP\",\n    cities: cityList.filter(city => city.country === \"KP\")\n  },\n  {\n    country: {\n      de: \"Südkorea\",\n      en: \"South Korea\"\n    },\n    zone: \"Etc/GMT-9\",\n    flag: \"KR\",\n    cities: cityList.filter(city => city.country === \"KR\")\n  },\n  {\n    country: {\n      de: \"Taiwan\",\n      en: \"Taiwan\"\n    },\n    zone: \"Etc/GMT-8\",\n    flag: \"TW\",\n    cities: cityList.filter(city => city.country === \"TW\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Åland (Finnland)\",\n      en: \"Åland (Finland)\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"AX\",\n    cities: cityList.filter(city => city.country === \"AX\")\n  },\n  {\n    country: {\n      de: \"Albanien\",\n      en: \"Albania\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"AL\",\n    cities: cityList.filter(city => city.country === \"AL\")\n  },\n  {\n    country: {\n      de: \"Andorra\",\n      en: \"Andorra\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"AD\",\n    cities: cityList.filter(city => city.country === \"AD\")\n  },\n  {\n    country: {\n      de: \"Österreich\",\n      en: \"Austria\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"AT\",\n    cities: cityList.filter(city => city.country === \"AT\")\n  },\n  {\n    country: {\n      de: \"Belarus\",\n      en: \"Belarus\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"BY\",\n    cities: cityList.filter(city => city.country === \"BY\")\n  },\n  {\n    country: {\n      de: \"Belgien\",\n      en: \"Belgium\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"BE\",\n    cities: cityList.filter(city => city.country === \"BE\")\n  },\n  {\n    country: {\n      de: \"Bosnien und Herzegowina\",\n      en: \"Bosnia and Herzegovina\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"BA\",\n    cities: cityList.filter(city => city.country === \"BA\")\n  },\n  {\n    country: {\n      de: \"Bulgarien\",\n      en: \"Bulgaria\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"BG\",\n    cities: cityList.filter(city => city.country === \"BG\")\n  },\n  {\n    country: {\n      de: \"Kroatien\",\n      en: \"Croatia\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"HR\",\n    cities: cityList.filter(city => city.country === \"HR\")\n  },\n  {\n    country: {\n      de: \"Zypern\",\n      en: \"Cyprus\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"CY\",\n    cities: cityList.filter(city => city.country === \"CY\")\n  },\n  {\n    country: {\n      de: \"Tschechien\",\n      en: \"Czechia\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"CZ\",\n    cities: cityList.filter(city => city.country === \"CZ\")\n  },\n  {\n    country: {\n      de: \"Dänemark\",\n      en: \"Denmark\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"DK\",\n    cities: cityList.filter(city => city.country === \"DK\")\n  },\n  {\n    country: {\n      de: \"Estland\",\n      en: \"Estonia\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"EE\",\n    cities: cityList.filter(city => city.country === \"EE\")\n  },\n  {\n    country: {\n      de: \"Färöer (Dänemark)\",\n      en: \"Faroe Islands (Denmark)\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"FO\",\n    cities: cityList.filter(city => city.country === \"FO\")\n  },\n  {\n    country: {\n      de: \"Finnland\",\n      en: \"Finland\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"FI\",\n    cities: cityList.filter(city => city.country === \"FI\")\n  },\n  {\n    country: {\n      de: \"Frankreich\",\n      en: \"France\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"FR\",\n    cities: cityList.filter(city => city.country === \"FR\")\n  },\n  {\n    country: {\n      de: \"Deutschland\",\n      en: \"Germany\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"DE\",\n    cities: cityList.filter(city => city.country === \"DE\")\n  },\n  {\n    country: {\n      de: \"Gibraltar (Vereinigtes Königreich)\",\n      en: \"Gibraltar (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"GI\",\n    cities: cityList.filter(city => city.country === \"GI\")\n  },\n  {\n    country: {\n      de: \"Griechenland\",\n      en: \"Greece\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Epirus\",\n          en: \"Epirus\"\n        }\n      }, // ESYE21\n      {\n        title: {\n          de: \"Westmakedonien\",\n          en: \"Western Macedonia\"\n        }\n      }, // ESYE13\n      {\n        title: {\n          de: \"Peloponnes\",\n          en: \"Peloponnese\"\n        }\n      }, // ESYE25\n      {\n        title: {\n          de: \"Westgriechenland\",\n          en: \"Western Greece\"\n        }\n      }, // ESYE23\n      {\n        title: {\n          de: \"Ionische Inseln\",\n          en: \"Ionian\"\n        }\n      }, // ESYE22\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"GR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"GR\") {\n        if(city.adminCode === \"ESYE13\") return true\n        if(city.adminCode === \"ESYE21\") return true\n        if(city.adminCode === \"ESYE22\") return true\n        if(city.adminCode === \"ESYE23\") return true\n        if(city.adminCode === \"ESYE25\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Griechenland\",\n      en: \"Greece\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Nördliche Ägäis\",\n          en: \"Northern Aegean\"\n        }\n      }, // ESYE41\n      {\n        title: {\n          de: \"Südliche Ägäis\",\n          en: \"Southern Aegean\"\n        }\n      }, // ESYE42\n      {\n        title: {\n          de: \"Attika\",\n          en: \"Attica\"\n        }\n      }, // ESYE31\n      {\n        title: {\n          de: \"Kreta\",\n          en: \"Crete\"\n        }\n      }, // ESYE43\n      {\n        title: {\n          de: \"Ostmakedonien und Thrakien\",\n          en: \"Eastern Macedonia and Thrace\"\n        }\n      }, // ESYE11\n      {\n        title: {\n          de: \"Zentralmakedonien\",\n          en: \"Central Macedonia\"\n        }\n      }, // ESYE12\n      {\n        title: {\n          de: \"Thessalien\",\n          en: \"Thessaly\"\n        }\n      }, // ESYE14\n      {\n        title: {\n          de: \"Mittelgriechenland\",\n          en: \"Central Greece\"\n        }\n      }, // ESYE24\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"GR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"GR\") {\n        if(city.adminCode === \"ESYE11\") return true\n        if(city.adminCode === \"ESYE12\") return true\n        if(city.adminCode === \"ESYE14\") return true\n        if(city.adminCode === \"ESYE24\") return true\n        if(city.adminCode === \"ESYE31\") return true\n        if(city.adminCode === \"ESYE41\") return true\n        if(city.adminCode === \"ESYE42\") return true\n        if(city.adminCode === \"ESYE43\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Grönland (Dänemark)\",\n      en: \"Greenland (Denmark)\"\n    },\n    subdiv: [\n      {title: \"Danmarkshavn\"}\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"GL\",\n    cities: cityList.filter(city => city.country === \"GL\" && city.tz === \"America/Danmarkshavn\")\n  },\n  {\n    country: {\n      de: \"Grönland (Dänemark)\",\n      en: \"Greenland (Denmark)\"\n    },\n    subdiv: [\n      {title: \"Ittoqqortoormit\"}, \n      {title: \"Scoresbysund\"}\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"GL\",\n    cities: cityList.filter(city => city.country === \"GL\" && city.tz === \"America/Scoresbysund\")\n  },\n  {\n    country: {\n      de: \"Grönland (Dänemark)\",\n      en: \"Greenland (Denmark)\"\n    },\n    subdiv: [\n      {title: \"Thule\"}, \n      {title: \"Pituffik\"}\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"GL\",\n    cities: cityList.filter(city => city.country === \"GL\" && city.tz === \"America/Thule\")\n  },\n  {\n    country: {\n      de: \"Grönland (Dänemark)\",\n      en: \"Greenland (Denmark)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Westgrönland\",\n          en: \"Western Greenland\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+3\",\n    flag: \"GL\",\n    cities: cityList.filter(city => city.country === \"GL\" && city.tz === \"America/Nuuk\")\n  },\n  {\n    country: {\n      de: \"Guernsey (Vereinigtes Königreich)\",\n      en: \"Guernsey (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"GG\",\n    cities: cityList.filter(city => city.country === \"GG\")\n  },\n  {\n    country: {\n      de: \"Ungarn\",\n      en: \"Hungary\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"HU\",\n    cities: cityList.filter(city => city.country === \"HU\")\n  },\n  {\n    country: {\n      de: \"Island\",\n      en: \"Iceland\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"IS\",\n    cities: cityList.filter(city => city.country === \"IS\")\n  },\n  {\n    country: {\n      de: \"Irland\",\n      en: \"Ireland\"\n    },\n    zone: \"Etc/GMT+1\",\n    flag: \"IE\",\n    cities: cityList.filter(city => city.country === \"IE\")\n  },\n  {\n    country: {\n      de: \"Isle of Man (Vereinigtes Königreich)\",\n      en: \"Isle of Man (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"IM\",\n    cities: cityList.filter(city => city.country === \"IM\")\n  },\n  {\n    country: {\n      de: \"Italien\",\n      en: \"Italy\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"IT\",\n    cities: cityList.filter(city => city.country === \"IT\")\n  },\n  {\n    country: {\n      de: \"Jersey (Vereinigtes Königreich)\",\n      en: \"Jersey (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"JE\",\n    cities: cityList.filter(city => city.country === \"JE\")\n  },\n  {\n    country: {\n      de: \"Kosovo\",\n      en: \"Kosovo\"\n    },\n    zone: \"Etc/GMT-1\",  // no explicit timezone for Kosovo/Pristina\n    flag: \"XK\",\n    cities: cityList.filter(city => city.country === \"XK\")\n  },\n  {\n    country: {\n      de: \"Lettland\",\n      en: \"Latvia\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"LV\",\n    cities: cityList.filter(city => city.country === \"LV\")\n  },\n  {\n    country: {\n      de: \"Liechtenstein\",\n      en: \"Liechtenstein\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"LI\",\n    cities: cityList.filter(city => city.country === \"LI\")\n  },\n  {\n    country: {\n      de: \"Litauen\",\n      en: \"Lithuania\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"LT\",\n    cities: cityList.filter(city => city.country === \"LT\")\n  },\n  {\n    country: {\n      de: \"Luxemburg\",\n      en: \"Luxembourg\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"LU\",\n    cities: cityList.filter(city => city.country === \"LU\")\n  },\n  {\n    country: {\n      de: \"Malta\",\n      en: \"Malta\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"MT\",\n    cities: cityList.filter(city => city.country === \"MT\")\n  },\n  {\n    country: {\n      de: \"Moldau\",\n      en: \"Moldova\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"MD\",\n    cities: cityList.filter(city => city.country === \"MD\")\n  },\n  {\n    country: {\n      de: \"Monaco\",\n      en: \"Monaco\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"MC\",\n    cities: cityList.filter(city => city.country === \"MC\")\n  },\n  {\n    country: {\n      de: \"Montenegro\",\n      en: \"Montenegro\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"ME\",\n    cities: cityList.filter(city => city.country === \"ME\")\n  },\n  {\n    country: {\n      de: \"Niederlande\",\n      en: \"Netherlands\"\n    },\n    zone: \"Etc/GMT+0\",\n    flag: \"NL\",\n    cities: cityList.filter(city => city.country === \"NL\")\n  },\n  {\n    country: {\n      de: \"Nordmazedonien\",\n      en: \"North Macedonia\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"MK\",\n    cities: cityList.filter(city => city.country === \"MK\")\n  },\n  {\n    country: {\n      de: \"Norwegen\",\n      en: \"Norway\"\n    },\n    subdiv: [\n      {title: \"Agder\"},\n      {title: \"Innlandet\"},\n      {title: \"Møre og Romsdal\"},\n      {title: \"Nordland\"},\n      {title: \"Oslo\"},\n      {title: \"Rogaland\"},\n      {title: \"Troms og Finnmark\"},\n      {title: \"Trøndelag\"},\n      {title: \"Vestfold og Telemark\"},\n      {title: \"Vestland\"},\n      {title: \"Viken\"},\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"NO\",\n    cities: cityList.filter(city => city.country === \"NO\")\n  },\n  {\n    country: {\n      de: \"Norwegen\",\n      en: \"Norway\"\n    },\n    subdiv: [\n      {title: \"Jan Mayen\"}\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"NO\", // eigentlich SJ\n    cities: cityList.filter(city => city.country === \"SJ\" && city.adminCode === \"22\")\n  },\n  {\n    country: {\n      de: \"Norwegen\",\n      en: \"Norway\"\n    },\n    subdiv: [\n      {title: \"Svalbard\"}\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"NO\", // eigentlich SJ\n    cities: cityList.filter(city => city.country === \"SJ\" && city.adminCode === \"21\")\n  },\n  {\n    country: {\n      de: \"Polen\",\n      en: \"Poland\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"PL\",\n    cities: cityList.filter(city => city.country === \"PL\")\n  },\n  {\n    country: {\n      de: \"Portugal\",\n      en: \"Portugal\"\n    },\n    subdiv: [\n      {title: \"Aveiro\"}, // 02\n      {title: \"Beja\"}, // 03\n      {title: \"Braga\"}, // 04\n      {title: \"Bragança\"}, // 05\n      {title: \"Castelo Branco\"}, // 06\n      {title: \"Coimbra\"}, // 07\n      {title: \"Évora\"}, // 08\n      {title: \"Faro\"}, // 09\n      {title: \"Guarda\"}, // 11\n      {title: \"Leiria\"}, // 13\n      {\n        title: {\n          de: \"Lissabon\",\n          en: \"Lisbon\"\n        }\n      }, // 14\n      {title: \"Portalegre\"}, // 16\n      {title: \"Porto\"}, // 17\n      {title: \"Santarém\"}, // 18\n      {title: \"Setúbal\"}, // 19\n      {title: \"Viana do Castelo\"}, // 20\n      {title: \"Vila Real\"}, // 21\n      {title: \"Viseu\"}, // 22\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"PT\",\n    cities: cityList.filter(city => {\n      if(city.country === \"PT\") {\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"06\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\") return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"17\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"19\") return true\n        if(city.adminCode === \"20\") return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"22\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Portugal\",\n      en: \"Portugal\"\n    },\n    subdiv: [\n      {title: \"Madeira\"} // 10\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"PT\",\n    cities: cityList.filter(city => city.country === \"PT\" && city.adminCode === \"10\")\n  },\n  {\n    country: {\n      de: \"Portugal\",\n      en: \"Portugal\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Azoren\",\n          en: \"Azores\"\n        }\n      } // 23\n    ],\n    zone: \"Etc/GMT+2\",\n    flag: \"PT\",\n    cities: cityList.filter(city => city.country === \"PT\" && city.adminCode === \"23\")\n  },\n  {\n    country: {\n      de: \"Rumänien\",\n      en: \"Romania\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"RO\",\n    cities: cityList.filter(city => city.country === \"RO\")\n  },\n  {\n    country: {\n      de: \"San Marino\",\n      en: \"San Marino\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"SM\",\n    cities: cityList.filter(city => city.country === \"SM\")\n  },\n  {\n    country: {\n      de: \"Serbien\",\n      en: \"Serbia\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"RS\",\n    cities: cityList.filter(city => city.country === \"RS\")\n  },\n  {\n    country: {\n      de: \"Slowakei\",\n      en: \"Slovakia\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"SK\",\n    cities: cityList.filter(city => city.country === \"SK\")\n  },\n  {\n    country: {\n      de: \"Slowenien\",\n      en: \"Slovenia\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"SI\",\n    cities: cityList.filter(city => city.country === \"SI\")\n  },\n  {\n    country: {\n      de: \"Spanien\",\n      en: \"Spain\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Andalusien\",\n          en: \"Andalusia\"\n        }\n      }, // 51\n      {title: \"Aragón\"}, // 52\n      {\n        title: {\n          de: \"Asturien\",\n          en: \"Asturias\"\n        }\n      }, // 34\n      {\n        title: {\n          de: \"Kantabrien\",\n          en: \"Cantabria\"\n        }\n      }, // 39\n      {\n        title: {\n          de: \"Kastilien und León\",\n          en: \"Castile and León\"\n        }\n      }, // 55\n      {\n        title: {\n          de: \"Kastilien-La Mancha\",\n          en: \"Castilla-La Mancha\"\n        }\n      }, // 54\n      {\n        title: {\n          de: \"Katalonien\",\n          en: \"Catalonia\"\n        }\n      }, // 56\n      {title: \"Extremadura\"}, // 57\n      {\n        title: {\n          de: \"Galicien\",\n          en: \"Galicia\"\n        }\n      }, // 58\n      {\n        title: {\n          de: \"Balearische Inseln\",\n          en: \"Balearic Islands\"\n        }\n      }, // 07\n      {title: \"Murcia\"}, // 31\n      {\n        title: {\n          de: \"Autonome Gemeinschaft Madrid\",\n          en: \"Community of Madrid\"\n        }\n      }, // 29\n      {\n        title: {\n          de: \"Navarra\",\n          en: \"Navarre\"\n        }\n      }, // 32\n      {\n        title: {\n          de: \"Baskenland\",\n          en: \"Basque Country\"\n        }\n      }, // 59\n      {title: \"La Rioja\"}, // 27\n      {\n        title: {\n          de: \"Valencianische Gemeinschaft\",\n          en: \"Valencian Community\"\n        }\n      }, // 60\n    ],\n    zone: \"Etc/GMT+0\",\n    flag: \"ES\",\n    cities: cityList.filter(city => {\n      if(city.country === \"ES\") {\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"27\") return true\n        if(city.adminCode === \"29\") return true\n        if(city.adminCode === \"31\") return true\n        if(city.adminCode === \"32\") return true\n        if(city.adminCode === \"34\") return true\n        if(city.adminCode === \"39\") return true\n        if(city.adminCode === \"51\") return true\n        if(city.adminCode === \"52\") return true\n        if(city.adminCode === \"54\") return true\n        if(city.adminCode === \"55\") return true\n        if(city.adminCode === \"56\") return true\n        if(city.adminCode === \"57\") return true\n        if(city.adminCode === \"58\") return true\n        if(city.adminCode === \"59\") return true\n        if(city.adminCode === \"60\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Spanien\",\n      en: \"Spain\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Kanarische Inseln\",\n          en: \"Canary Islands\"\n        }\n      } // 53\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"ES\",\n    cities: cityList.filter(city => city.country === \"ES\" && city.adminCode === \"53\")\n  },\n  {\n    country: {\n      de: \"Schweden\",\n      en: \"Sweden\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"SE\",\n    cities: cityList.filter(city => city.country === \"SE\")\n  },\n  {\n    country: {\n      de: \"Schweiz\",\n      en: \"Switzerland\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"CH\",\n    cities: cityList.filter(city => city.country === \"CH\")\n  },\n  {\n    country: {\n      de: \"Vereinigtes Königreich\",\n      en: \"United Kingdom\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"England\",\n          en: \"England\"\n        }\n      }, // ENG\n      {\n        title: {\n          de: \"Schottland\",\n          en: \"Scotland\"\n        }\n      }, // SCT\n      {\n        title: {\n          de: \"Wales\",\n          en: \"Wales\"\n        }\n      } // WLS\n    ],\n    zone: \"Etc/GMT+0\",\n    flag: \"GB\",\n    cities: cityList.filter(city => {\n      if(city.country === \"GB\") {\n        if(city.adminCode === \"ENG\") return true\n        if(city.adminCode === \"SCT\") return true\n        if(city.adminCode === \"WLS\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigtes Königreich\",\n      en: \"United Kingdom\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Nordirland\",\n          en: \"Northern Ireland\"\n        }\n      } // NIR\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"GB\",\n    cities: cityList.filter(city => city.country === \"GB\" && city.adminCode === \"NIR\")\n  },\n  {\n    country: {\n      de: \"Ukraine\",\n      en: \"Ukraine\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"UA\",\n    cities: cityList.filter(city => city.country === \"UA\")\n  },\n  {\n    country: {\n      de: \"Vatikanstadt\",\n      en: \"Vatican City\"\n    },\n    zone: \"Etc/GMT-1\",\n    flag: \"VA\",\n    cities: cityList.filter(city => city.country === \"VA\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Indonesien\",\n      en: \"Indonesia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Aceh\",\n          en: \"Aceh\"\n        }\n      }, // 01\n      {\n        title: {\n          de: \"Bengkulu\",\n          en: \"Bengkulu\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Jakarta\",\n          en: \"Jakarta\"\n        }\n      }, // 04\n      {\n        title: {\n          de: \"Jambi\",\n          en: \"Jambi\"\n        }\n      }, // 05\n      {\n        title: {\n          de: \"Zentraljava\",\n          en: \"Central Java\"\n        }\n      }, // 07\n      {\n        title: {\n          de: \"Ostjava\",\n          en: \"East Java\"\n        }\n      }, // 08\n      {\n        title: {\n          de: \"Yogyakarta\",\n          en: \"Yogyakarta\"\n        }\n      }, // 10\n      {\n        title: {\n          de: \"Westkalimantan\",\n          en: \"West Kalimantan\"\n        }\n      }, // 11\n      {\n        title: {\n          de: \"Zentralkalimantan\",\n          en: \"Central Kalimantan\"\n        }\n      }, // 13 \n      {\n        title: {\n          de: \"Lampung\",\n          en: \"Lampung\"\n        }\n      }, // 15\n      {\n        title: {\n          de: \"Westsumatra\",\n          en: \"West Sumatra\"\n        }\n      }, // 24\n      {\n        title: {\n          de: \"Nordsumatra\",\n          en: \"North Sumatra\"\n        }\n      }, // 26\n      {\n        title: {\n          de: \"Westjava\",\n          en: \"West Java\"\n        }\n      }, // 30\n      {\n        title: {\n          de: \"Südsumatra\",\n          en: \"South Sumatra\"\n        }\n      }, // 32\n      {\n        title: {\n          de: \"Banten\",\n          en: \"Banten\"\n        }\n      }, // 33\n      {\n        title: {\n          de: \"Bangka-Belitung\",\n          en: \"Bangka Belitung\"\n        }\n      }, // 35\n      {\n        title: {\n          de: \"Riau\",\n          en: \"Riau\"\n        }\n      }, // 37\n      {\n        title: {\n          de: \"Riau-Inseln\",\n          en: \"Riau Islands\"\n        }\n      }, // 40\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"ID\",\n    cities: cityList.filter(city => {\n      if(city.country === \"ID\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"15\") return true\n        if(city.adminCode === \"24\") return true\n        if(city.adminCode === \"26\") return true\n        if(city.adminCode === \"30\") return true\n        if(city.adminCode === \"32\") return true\n        if(city.adminCode === \"33\") return true\n        if(city.adminCode === \"35\") return true\n        if(city.adminCode === \"37\") return true\n        if(city.adminCode === \"40\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Indonesien\",\n      en: \"Indonesia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Bali\",\n          en: \"Bali\"\n        }\n      }, // 02\n      {\n        title: {\n          de: \"Südkalimantan\",\n          en: \"South Kalimantan\"\n        }\n      }, // 12\n      {\n        title: {\n          de: \"Ostkalimantan\",\n          en: \"East Kalimantan\"\n        }\n      }, // 14 \n      {\n        title: {\n          de: \"West-Nusa-Tenggara\",\n          en: \"West Nusa Tenggara\"\n        }\n      }, // 17\n      {\n        title: {\n          de: \"Ost-Nusa-Tenggara\",\n          en: \"East Nusa Tenggara\"\n        }\n      }, // 18 \n      {\n        title: {\n          de: \"Zentralsulawesi\",\n          en: \"Central Sulawesi\"\n        }\n      }, // 21\n      {\n        title: {\n          de: \"Südostsulawesi\",\n          en: \"Southeast Sulawesi\"\n        }\n      }, // 22\n      {\n        title: {\n          de: \"Nordsulawesi\",\n          en: \"North Sulawesi\"\n        }\n      }, // 31\n      {\n        title: {\n          de: \"Gorontalo\",\n          en: \"Gorontalo\"\n        }\n      }, // 34\n      {\n        title: {\n          de: \"Südsulawesi\",\n          en: \"South Sulawesi\"\n        }\n      }, // 38\n      {\n        title: {\n          de: \"Westsulawesi\",\n          en: \"West Sulawesi\"\n        }\n      }, // 41\n      {\n        title: {\n          de: \"Nordkalimantan\",\n          en: \"North Kalimantan\"\n        }\n      }, // 42\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"ID\",\n    cities: cityList.filter(city => {\n      if(city.country === \"ID\") {\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"17\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"22\") return true\n        if(city.adminCode === \"31\") return true\n        if(city.adminCode === \"34\") return true\n        if(city.adminCode === \"38\") return true\n        if(city.adminCode === \"41\") return true\n        if(city.adminCode === \"42\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Indonesien\",\n      en: \"Indonesia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Maluku\",\n          en: \"Maluku\"\n        }\n      }, // 28\n      {\n        title: {\n          de: \"Nordmaluku\",\n          en: \"North Maluku\"\n        }\n      }, // 29\n      {\n        title: {\n          de: \"Papua\",\n          en: \"Papua\"\n        }\n      }, // 36\n      {\n        title: {\n          de: \"Westpapua\",\n          en: \"West Papua\"\n        }\n      }, // 39\n    ],\n    zone: \"Etc/GMT-9\",\n    flag: \"ID\",\n    cities: cityList.filter(city => {\n      if(city.country === \"ID\") {\n        if(city.adminCode === \"28\") return true\n        if(city.adminCode === \"29\") return true\n        if(city.adminCode === \"36\") return true\n        if(city.adminCode === \"39\") return true\n        return false\n      }\n      return false\n    })\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Afghanistan\",\n      en: \"Afghanistan\"\n    },\n    utcOffset: 270,\n    flag: \"AF\",\n    cities: cityList.filter(city => city.country === \"AF\")\n  },\n  {\n    country: {\n      de: \"Armenien\",\n      en: \"Armenia\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"AM\",\n    cities: cityList.filter(city => city.country === \"AM\")\n  },\n  {\n    country: {\n      de: \"Aserbaidschan\",\n      en: \"Azerbaijan\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"AZ\",\n    cities: cityList.filter(city => city.country === \"AZ\")\n  },\n  {\n    country: {\n      de: \"Bahrain\",\n      en: \"Bahrain\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"BH\",\n    cities: cityList.filter(city => city.country === \"BH\")\n  },\n  {\n    country: {\n      de: \"Georgien\",\n      en: \"Georgia\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"GE\",\n    cities: cityList.filter(city => city.country === \"GE\")\n  },\n  {\n    country: {\n      de: \"Iran\",\n      en: \"Iran\"\n    },\n    utcOffset: 210,\n    flag: \"IR\",\n    cities: cityList.filter(city => city.country === \"IR\")\n  },\n  {\n    country: {\n      de: \"Irak\",\n      en: \"Iraq\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"IQ\",\n    cities: cityList.filter(city => city.country === \"IQ\")\n  },\n  {\n    country: {\n      de: \"Israel\",\n      en: \"Israel\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"IL\",\n    cities: cityList.filter(city => city.country === \"IL\")\n  },\n  {\n    country: {\n      de: \"Jordanien\",\n      en: \"Jordan\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"JO\",\n    cities: cityList.filter(city => city.country === \"JO\")\n  },\n  {\n    country: {\n      de: \"Kuwait\",\n      en: \"Kuwait\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"KW\",\n    cities: cityList.filter(city => city.country === \"KW\")\n  },\n  {\n    country: {\n      de: \"Libanon\",\n      en: \"Lebanon\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"LB\",\n    cities: cityList.filter(city => city.country === \"LB\")\n  },\n  {\n    country: {\n      de: \"Oman\",\n      en: \"Oman\"\n    },\n    zone: \"Etc/GMT-4\",\n    flag: \"OM\",\n    cities: cityList.filter(city => city.country === \"OM\")\n  },\n  {\n    country: {\n      de: \"Palästina\",\n      en: \"Palestine\"\n    },\n    zone: \"Etc/GMT-2\",\n    flag: \"PS\",\n    cities: cityList.filter(city => city.country === \"PS\")\n  },\n  {\n    country: {\n      de: \"Katar\",\n      en: \"Qatar\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"QA\",\n    cities: cityList.filter(city => city.country === \"QA\")\n  },\n  {\n    country: {\n      de: \"Saudi-Arabien\",\n      en: \"Saudi Arabia\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"SA\",\n    cities: cityList.filter(city => city.country === \"SA\")\n  },\n  {\n    country: {\n      de: \"Syrien\",\n      en: \"Syria\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"SY\",\n    cities: cityList.filter(city => city.country === \"SY\")\n  },\n  {\n    country: {\n      de: \"Türkei\",\n      en: \"Turkey\"\n    },\n    subdiv: [\n      {title: \"Adana\"}, // 81\n      {title: \"Afyonkarahisar\"}, // 03\n      {title: \"Aksaray\"}, // 75\n      {title: \"Amasya\"}, // 05\n      {title: \"Ankara\"}, // 68\n      {title: \"Antalya\"}, // 07\n      {title: \"Aydin\"}, // 09\n      {title: \"Balıkesir\"}, // 10\n      {title: \"Bartın\"}, // 87\n      {title: \"Bilecik\"}, // 11\n      {title: \"Bolu\"}, // 14\n      {title: \"Burdur\"}, // 15\n      {title: \"Bursa\"}, // 16\n      {title: \"Çanakkale\"}, // 17\n      {title: \"Çankırı\"}, // 82\n      {title: \"Çorum\"}, // 19\n      {title: \"Denizli\"}, // 20\n      {title: \"Düzce\"}, // 93\n      {title: \"Edirne\"}, // 22\n      {title: \"Eskişehir\"}, // 26\n      {title: \"Hatay\"}, // 31\n      {title: \"Isparta\"}, // 33\n      {title: \"Mersin\"}, // 32\n      {title: \"İstanbul\"}, // 34\n      {title: \"İzmir\"}, // 35\n      {title: \"Kahramanmaraş\"}, // 46\n      {title: \"Karabük\"}, // 89\n      {title: \"Karaman\"}, // 78\n      {title: \"Kastamonu\"}, // 37\n      {title: \"Kayseri\"}, // 38\n      {title: \"Kırıkkale\"}, // 79\n      {title: \"Kırklareli\"}, // 39\n      {title: \"Kırşehir\"}, // 40\n      {title: \"Kocaeli\"}, // 41\n      {title: \"Konya\"}, // 71\n      {title: \"Kütahya\"}, // 43\n      {title: \"Manisa\"}, // 45\n      {title: \"Muğla\"}, // 48\n      {title: \"Nevşehir\"}, // 50\n      {title: \"Niğde\"}, // 73\n      {title: \"Osmaniye\"}, // 91\n      {title: \"Sakarya\"}, // 54\n      {title: \"Samsun\"}, // 55\n      {title: \"Sinop\"}, // 57\n      {title: \"Sivas\"}, // 58\n      {title: \"Tekirdağ\"}, // 59\n      {title: \"Tokat\"}, // 60\n      {title: \"Uşak\"}, // 64\n      {title: \"Yalova\"}, // 92\n      {title: \"Yozgat\"}, // 66\n      {title: \"Zonguldak\"}, // 85\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"TR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"TR\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"05\":\n          case \"07\":\n          case \"09\":\n          case \"10\":\n          case \"11\":\n          case \"14\":\n          case \"15\":\n          case \"16\":\n          case \"17\":\n          case \"19\":\n          case \"20\":\n          case \"22\":\n          case \"26\":\n          case \"31\":\n          case \"32\":\n          case \"33\":\n          case \"34\":\n          case \"35\":\n          case \"37\":\n          case \"38\":\n          case \"39\":\n          case \"40\":\n          case \"41\":\n          case \"43\":\n          case \"45\":\n          case \"46\":\n          case \"48\":\n          case \"50\":\n          case \"54\":\n          case \"55\":\n          case \"57\":\n          case \"58\":\n          case \"59\":\n          case \"60\":\n          case \"64\":\n          case \"66\":\n          case \"68\":\n          case \"71\":\n          case \"73\":\n          case \"75\":\n          case \"78\":\n          case \"79\":\n          case \"81\":\n          case \"82\":\n          case \"85\":\n          case \"87\":\n          case \"89\":\n          case \"91\":\n          case \"92\":\n          case \"93\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Türkei\",\n      en: \"Turkey\"\n    },\n    subdiv: [\n      {title: \"Adıyaman\"}, // 02\n      {title: \"Ağrı\"}, // 04\n      {title: \"Ardahan\"}, // 86\n      {title: \"Artvin\"}, // 08\n      {title: \"Batman\"}, // 76\n      {title: \"Bayburt\"}, // 77\n      {title: \"Bingöl\"}, // 12\n      {title: \"Bitlis\"}, // 13\n      {title: \"Diyarbakır\"}, // 21\n      {title: \"Elazığ\"}, // 23\n      {title: \"Erzincan\"}, // 24\n      {title: \"Erzurum\"}, // 25\n      {title: \"Gaziantep\"}, // 83\n      {title: \"Giresun\"}, // 28\n      {title: \"Gümüşhane\"}, // 69\n      {title: \"Hakkari\"}, // 70\n      {title: \"Iğdır\"}, // 88\n      {title: \"Kars\"}, // 84\n      {title: \"Kilis\"}, // 90\n      {title: \"Malatya\"}, // 44\n      {title: \"Mardin\"}, // 72\n      {title: \"Muş\"}, // 49\n      {title: \"Ordu\"}, // 52\n      {title: \"Rize\"}, // 53\n      {title: \"Şanlıurfa\"}, // 63\n      {title: \"Siirt\"}, // 74\n      {title: \"Şırnak\"}, // 80\n      {title: \"Trabzon\"}, // 61\n      {title: \"Tunceli\"}, // 62\n      {title: \"Van\"}, // 65\n    ],\n    zone: \"Etc/GMT-3\",\n    flag: \"TR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"TR\") {\n        switch(city.adminCode) {\n          case \"02\":\n          case \"04\":\n          case \"08\":\n          case \"12\":\n          case \"13\":\n          case \"21\":\n          case \"23\":\n          case \"24\":\n          case \"25\":\n          case \"28\":\n          case \"44\":\n          case \"49\":\n          case \"52\":\n          case \"53\":\n          case \"61\":\n          case \"62\":\n          case \"63\":\n          case \"65\":\n          case \"69\":\n          case \"70\":\n          case \"72\":\n          case \"74\":\n          case \"76\":\n          case \"77\":\n          case \"80\":\n          case \"83\":\n          case \"84\":\n          case \"86\":\n          case \"88\":\n          case \"90\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Arabische Emirate\",\n      en: \"United Arab Emirates\"\n    },\n    utcOffset: 210,\n    flag: \"AE\",\n    cities: cityList.filter(city => city.country === \"AE\")\n  },\n  {\n    country: {\n      de: \"Jemen\",\n      en: \"Yemen\"\n    },\n    zone: \"Etc/GMT-3\",\n    flag: \"YE\",\n    cities: cityList.filter(city => city.country === \"YE\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Amerikanisch-Samoa (USA)\",\n      en: \"American Samoa (United States)\"\n    },\n    zone: \"Etc/GMT+11\",\n    flag: \"AS\",\n    cities: cityList.filter(city => city.country === \"AS\")\n  },\n  {\n    country: {\n      de: \"Cookinseln (Neuseeland)\",\n      en: \"Cook Islands (New Zealand)\"\n    },\n    zone: \"Etc/GMT+11\",\n    flag: \"CK\",\n    cities: cityList.filter(city => city.country === \"CK\")\n  },\n  {\n    country: {\n      de: \"Fidschi\",\n      en: \"Fiji\"\n    },\n    zone: \"Etc/GMT-12\",\n    flag: \"FJ\",\n    cities: cityList.filter(city => city.country === \"FJ\")\n  },\n  {\n    country: {\n      de: \"Französisch-Polynesien (Frankreich)\",\n      en: \"French Polynesia (France)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Austral-Inseln\",\n          en: \"Austral Islands\"\n        }\n      }, // 05\n      {\n        title: {\n          de: \"Gesellschaftsinseln\",\n          en: \"Society Islands\"\n        }\n      }, // 01, 02\n      {\n        title: {\n          de: \"Tuamotu-Archipel\",\n          en: \"Tuamotus\"\n        }\n      } // part of 03\n    ],\n    zone: \"Etc/GMT+10\",\n    flag: \"PF\",\n    cities: cityList.filter(city => {\n      if(city.country === \"PF\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"02\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Französisch-Polynesien (Frankreich)\",\n      en: \"French Polynesia (France)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Gambierinseln\",\n          en: \"Gambier Islands\"\n        }\n      } // part of 03\n    ],\n    zone: \"Etc/GMT+9\",\n    flag: \"PF\"\n  },\n  {\n    country: {\n      de: \"Französisch-Polynesien (Frankreich)\",\n      en: \"French Polynesia (France)\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Marquesasinseln\",\n          en: \"Marquesas Islands\"\n        }\n      } // 04\n    ],\n    zone: \"Etc/GMT+9\",\n    flag: \"PF\",\n    cities: cityList.filter(city => city.country === \"PF\" && city.adminCode === \"04\")\n  },\n  {\n    country: {\n      de: \"Guam (USA)\",\n      en: \"Guam (United States)\"\n    },\n    zone: \"Etc/GMT-10\",\n    flag: \"GU\",\n    cities: cityList.filter(city => city.country === \"GU\")\n  },\n  {\n    country: {\n      de: \"Kiribati\",\n      en: \"Kiribati\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Banaba\",\n          en: \"Banaba\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"KI\"\n  },\n  {\n    country: {\n      de: \"Kiribati\",\n      en: \"Kiribati\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Gilbertinseln\",\n          en: \"Gilbert Islands\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"KI\",\n    cities: cityList.filter(city => city.country === \"KI\" && city.adminCode === \"01\")\n  },\n  {\n    country: {\n      de: \"Kiribati\",\n      en: \"Kiribati\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Phoenixinseln\",\n          en: \"Phoenix Islands\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-13\",\n    flag: \"KI\"\n  },\n  {\n    country: {\n      de: \"Kiribati\",\n      en: \"Kiribati\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Kiritimati\",\n          en: \"Kiritimati\"\n        }\n      },\n      {\n        title: {\n          de: \"Line Islands\",\n          en: \"Line Islands\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT-14\",\n    flag: \"KI\"\n  },\n  {\n    country: {\n      de: \"Marshallinseln\",\n      en: \"Marshall Islands\"\n    },\n    zone: \"Etc/GMT-11\",\n    flag: \"MH\",\n    cities: cityList.filter(city => city.country === \"MH\")\n  },\n  {\n    country: {\n      de: \"Föderierte Staaten von Mikronesien\",\n      en: \"Federated States of Micronesia\"\n    },\n    subdiv: [\n      {title: \"Chuuk\"}, // 03\n      {title: \"Yap\"} // 04\n    ],\n    zone: \"Etc/GMT-10\",\n    flag: \"FM\",\n    cities: cityList.filter(city => {\n      if(city.country === \"FM\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"04\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Föderierte Staaten von Mikronesien\",\n      en: \"Federated States of Micronesia\"\n    },\n    subdiv: [\n      {title: \"Kosrae\"}, // 01\n      {title: \"Pohnpei\"} // 02\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"FM\",\n    cities: cityList.filter(city => {\n      if(city.country === \"FM\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"02\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Nauru\",\n      en: \"Nauru\"\n    },\n    zone: \"Etc/GMT-11\",\n    flag: \"NR\",\n    cities: cityList.filter(city => city.country === \"NR\")\n  },\n  {\n    country: {\n      de: \"Neukaledonien (Frankreich)\",\n      en: \"New Caledonia (France)\"\n    },\n    zone: \"Etc/GMT-11\",\n    flag: \"NC\",\n    cities: cityList.filter(city => city.country === \"NC\")\n  },\n  {\n    country: {\n      de: \"Neuseeland\",\n      en: \"New Zealand\"\n    },\n    subdiv: [\n      {title: \"Canterbury\"}, // E9\n      {title: \"Marlborough\"}, // F4\n      {title: \"Nelson\"}, // F5\n      {title: \"Otago\"}, // F7\n      {title: \"Southland\"}, // F8\n      {title: \"West Coast\"}, // G3\n      {title: \"Tasman\"}, // TAS\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"NZ\",\n    cities: cityList.filter(city => {\n      if(city.country === \"NZ\") {\n        switch(city.adminCode) {\n          case \"E9\":\n          case \"F4\":\n          case \"F5\":\n          case \"F7\":\n          case \"F8\":\n          case \"G3\":\n          case \"TAS\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Neuseeland\",\n      en: \"New Zealand\"\n    },\n    subdiv: [\n      {title: \"Auckland\"}, // E7\n      {title: \"Bay of Plenty\"}, // E8\n      {title: \"Gisborne\"}, // F1\n      {title: \"Hawke's Bay\"}, // F2\n      {title: \"Manawatu-Wanganui\"}, // F3\n      {title: \"Northland\"}, // F6\n      {title: \"Taranaki\"}, // F9\n      {title: \"Waikato\"}, // G1\n      {title: \"Wellington\"}, // G2\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"NZ\",\n    cities: cityList.filter(city => {\n      if(city.country === \"NZ\") {\n        switch(city.adminCode) {\n          case \"E7\":\n          case \"E8\":\n          case \"F1\":\n          case \"F2\":\n          case \"F3\":\n          case \"F6\":\n          case \"F9\":\n          case \"G1\":\n          case \"G2\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Neuseeland\",\n      en: \"New Zealand\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Chathaminseln\",\n          en: \"Chatham Islands\"\n        }\n      } // 10\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"NZ\",\n    cities: cityList.filter(city => city.country === \"NZ\" && city.adminCode === \"10\")\n  },\n  {\n    country: {\n      de: \"Niue (Neuseeland)\",\n      en: \"Niue (New Zealand)\"\n    },\n    zone: \"Etc/GMT+11\",\n    flag: \"NU\",\n    cities: cityList.filter(city => city.country === \"NU\")\n  },\n  {\n    country: {\n      de: \"Nördliche Marianen (USA)\",\n      en: \"Northern Mariana Islands (United States)\"\n    },\n    zone: \"Etc/GMT-10\",\n    flag: \"MP\",\n    cities: cityList.filter(city => city.country === \"MP\")\n  },\n  {\n    country: {\n      de: \"Palau\",\n      en: \"Palau\"\n    },\n    zone: \"Etc/GMT-9\",\n    flag: \"PW\",\n    cities: cityList.filter(city => city.country === \"PW\")\n  },\n  {\n    country: {\n      de: \"Papua-Neuguinea\",\n      en: \"Papua New Guinea\"\n    },\n    zone: \"Etc/GMT-10\",\n    flag: \"PG\",\n    cities: cityList.filter(city => city.country === \"PG\")\n  },\n  {\n    country: {\n      de: \"Pitcairninseln (Vereinigtes Königreich)\",\n      en: \"Pitcairn Islands (United Kingdom)\"\n    },\n    zone: \"Etc/GMT-9\",\n    flag: \"PN\",\n    cities: cityList.filter(city => city.country === \"PN\")\n  },\n  {\n    country: {\n      de: \"Samoa\",\n      en: \"Samoa\"\n    },\n    zone: \"Etc/GMT-13\",\n    flag: \"WS\",\n    cities: cityList.filter(city => city.country === \"WS\")\n  },\n  {\n    country: {\n      de: \"Salomonen\",\n      en: \"Solomon Islands\"\n    },\n    zone: \"Etc/GMT-11\",\n    flag: \"SB\",\n    cities: cityList.filter(city => city.country === \"SB\")\n  },\n  {\n    country: {\n      de: \"Tokelau (Neuseeland)\",\n      en: \"Tokelau (New Zealand)\"\n    },\n    zone: \"Etc/GMT-13\",\n    flag: \"TK\",\n    cities: cityList.filter(city => city.country === \"TK\")\n  },\n  {\n    country: {\n      de: \"Tonga\",\n      en: \"Tonga\"\n    },\n    zone: \"Etc/GMT-12\",\n    flag: \"TO\",\n    cities: cityList.filter(city => city.country === \"TO\")\n  },\n  {\n    country: {\n      de: \"Tuvalu\",\n      en: \"Tuvalu\"\n    },\n    zone: \"Etc/GMT-12\",\n    flag: \"TV\",\n    cities: cityList.filter(city => city.country === \"TV\")\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\"\n    },\n    subdiv: [\n      {title: \"Hawaii\"}\n    ],\n    zone: \"Etc/GMT+10\",\n    flag: \"US\",\n    cities: cityList.filter(city => city.country === \"US\" && city.adminCode === \"HI\")\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Midwayinseln\",\n          en: \"Midway Islands\"\n        }\n      } // 300\n    ],\n    zone: \"Etc/GMT+12\",\n    flag: \"US\", // eigentlich UM\n    cities: cityList.filter(city => {\n      if(city.country === \"UM\") {\n        switch(city.adminCode) {\n          case \"300\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\"\n    },\n    subdiv: [\n      {title: \"Wake\"}\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"US\", // eigentlich UM\n    cities: cityList.filter(city => city.country === \"UM\" && city.adminCode === \"450\")\n  },\n  {\n    country: {\n      de: \"Vanuatu\",\n      en: \"Vanuatu\"\n    },\n    zone: \"Etc/GMT-11\",\n    flag: \"VU\",\n    cities: cityList.filter(city => city.country === \"VU\")\n  },\n  {\n    country: {\n      de: \"Wallis und Futuna (Frankreich)\",\n      en: \"Wallis and Futuna (France)\"\n    },\n    zone: \"Etc/GMT-12\",\n    flag: \"WF\",\n    cities: cityList.filter(city => city.country === \"WF\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Oblast Kaliningrad\",\n          en: \"Kaliningrad Oblast\"\n        }\n      } //23\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"RU\",\n    cities: cityList.filter(city => city.country === \"RU\" && city.adminCode === \"23\")\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"St. Petersburg\",\n          en: \"Saint Petersburg\"\n        }\n      }, // 66\n      {\n        title: {\n          de: \"Republik Karelien\",\n          en: \"Karelia\"\n        }\n      }, // 28\n      {\n        title: {\n          de: \"Oblast Belgorod\",\n          en: \"Belgorod Oblast\"\n        }\n      }, // 09\n      {\n        title: {\n          de: \"Oblast Brjansk\",\n          en: \"Bryansk Oblast\"\n        }\n      }, // 10\n      {\n        title: {\n          de: \"Oblast Kaluga\",\n          en: \"Kaluga Oblast\"\n        }\n      }, // 25\n      {\n        title: {\n          de: \"Oblast Kursk\",\n          en: \"Kursk Oblast\"\n        }\n      }, // 41\n      {\n        title: {\n          de: \"Oblast Leningrad\",\n          en: \"Leningrad Oblast\"\n        }\n      }, // 42\n      {\n        title: {\n          de: \"Oblast Murmansk\",\n          en: \"Murmansk Oblast\"\n        }\n      }, // 49\n      {\n        title: {\n          de: \"Oblast Nowgorod\",\n          en: \"Novgorod Oblast\"\n        }\n      }, // 52\n      {\n        title: {\n          de: \"Oblast Orjol\",\n          en: \"Oryol Oblast\"\n        }\n      }, // 56\n      {\n        title: {\n          de: \"Oblast Pskow\",\n          en: \"Pskov Oblast\"\n        }\n      }, // 60\n      {\n        title: {\n          de: \"Oblast Smolensk\",\n          en: \"Smolensk Oblast\"\n        }\n      }, // 69\n      {\n        title: {\n          de: \"Oblast Tula\",\n          en: \"Tula Oblast\"\n        }\n      }, // 76\n      {\n        title: {\n          de: \"Oblast Twer\",\n          en: \"Tver Oblast\"\n        }\n      }, // 77\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"09\":\n          case \"10\":\n          case \"25\":\n          case \"28\":\n          case \"41\":\n          case \"42\":\n          case \"49\":\n          case \"52\":\n          case \"56\":\n          case \"60\":\n          case \"66\":\n          case \"69\":\n          case \"76\":\n          case \"77\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Moskau\",\n          en: \"Moscow\"\n        }\n      }, // 48 \n      {\n        title: {\n          de: \"Republik Adygeja\",\n          en: \"Adygea\"\n        }\n      }, // 01\n      {\n        title: {\n          de: \"Republik Tschetschenien\",\n          en: \"Chechnya\"\n        }\n      }, // 12\n      {\n        title: {\n          de: \"Republik Tschuwaschien\",\n          en: \"Chuvashia\"\n        }\n      }, // 16\n      {\n        title: {\n          de: \"Republik Dagestan\",\n          en: \"Dagestan\"\n        }\n      }, // 17\n      {\n        title: {\n          de: \"Republik Inguschetien\",\n          en: \"Ingushetia\"\n        }\n      },  // 19\n      {\n        title: {\n          de: \"Republik Kabardino-Balkarien\",\n          en: \"Kabardino-Balkaria\"\n        }\n      }, // 22 \n      {\n        title: {\n          de: \"Republik Kalmückien\",\n          en: \"Kalmykia\"\n        }\n      }, // 24\n      {\n        title: {\n          de: \"Republik Karatschai-Tscherkessien\",\n          en: \"Karachay-Cherkessia\"\n        }\n      }, // 27\n      {\n        title: {\n          de: \"Republik Mari El\",\n          en: \"Mari El\"\n        }\n      }, // 45\n      {\n        title: {\n          de: \"Republik Mordwinien\",\n          en: \"Mordovia\"\n        }\n      }, // 46\n      {\n        title: {\n          de: \"Republik Nordossetien-Alanien\",\n          en: \"North Ossetia-Alania\"\n        }\n      }, // 68\n      {\n        title: {\n          de: \"Republik Tatarstan\",\n          en: \"Tatarstan\"\n        }\n      }, // 73\n      {\n        title: {\n          de: \"Republik Udmurtien\",\n          en: \"Udmurtia\"\n        }\n      }, // 80\n      {\n        title: {\n          de: \"Region Krasnodar\",\n          en: \"Krasnodar Region\"\n        }\n      }, // 38\n      {\n        title: {\n          de: \"Region Stawropol\",\n          en: \"Stavropol Region\"\n        }\n      }, // 70\n      {\n        title: {\n          de: \"Oblast Archangelsk\",\n          en: \"Arkhangelsk Oblast\"\n        }\n      }, // 06\n      {\n        title: {\n          de: \"Oblast Astrachan\",\n          en: \"Astrakhan Oblast\"\n        }\n      }, // 07\n      {\n        title: {\n          de: \"Oblast Iwanowo\",\n          en: \"Ivanovo Oblast\"\n        }\n      }, // 21\n      {\n        title: {\n          de: \"Oblast Kirow\",\n          en: \"Kirov Oblast\"\n        }\n      }, // 33\n      {\n        title: {\n          de: \"Oblast Kostroma\",\n          en: \"Kostroma Oblast\"\n        }\n      }, // 37\n      {\n        title: {\n          de: \"Oblast Lipezk\",\n          en: \"Lipetsk Oblast\"\n        }\n      }, // 43\n      {\n        title: {\n          de: \"Oblast Moskau\",\n          en: \"Moscow Oblast\"\n        }\n      }, // 47\n      {\n        title: {\n          de: \"Oblast Nischni Nowgorod\",\n          en: \"Nizhnyi Novgorod Oblast\"\n        }\n      }, // 51\n      {\n        title: {\n          de: \"Oblast Pensa\",\n          en: \"Penza Oblast\"\n        }\n      }, // 57\n      {\n        title: {\n          de: \"Oblast Rostow\",\n          en: \"Rostov Oblast\"\n        }\n      }, // 61\n      {\n        title: {\n          de: \"Oblast Rjasan\",\n          en: \"Ryazan Oblast\"\n        }\n      }, // 62\n      {\n        title: {\n          de: \"Oblast Samara\",\n          en: \"Samara Oblast\"\n        }\n      }, // 65\n      {\n        title: {\n          de: \"Oblast Saratow\",\n          en: \"Saratov Oblast\"\n        }\n      }, // 67\n      {\n        title: {\n          de: \"Oblast Tambow\",\n          en: \"Tambov Oblast\"\n        }\n      }, // 72\n      {\n        title: {\n          de: \"Oblast Uljanowsk\",\n          en: \"Ulyanovsk Oblast\"\n        }\n      }, // 81\n      {\n        title: {\n          de: \"Oblast Wladimir\",\n          en: \"Vladimir Oblast\"\n        }\n      }, // 83\n      {\n        title: {\n          de: \"Oblast Wolgograd\",\n          en: \"Volgograd Oblast\"\n        }\n      }, // 84\n      {\n        title: {\n          de: \"Oblast Wologda\",\n          en: \"Vologda Oblast\"\n        }\n      }, // 85\n      {\n        title: {\n          de: \"Oblast Woronesch\",\n          en: \"Voronezh Oblast\"\n        }\n      }, // 86\n      {\n        title: {\n          de: \"Oblast Jaroslawl\",\n          en: \"Yaroslavl Oblast\"\n        }\n      }, // 88\n      {\n        title: {\n          de: \"Autonomer Kreis der Nenzen\",\n          en: \"Nenets Autonomous Okrug\"\n        }, \n        extra: {\n          de: \"(westlich von 52.5° E)\",\n          en: \"(west of 52.5° E)\"\n        }\n      } // 50\n    ],\n    zone: \"Etc/GMT-3\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"06\":\n          case \"07\":\n          case \"12\":\n          case \"16\":\n          case \"17\":\n          case \"19\":\n          case \"21\":\n          case \"22\":\n          case \"24\":\n          case \"27\":\n          case \"33\":\n          case \"37\":\n          case \"38\":\n          case \"43\":\n          case \"45\":\n          case \"46\":\n          case \"47\":\n          case \"48\":\n          case \"51\":\n          case \"57\":\n          case \"61\":\n          case \"62\":\n          case \"65\":\n          case \"67\":\n          case \"68\":\n          case \"70\":\n          case \"72\":\n          case \"73\":\n          case \"80\":\n          case \"81\":\n          case \"83\":\n          case \"84\":\n          case \"85\":\n          case \"86\":\n          case \"88\":\n            return true\n          case \"50\":\n            if(city.lon < 52.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Republik Baschkortostan\",\n          en: \"Bashkortostan\"\n        }\n      }, // 08\n      {\n        title: {\n          de: \"Republik Komi\",\n          en: \"Komi\"\n        }\n      }, // 34\n      {\n        title: {\n          de: \"Region Perm\",\n          en: \"Perm Region\"\n        }\n      }, // 90\n      {\n        title: {\n          de: \"Oblast Tscheljabinsk\",\n          en: \"Chelyabinsk Oblast\"\n        }\n      }, // 13\n      {\n        title: {\n          de: \"Oblast Kurgan\",\n          en: \"Kurgan Oblast\"\n        }\n      }, // 40\n      {\n        title: {\n          de: \"Oblast Orenburg\",\n          en: \"Orenburg Oblast\"\n        }\n      }, // 55\n      {\n        title: {\n          de: \"Oblast Swerdlowsk\",\n          en: \"Sverdlovsk Oblast\"\n        }\n      }, // 71\n      {\n        title: {\n          de: \"Autonomer Kreis der Nenzen\",\n          en: \"Nenets Autonomous Okrug\"\n        }, \n        extra: {\n          de: \"(östlich von 52.5° E)\",\n          en: \"(east of 52.5° E)\"\n        }\n      } // 50\n    ],\n    zone: \"Etc/GMT-4\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"08\":\n          case \"13\":\n          case \"34\":\n          case \"40\":\n          case \"55\":\n          case \"71\":\n          case \"90\":\n            return true\n          case \"50\":\n            if(city.lon >= 52.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Region Altai\",\n          en: \"Altai Region\"\n        }\n      }, // 04\n      {\n        title: {\n          de: \"Oblast Nowosibirsk\",\n          en: \"Novosibirsk Oblast\"\n        }\n      }, // 53\n      {\n        title: {\n          de: \"Oblast Omsk\",\n          en: \"Omsk Oblast\"\n        }\n      }, // 54\n      {\n        title: {\n          de: \"Oblast Tjumen\",\n          en: \"Tyumen Oblast\"\n        }\n      }, // 78\n      {\n        title: {\n          de: \"Autonomer Kreis der Chanten und Mansen\",\n          en: \"Khanty-Mansi Autonomous Okrug\"\n        }\n      }, // 32\n      {\n        title: {\n          de: \"Autonomer Kreis der Jamal-Nenzen\",\n          en: \"Yamalo-Nenets Autonomous Okrug\"\n        }\n      }, // 87\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"04\":\n          case \"32\":\n          case \"53\":\n          case \"54\":\n          case \"78\":\n          case \"87\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Republik Altai\",\n          en: \"Altai Republic\"\n        }\n      }, // 03\n      {\n        title: {\n          de: \"Republik Chakassien\",\n          en: \"Khakassia\"\n        }\n      }, // 31\n      {\n        title: {\n          de: \"Republik Tuwa\",\n          en: \"Tuva Republic\"\n        }\n      }, // 79\n      {\n        title: {\n          de: \"Region Krasnojarsk\",\n          en: \"Krasnoyarsk Region\"\n        }, \n        extra: {\n          de: \"(westlich von 97.5° E)\",\n          en: \"(west of 97.5° E)\"\n        }\n      }, // 91\n      {\n        title: {\n          de: \"Oblast Kemerowo\",\n          en: \"Kemerovo Oblast\"\n        }\n      }, // 29\n      {\n        title: {\n          de: \"Oblast Tomsk\",\n          en: \"Tomsk Oblast\"\n        }\n      }, // 75\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"29\":\n          case \"31\":\n          case \"75\":\n          case \"79\":\n            return true\n          case \"91\":\n            if(city.lon < 97.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Republik Burjatien\",\n          en: \"Buryatia\"\n        }\n      }, // 11\n      {\n        title: {\n          de: \"Republik Sacha\",\n          en: \"Sakha\"\n        }, \n        extra: {\n          de: \"(westlich von 112.5° E)\",\n          en: \"(west of 112.5° E)\"\n        }\n      }, // 63\n      {\n        title: {\n          de: \"Region Krasnojarsk\",\n          en: \"Krasnoyarsk Region\"\n        }, \n        extra: {\n          de: \"(östlich von 97.5° E)\",\n          en: \"(east of 97.5°E)\"\n        }\n      }, // 91\n      {\n        title: {\n          de: \"Oblast Irkutsk\",\n          en: \"Irkutsk Oblast\"\n        }, \n        extra: {\n          de: \"(westlich von 112.5° E)\",\n          en: \"(west of 112.5° E)\"\n        }\n      }, // 20\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"11\":\n            return true\n          case \"91\":\n            if(city.lon >= 97.5) return true\n            return false\n          case \"20\":\n          case \"63\":\n            if(city.lon < 112.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Republik Sacha\",\n          en: \"Sakha\"\n        }, \n        extra: \"(112.5° E – 127.5° E)\"\n      }, // 63\n      {\n        title: {\n          de: \"Oblast Amur\",\n          en: \"Amur Oblast\"\n        }\n      }, // 05\n      {\n        title: {\n          de: \"Oblast Irkutsk\",\n          en: \"Irkutsk Oblast\"\n        }, \n        extra: {\n          de: \"(östlich von 112.5° E)\",\n          en: \"(east of 112.5° E)\"\n        }\n      }, // 20\n      {\n        title: {\n          de: \"Region Transbaikalien\",\n          en: \"Zabaykalsky Krai\"\n        }\n      }, // 93\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"05\":\n          case \"93\":\n            return true\n          case \"20\":\n            if(city.lon >= 112.5) return true\n            return false\n          case \"63\":\n            if(city.lon >= 112.5 && city.lon < 127.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Republik Sacha\",\n          en: \"Sakha\"\n        }, \n        extra: \"(127.5°E – 142.5° E)\"\n      }, // 63\n      {\n        title: {\n          de: \"Region Chabarowsk\",\n          en: \"Khabarovsk Region\"\n        }\n      }, // 30\n      {\n        title: {\n          de: \"Region Primorje\",\n          en: \"Primorsky Krai\"\n        }\n      }, // 59\n      {\n        title: {\n          de: \"Oblast Sachalin\",\n          en: \"Sakhalin Oblast\"\n        }\n      }, // 64\n      {\n        title: {\n          de: \"Jüdische Autonome Oblast\",\n          en: \"Jewish Autonomous Oblast\"\n        }\n      }, // 89\n    ],\n    zone: \"Etc/GMT-9\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"30\":\n          case \"59\":\n          case \"64\":\n          case \"89\":\n            return true\n          case \"63\":\n            if(city.lon >= 127.5 && city.lon < 142.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Republik Sacha\",\n          en: \"Sakha\"\n        },\n        extra: {\n          de: \"(östlich von 142.5° E)\",\n          en: \"(east of 142.5° E)\"\n        }\n      }, // 63\n      {\n        title: {\n          de: \"Oblast Magadan\",\n          en: \"Magadan Oblast\"\n        }, \n        extra: {\n          de: \"(westlich von 157.5° E)\",\n          en: \"(west of 157.5° E)\"\n        }\n      } // 44\n    ],\n    zone: \"Etc/GMT-10\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"44\":\n            if(city.lon < 157.5) return true\n            return false\n          case \"63\":\n            if(city.lon >= 142.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Oblast Magadan\",\n          en: \"Magadan Oblast\"\n        },\n        extra: {\n          de: \"(östlich von 157.5° E)\",\n          en: \"(east of 157.5° E)\"\n        }\n      }, // 44\n      {\n        title: {\n          de: \"Region Kamtschatka\",\n          en: \"Kamchatka\"\n        }\n      }, // 92\n      {\n        title: {\n          de: \"Autonomer Kreis der Tschuktschen\",\n          en: \"Chukotka Autonomous Okrug\"\n        }, \n        extra: {\n          de: \"(westlich von 172.5° E)\",\n          en: \"(west of 172.5° E)\"\n        }\n      }, // 15\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"92\":\n            return true\n          case \"15\":\n            if(city.lon < 172.5) return true\n            return false\n          case \"44\":\n            if(city.lon >= 157.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Russland\",\n      en: \"Russia\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Autonomer Kreis der Tschuktschen\",\n          en: \"Chukotka Autonomous Okrug\"\n        },\n        extra: {\n          de: \"(östlich von 172.5° E)\",\n          en: \"(east of 172.5° E)\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"RU\",\n    cities: cityList.filter(city => city.country === \"RU\" && city.adminCode === \"15\" && city.lon >= 172.5)\n  },\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Argentinien\",\n      en: \"Argentina\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"AR\",\n    cities: cityList.filter(city => city.country === \"AR\")\n  },\n  {\n    country: {\n      de: \"Bolivien\",\n      en: \"Bolivia\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"BO\",\n    cities: cityList.filter(city => city.country === \"BO\")\n  },\n  {\n    country: {\n      de: \"Brasilien\",\n      en: \"Brazil\"\n    },\n    subdiv: [\n      {title: \"Acre\"}, // 01\n      {\n        title: \"Amazonas\", \n        extra: {\n          de: \"(westlicher Teil)\",\n          en: \"(western part)\"\n        }\n      } // 04\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"BR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"BR\") {\n        switch(city.adminCode) {\n          case \"01\":\n            return true\n          case \"04\":\n            if(city.lon < -67.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Brasilien\",\n      en: \"Brazil\"\n    },\n    subdiv: [\n      {\n        title: \"Amazonas\", \n        extra: {\n          de: \"(östlicher Teil)\",\n          en: \"(eastern part)\"\n        }\n      }, // 04\n      {title: \"Mato Grosso\"}, // 14\n      {title: \"Mato Grosso do Sul\"}, // 11\n      {\n        title: \"Pará\", \n        extra: {\n          de: \"(westlich von 52.5° W)\",\n          en: \"(west of 52.5° W)\"\n        }\n      }, // 16\n      {title: \"Rio Grande do Sul\"}, // 23\n      {title: \"Rondônia\"}, // 24\n      {title: \"Roraima\"}, // 25\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"BR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"BR\") {\n        switch(city.adminCode) {\n          case \"11\":\n          case \"14\":\n          case \"23\":\n          case \"24\":\n          case \"25\":\n            return true\n          case \"04\":\n            if(city.lon >= -67.5) return true\n            return false\n          case \"16\":\n            if(city.lon < -52.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false \n    })\n  },\n  {\n    country: {\n      de: \"Brasilien\",\n      en: \"Brazil\"\n    },\n    subdiv: [\n      {title: \"Amapá\"}, // 03\n      {title: \"Bahia\"}, // 05\n      {title: \"Ceará\"},  // 06\n      {title: \"Distrito Federal\"}, // 07\n      {title: \"Espírito Santo\"},  // 08\n      {title: \"Goiás\"}, // 29 \n      {title: \"Maranhão\"}, // 13\n      {title: \"Minas Gerais\"}, // 15\n      {\n        title: \"Pará\", \n        extra: {\n          de: \"(östlich von 52.5° W)\",\n          en: \"(east of 52.5° W)\"\n        }\n      }, // 16\n      {title: \"Paraná\"}, // 18\n      {title: \"Pernambuco\"}, // 30\n      {title: \"Piauí\"}, // 20\n      {title: \"Rio de Janeiro\"}, // 21\n      {title: \"Santa Catarina\"}, // 26\n      {title: \"São Paulo\"}, // 27\n      {title: \"Tocantins\"}, // 31\n    ],\n    zone: \"Etc/GMT+3\",\n    flag: \"BR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"BR\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"05\":\n          case \"06\":\n          case \"07\":\n          case \"08\":\n          case \"13\":\n          case \"15\":\n          case \"18\":\n          case \"20\":\n          case \"21\":\n          case \"26\":\n          case \"27\":\n          case \"29\":\n          case \"30\":\n          case \"31\":\n            return true\n          case \"16\":\n            if(city.lon >= -52.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Brasilien\",\n      en: \"Brazil\"\n    },\n    subdiv: [\n      {title: \"Alagoas\"}, // 02\n      {title: \"Fernando de Noronha\"}, \n      {title: \"Paraíba\"}, // 17\n      {title: \"Rio Grande do Norte\"}, // 22\n      {title: \"Sergipe\"}, // 28\n    ],\n    zone: \"Etc/GMT+2\",\n    flag: \"BR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"BR\") {\n        if(city.tz === \"America/Noronha\") return true\n        switch(city.adminCode) {\n          case \"02\":\n          case \"17\":\n          case \"22\":\n          case \"28\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Chile\",\n      en: \"Chile\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Osterinsel\",\n          en: \"Easter Island\"\n        }\n      }\n    ],\n    zone: \"Etc/GMT+7\",\n    flag: \"CL\",\n    cities: cityList.filter(city => city.country === \"CL\" && city.tz === \"Pacific/Easter\")\n  },\n  {\n    country: {\n      de: \"Chile\",\n      en: \"Chile\"\n    },\n    subdiv: [\n      {title: \"Aisén\"},\n      {title: \"Antofagasta\"},\n      {title: \"Araucanía\"},\n      {title: \"Arica and Parinacota\"},\n      {title: \"Atacama\"},\n      {title: \"Biobío\"},\n      {title: \"Coquimbo\"},\n      {title: \"Los Lagos\"},\n      {title: \"Los Ríos\"},\n      {title: \"Magallanes and Antártica Chilena Region\"},\n      {title: \"Maule\"},\n      {title: \"Ñuble\"},\n      {title: \"Región del Libertador Bernardo O'Higgins\"},\n      {title: \"Santiago\"},\n      {title: \"Tarapacá\"},\n      {\n        title: \"Valparaíso\", \n        extra: {\n          de: \"(Festland)\",\n          en: \"(continental part)\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"CL\",\n    cities: cityList.filter(city => city.country === \"CL\" && city.tz !== \"Pacific/Easter\")\n  },\n  {\n    country: {\n      de: \"Kolumbien\",\n      en: \"Colombia\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"CO\",\n    cities: cityList.filter(city => city.country === \"CO\")\n  },\n  {\n    country: {\n      de: \"Ecuador\",\n      en: \"Ecuador\"\n    },\n    subdiv: [\n      {title: \"Azuay\"},\n      {title: \"Bolívar\"},\n      {title: \"Cañar\"},\n      {title: \"Carchi\"},\n      {title: \"Chimborazo\"},\n      {title: \"Cotopaxi\"},\n      {title: \"El Oro\"},\n      {title: \"Esmeraldas\"},\n      {title: \"Guayas\"},\n      {title: \"Imbabura\"},\n      {title: \"Loja\"},\n      {title: \"Los Ríos\"},\n      {title: \"Manabí\"},\n      {title: \"Morona Santiago\"},\n      {title: \"Napo\"},\n      {title: \"Orellana\"},\n      {title: \"Pastaza\"},\n      {title: \"Pichincha\"},\n      {title: \"Santa Elena\"},\n      {title: \"Santo Domingo de los Tsáchilas\"},\n      {title: \"Sucumbíos\"},\n      {title: \"Tungurahua\"},\n      {title: \"Zamora Chinchipe\"}\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"EC\",\n    cities: cityList.filter(city => city.country === \"CL\" && city.tz !== \"Pacific/Galapagos\")\n  },\n  {\n    country: {\n      de: \"Ecuador\",\n      en: \"Ecuador\"\n    },\n    subdiv: [\n      {title: \"Galápagos\"}\n    ],\n    zone: \"Etc/GMT+6\",\n    flag: \"EC\",\n    cities: cityList.filter(city => city.country === \"CL\" && city.tz === \"Pacific/Galapagos\")\n  },\n  {\n    country: {\n      de: \"Falklandinseln (Vereinigtes Königreich)\",\n      en: \"Falkland Islands (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"FK\",\n    cities: cityList.filter(city => city.country === \"FK\")\n  },\n  {\n    country: {\n      de: \"Französisch-Guayana (Frankreich)\",\n      en: \"French Guiana (France)\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"GF\",\n    cities: cityList.filter(city => city.country === \"GF\")\n  },\n  {\n    country: {\n      de: \"Guyana\",\n      en: \"Guyana\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"GY\",\n    cities: cityList.filter(city => city.country === \"GY\")\n  },\n  {\n    country: {\n      de: \"Paraguay\",\n      en: \"Paraguay\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"PY\",\n    cities: cityList.filter(city => city.country === \"PY\")\n  },\n  {\n    country: {\n      de: \"Peru\",\n      en: \"Peru\"\n    },\n    zone: \"Etc/GMT+5\",\n    flag: \"PE\",\n    cities: cityList.filter(city => city.country === \"PE\")\n  },\n  {\n    country: {\n      de: \"Südgeorgien und die Südlichen Sandwichinseln (Vereinigtes Königreich)\",\n      en: \"South Georgia and the South Sandwich Islands (United Kingdom)\"\n    },\n    zone: \"Etc/GMT+2\",\n    flag: \"GS\",\n    cities: cityList.filter(city => city.country === \"GS\")\n  },\n  {\n    country: {\n      de: \"Suriname\",\n      en: \"Suriname\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"SR\",\n    cities: cityList.filter(city => city.country === \"SR\")\n  },\n  {\n    country: {\n      de: \"Uruguay\",\n      en: \"Uruguay\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"UY\",\n    cities: cityList.filter(city => city.country === \"UY\")\n  },\n  {\n    country: {\n      de: \"Venezuela\",\n      en: \"Venezuela\"\n    },\n    zone: \"Etc/GMT+4\",\n    flag: \"VE\",\n    cities: cityList.filter(city => city.country === \"VE\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Bangladesch\",\n      en: \"Bangladesh\"\n    },\n    zone: \"Etc/GMT-6\",\n    flag: \"BD\",\n    cities: cityList.filter(city => city.country === \"BD\")\n  },\n  {\n    country: {\n      de: \"Bhutan\",\n      en: \"Bhutan\"\n    },\n    zone: \"Etc/GMT-6\",\n    flag: \"BT\",\n    cities: cityList.filter(city => city.country === \"BT\")\n  },\n  {\n    country: {\n      de: \"Britisches Territorium im Indischen Ozean (Vereinigtes Territorium)\",\n      en: \"British Indian Ocean Territory (United Kingdom)\"\n    },\n    zone: \"Etc/GMT-5\",\n    flag: \"IO\",\n    cities: cityList.filter(city => city.country === \"IO\")\n  },\n  {\n    country: {\n      de: \"Kokosinseln (Australien)\",\n      en: \"Cocos Islands (Australia)\"\n    },\n    zone: \"Etc/GMT-6\",\n    flag: \"CC\",\n    cities: cityList.filter(city => city.country === \"CC\")\n  },\n  {\n    country: {\n      de: \"Indien\",\n      en: \"India\"\n    },\n    subdiv: [\n      {title: \"Andhra Pradesh\"}, // 02\n      {title: \"Chhattisgarh\"}, // 37\n      {title: \"Goa\"}, // 33\n      {title: \"Gujarat\"}, // 09\n      {title: \"Haryana\"}, // 10\n      {title: \"Himachal Pradesh\"}, // 11\n      {title: \"Karnataka\"}, // 19\n      {title: \"Kerala\"}, // 13\n      {title: \"Madhya Pradesh\"}, // 35\n      {title: \"Maharashtra\"}, // 16\n      {title: \"Punjab\"}, // 23\n      {title: \"Rajasthan\"}, // 24\n      {title: \"Tamil Nadu\"}, // 25\n      {title: \"Telangana\"}, // 40\n      {title: \"Uttarakhand\"}, // 39\n      {title: \"Uttar Pradesh\"}, // 36\n      {\n        title: {\n          de: \"Dadra und Nagar Haveli und Daman und Diu\",\n          en: \"Dadra and Nagar Haveli and Daman and Diu\"\n        }\n      }, // 52\n      {title: \"Delhi\"}, // 07\n      {\n        title: {\n          de: \"Jammu und Kaschmir\",\n          en: \"Jammu and Kashmir\"\n        }\n      }, // 12\n      {title: \"Ladakh\"}, // 41\n      {title: \"Lakshadweep\"}, // 14\n      {title: \"Puducherry\"}, // 22\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"IN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"IN\") {\n        switch(city.adminCode) {\n          case \"02\":\n          case \"07\":\n          case \"09\":\n          case \"10\":\n          case \"11\":\n          case \"12\":\n          case \"13\":\n          case \"14\":\n          case \"16\":\n          case \"19\":\n          case \"22\":\n          case \"23\":\n          case \"24\":\n          case \"25\":\n          case \"33\":\n          case \"35\":\n          case \"36\":\n          case \"37\":\n          case \"39\":\n          case \"40\":\n          case \"41\":\n          case \"52\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Indien\",\n      en: \"India\"\n    },\n    subdiv: [\n      {title: \"Arunachal Pradesh\"}, // 30\n      {title: \"Assam\"}, // 03\n      {title: \"Bihar\"}, // 34\n      {title: \"Jharkhand\"}, // 38\n      {title: \"Manipur\"}, // 17\n      {title: \"Meghalaya\"}, // 18\n      {title: \"Mizoram\"}, // 31\n      {title: \"Nagaland\"}, // 20\n      {title: \"Odisha\"}, // 21\n      {title: \"Sikkim\"}, // 29\n      {title: \"Tripura\"}, // 26\n      {\n        title: {\n          de: \"Westbengalen\",\n          en: \"West Bengal\"\n        }\n      }, // 28\n      {\n        title: {\n          de: \"Andamanen und Nikobaren\",\n          en: \"Andaman and Nicobar Islands\"\n        }\n      }, // 01\n      {title: \"Chandigarh\"}, // 05\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"IN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"IN\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"03\":\n          case \"05\":\n          case \"17\":\n          case \"18\":\n          case \"20\":\n          case \"21\":\n          case \"26\":\n          case \"28\":\n          case \"29\":\n          case \"30\":\n          case \"31\":\n          case \"34\":\n          case \"38\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Myanmar\",\n      en: \"Myanmar\"\n    },\n    utcOffset: 390,\n    flag: \"MM\",\n    cities: cityList.filter(city => city.country === \"MM\")\n  },\n  {\n    country: {\n      de: \"Nepal\",\n      en: \"Nepal\"\n    },\n    zone: \"Etc/GMT-5\",\n    flag: \"NP\",\n    cities: cityList.filter(city => city.country === \"NP\")\n  },\n  {\n    country: {\n      de: \"Malediven\",\n      en: \"Maldives\"\n    },\n    zone: \"Etc/GMT-5\",\n    flag: \"MV\",\n    cities: cityList.filter(city => city.country === \"MV\")\n  },\n  {\n    country: {\n      de: \"Pakistan\",\n      en: \"Pakistan\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Belutschistan\",\n          en: \"Balochistan\"\n        }\n      }, // 02\n    ],\n    zone: \"Etc/GMT-4\",\n    flag: \"PK\",\n    cities: cityList.filter(city => city.country === \"PK\" && city.adminCode === \"02\")\n  },\n  {\n    country: {\n      de: \"Pakistan\",\n      en: \"Pakistan\"\n    },\n    subdiv: [\n      {\n        title: {\n          de: \"Asad Jammu und Kaschmir\",\n          en: \"Azad Jammu and Kashmir\"\n        }\n      }, // 06\n      {title: \"Gilgit-Baltistan\"}, // 07\n      {\n        title: {\n          de: \"Hauptstadtterritorium Islamabad\",\n          en: \"Islamabad Capital Territory\"\n        }\n      }, // 08\n      {title: \"Khyber Pakhtunkhwa\"}, // 03\n      {title: \"Punjab\"}, // 04\n      {title: \"Sindh\"}, // 05\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"PK\",\n    cities: cityList.filter(city => {\n      if(city.country === \"PK\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"04\":\n          case \"05\":\n          case \"06\":\n          case \"07\":\n          case \"08\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Sri Lanka\",\n      en: \"Sri Lanka\"\n    },\n    zone: \"Etc/GMT-5\",\n    flag: \"LK\",\n    cities: cityList.filter(city => city.country === \"LK\")\n  }\n]\n\nexport default countryList\n","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Brunei\",\n      en: \"Brunei\"\n    },\n    zone: \"Etc/GMT-8\",\n    flag: \"BN\",\n    cities: cityList.filter(city => city.country === \"BN\")\n  },\n  {\n    country: {\n      de: \"Kambodscha\",\n      en: \"Cambodia\"\n    },\n    zone: \"Etc/GMT-7\",\n    flag: \"KH\",\n    cities: cityList.filter(city => city.country === \"KH\")\n  },\n  {\n    country: {\n      de: \"Weihnachtsinsel (Australien)\",\n      en: \"Christmas Island (Australia)\"\n    },\n    zone: \"Etc/GMT-7\",\n    flag: \"CX\",\n    cities: cityList.filter(city => city.country === \"CX\")\n  },\n  {\n    country: {\n      de: \"Laos\",\n      en: \"Laos\"\n    },\n    zone: \"Etc/GMT-7\",\n    flag: \"LA\",\n    cities: cityList.filter(city => city.country === \"LA\")\n  },\n  {\n    country: {\n      de: \"Malaysia\",\n      en: \"Malaysia\"\n    },\n    subdiv: [\n      {title: \"Johor\"}, // 01\n      {title: \"Kedah\"}, // 02\n      {title: \"Kelantan\"}, // 03\n      {title: \"Kuala Lumpur\"}, // 14\n      {title: \"Malacca\"}, // 04\n      {title: \"Negeri Sembilan\"}, // 05\n      {title: \"Pahang\"}, // 06\n      {title: \"Penang\"}, // 09\n      {title: \"Perak\"}, // 07\n      {title: \"Perlis\"}, // 08\n      {title: \"Putrajaya\"}, // 17\n      {title: \"Selangor\"}, // 12\n      {title: \"Terengganu\"}, // 13\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"MY\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MY\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"02\":\n          case \"03\":\n          case \"04\":\n          case \"05\":\n          case \"06\":\n          case \"07\":\n          case \"08\":\n          case \"09\":\n          case \"12\":\n          case \"13\":\n          case \"14\":\n          case \"17\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Malaysia\",\n      en: \"Malaysia\"\n    },\n    subdiv: [\n      {title: \"Labuan\"}, // 15\n      {title: \"Sabah\"},  // 16\n      {title: \"Sarawak\"} // 11\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"MY\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MY\") {\n        switch(city.adminCode) {\n          case \"11\":\n          case \"15\":\n          case \"16\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Philippinen\",\n      en: \"Philippines\"\n    },\n    zone: \"Etc/GMT-8\",\n    flag: \"PH\",\n    cities: cityList.filter(city => city.country === \"PH\")\n  },\n  {\n    country: {\n      de: \"Singapur\",\n      en: \"Singapore\"\n    },\n    zone: \"Etc/GMT-7\",\n    flag: \"SG\",\n    cities: cityList.filter(city => city.country === \"SG\")\n  },\n  {\n    country: {\n      de: \"Thailand\",\n      en: \"Thailand\"\n    },\n    zone: \"Etc/GMT-7\",\n    flag: \"TH\",\n    cities: cityList.filter(city => city.country === \"TH\")\n  },\n  {\n    country: {\n      de: \"Osttimor\",\n      en: \"Timor-Leste\"\n    },\n    zone: \"Etc/GMT-8\",\n    flag: \"TL\",\n    cities: cityList.filter(city => city.country === \"TL\")\n  },\n  {\n    country: {\n      de: \"Vietnam\",\n      en: \"Vietnam\"\n    },\n    zone: \"Etc/GMT-7\",\n    flag: \"VN\",\n    cities: cityList.filter(city => city.country === \"VN\")\n  }\n]\n\nexport default countryList","import cityList from \"./cityList\"\n\nconst countryList = [\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\"\n    },\n    subdiv: [\n      {\n        title: \"Alaska\", \n        extra: {\n          de: \"(westlich von 172.5° W)\",\n          en: \"(west of 172.5° W)\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT+12\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AK\":\n            if(city.lon < -172.5) return true\n            if(city.lon >= 172.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\"\n    },\n    subdiv: [\n      {title: \"Alaska\", extra: \"(172.5° W – 157.5° W)\"},\n    ],\n    zone: \"Etc/GMT+11\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AK\":\n            if(city.lon >= -172.5 && city.lon < -157.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\"\n    },\n    subdiv: [\n      {title: \"Alaska\", extra: \"(157.5° W – 142.5° W)\"},\n    ],\n    zone: \"Etc/GMT+10\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AK\":\n            if(city.lon >= -157.5 && city.lon < -142.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\"\n    },\n    subdiv: [\n      {\n        title: \"Alaska\", \n        extra: {\n          de: \"(östlich von 142.5° W)\",\n          en: \"(east of 142.5° W)\"\n        }\n      },\n    ],\n    zone: \"Etc/GMT+9\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AK\":\n            if(city.lon >= -142.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\"\n    },\n    subdiv: [\n      {title: \"California\"},\n      {title: \"Idaho\"},\n      {title: \"Nevada\"},\n      {title: \"Oregon\"},\n      {title: \"Washington\"},\n    ],\n    zone: \"Etc/GMT+8\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"CA\":\n          case \"ID\":\n          case \"NV\":\n          case \"OR\":\n          case \"WA\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\"\n    },\n    subdiv: [\n      {title: \"Arizona\"},\n      {title: \"Colorado\"},\n      {title: \"Kansas\"},\n      {title: \"Montana\"},\n      {title: \"Nebraska\"},\n      {title: \"New Mexico\"},\n      {title: \"North Dakota\"},\n      {title: \"Oklahoma\"},\n      {title: \"South Dakota\"},\n      {title: \"Texas\"},\n      {title: \"Utah\"},\n      {title: \"Wyoming\"},\n    ],\n    zone: \"Etc/GMT+7\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AZ\":\n          case \"CO\":\n          case \"KS\":\n          case \"MT\":\n          case \"NE\":\n          case \"NM\":\n          case \"ND\":\n          case \"OK\":\n          case \"SD\":\n          case \"TX\":\n          case \"UT\":\n          case \"WY\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\"\n    },\n    subdiv: [\n      {title: \"Alabama\"},\n      {title: \"Arkansas\"},\n      {\n        title: \"Florida\", \n        extra: {\n          de: \"(westlicher Zipfel)\",\n          en: \"(panhandle)\"\n        }\n      },\n      {title: \"Illinois\"},\n      {title: \"Indiana\"},\n      {title: \"Iowa\"},\n      {title: \"Kentucky\"},\n      {title: \"Louisiana\"},\n      {title: \"Michigan\"},\n      {title: \"Minnesota\"},\n      {title: \"Mississippi\"},\n      {title: \"Missouri\"},\n      {title: \"Tennessee\"},\n      {title: \"Wisconsin\"},\n    ],\n    zone: \"Etc/GMT+6\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AL\":\n          case \"AR\":\n          case \"IL\":\n          case \"IN\":\n          case \"IA\":\n          case \"KY\":\n          case \"LA\":\n          case \"MI\":\n          case \"MN\":\n          case \"MS\":\n          case \"MO\":\n          case \"TN\":\n          case \"WI\":\n            return true\n          case \"FL\":\n            if(city.lon < -84) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: {\n      de: \"Vereinigte Staaten\",\n      en: \"United States\"\n    },\n    subdiv: [\n      {title: \"Connecticut\"},\n      {title: \"Delaware\"}, \n      {title: \"District of Columbia\"}, \n      {\n        title: \"Florida\", \n        extra: {\n          de: \"(Hauptteil)\",\n          en: \"(except panhandle)\"\n        }\n      },\n      {title: \"Georgia\"},\n      {title: \"Maine\"},\n      {title: \"Maryland\"},\n      {title: \"Massachusetts\"},\n      {title: \"New Hampshire\"},\n      {title: \"New Jersey\"},\n      {title: \"New York\"},\n      {title: \"North Carolina\"},\n      {title: \"Ohio\"},\n      {title: \"Pennsylvania\"},\n      {title: \"Rhode Island\"},\n      {title: \"South Carolina\"},\n      {title: \"Vermont\"},\n      {title: \"Virginia\"},\n      {title: \"West Virginia\"},\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"CT\":\n          case \"DE\":\n          case \"DC\":\n          case \"GE\":\n          case \"ME\":\n          case \"MD\":\n          case \"MA\":\n          case \"NH\":\n          case \"NJ\":\n          case \"NY\":\n          case \"NC\":\n          case \"OH\":\n          case \"PA\":\n          case \"RI\":\n          case \"SC\":\n          case \"VT\":\n          case \"VA\":\n          case \"WV\":\n            return true\n          case \"FL\":\n            if(city.lon >= -84) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n]\n\nexport default countryList","import Africa from \"./timezones-ideal/Africa\"\nimport Antarctica from \"./timezones-ideal/Antarctica\"\nimport Australia from \"./timezones-ideal/Australia\"\nimport Canada from \"./timezones-ideal/Canada\"\nimport Caribbean from \"./timezones-ideal/Caribbean\"\nimport CentralAmerica from \"./timezones-ideal/CentralAmerica\"\nimport CentralAsia from \"./timezones-ideal/CentralAsia\"\nimport EastAsia from \"./timezones-ideal/EastAsia\"\nimport Europe from \"./timezones-ideal/Europe\"\nimport Indonesia from \"./timezones-ideal/Indonesia\"\nimport MiddleEast from \"./timezones-ideal/MiddleEast\"\nimport Oceania from \"./timezones-ideal/Oceania\"\nimport Russia from \"./timezones-ideal/Russia\"\nimport SouthAmerica from \"./timezones-ideal/SouthAmerica\"\nimport SouthAsia from \"./timezones-ideal/SouthAsia\"\nimport SouthEastAsia from \"./timezones-ideal/SouthEastAsia\"\nimport UnitedStates from \"./timezones-ideal/UnitedStates\"\n\nconst tzlist = [\n  ...Africa, \n  ...Antarctica,\n  ...Australia,\n  ...Canada,\n  ...Caribbean,\n  ...CentralAmerica,\n  ...CentralAsia, \n  ...EastAsia, \n  ...Europe, \n  ...Indonesia,\n  ...MiddleEast,\n  ...Oceania, \n  ...Russia, \n  ...SouthAmerica,\n  ...SouthAsia,\n  ...SouthEastAsia,\n  ...UnitedStates\n]\n\nexport default tzlist","import React, { useEffect, lazy } from \"react\";\nimport { useDebugState } from \"use-named-state\";\nimport moment from \"moment-timezone\"\nimport timezonesRaw from \"../components/data-ideal\"\nimport \"../styles/App.css\";\nimport { getPermLocale } from \"../components/getLocale\";\nconst Clock = lazy(() => import(\"../components/Clock\"))\n/* eslint-disable react-hooks/exhaustive-deps */\n\nexport default function Ideal() {\n  const [allStates] = useDebugState(\"allStates\", timezonesRaw)\n  const [filtVal, setFiltVal] = useDebugState(\"filterValue\",\"\")\n  const [timezones, setTimezones] = useDebugState(\"timezones\",null)\n  const prepareZones = (filterVal) => {\n    const unsortedStates = allStates.map(tz => {\n      const Now = moment().utc().format(\"x\")\n      const {country, zone, flag, subdiv, utcOffset = undefined, cities = [] } = tz \n      if (utcOffset) {\n        const prefix = utcOffset < 0 ? \"-\" : \"+\"\n        const hours = Math.floor(Math.abs(utcOffset)/60)\n        const formattedHours = hours < 10 ? `0${hours}` : `${hours}`\n        const minutes = Math.abs(utcOffset) - (60 * hours)\n        const formattedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`\n        const offset = `${prefix}${formattedHours}:${formattedMinutes}`\n        const numericOffset = utcOffset\n        return { country, zone: null, flag, offset, numericOffset, subdiv, cities }\n      }\n      const offset = moment().tz(zone).format(\"Z\")\n      const numericOffset = -1 * moment.tz.zone(zone).utcOffset(Now)\n      return { country, zone, flag, offset, numericOffset, subdiv, cities }\n    })\n    const sortedStates = unsortedStates.sort((a,b) => (a.numericOffset - b.numericOffset))\n    const timezoneObject = sortedStates.reduce((acc, curr) => {\n      const obj = {...acc}\n      const { flag: code, offset, country: title, zone, numericOffset, subdiv = [], cities = [] } = curr\n      const city = \"UTC\" + offset\n      const flag = { code, title, subdiv }\n      if (obj.hasOwnProperty(city)) {\n        obj[city].flags.push(flag)\n        obj[city].cities = obj[city].cities.concat(cities)\n      } else {\n        obj[city] = { city, numericOffset, zone, flags: [flag], cities }\n      }\n      return obj\n    }, {})\n    const timezoneArray = Object.values(timezoneObject).sort((a,b) => (a.numericOffset - b.numericOffset))\n    const filterValue = filterVal != null ? filterVal : filtVal\n    const filteredStates = filterValue !== \"\"  ? timezoneArray.filter(tz => {\n      const { flags, cities } = tz\n      const filteredFlags = flags.filter(flag => {\n        const { title: country, subdiv = [] } = flag\n        const title = subdiv.length > 0 ? `${country}: ${subdiv.map(item => item.title).join(\", \")}` : country\n        if(filterValue !== \"\"){\n          if(title.toLowerCase().includes(filterValue.toLowerCase())) return true\n          return false\n        }\n        return true\n      })\n      if(filteredFlags.length > 0) return true\n      const filteredCities = cities.filter(city => city.asciiname.toLowerCase().includes(filterValue.toLowerCase()))\n      if(filteredCities.length > 0) return true\n      return false\n    }) : timezoneArray\n    setTimezones(filteredStates)\n  }\n  useEffect(() => {\n    prepareZones()\n    setInterval(1000,prepareZones)\n  }, [])\n  return (\n    <div className=\"app\">\n      <div style={{ textAlign: \"center\", marginBottom: \"24px\", marginTop: \"24px\" }}>\n        <input type=\"text\" placeholder={getPermLocale(\"FilterCountries\")} onChange={(e) => {\n          setFiltVal(e.target.value)\n          prepareZones(e.target.value)\n          }} />\n      </div>\n      <div className=\"row album sk-album\"> \n      {timezones && timezones.length > 0 && timezones.map((time, index) => <Clock key={index} flags={time.flags} city={time.city} zone={time.zone} offset={time.numericOffset} cities={time.cities} />)}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}
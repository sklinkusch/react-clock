{"version":3,"file":"static/js/177.da6641d0.chunk.js","mappings":"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","sources":["pages/Ideal.js"],"sourcesContent":["import React, { useEffect, lazy } from \"react\";\nimport { useDebugState } from \"use-named-state\";\nimport \"../styles/App.css\";\nimport moment from 'moment-timezone';\nimport { getPermLocale } from \"../components/getLocale\";\nconst Clock = lazy(() => import(\"../components/Clock\"))\n/* eslint-disable react-hooks/exhaustive-deps */\n\nexport default function Ideal() {\n  const [lang, setLang] = useDebugState(\"lang\", \"\")\n  const [allTz, setAllTz] = useDebugState(\"allTz\", [])\n  const [filtVal, setFiltVal] = useDebugState(\"filterValue\", \"\")\n  const [timezones, setTimezones] = useDebugState(\"timezones\", [])\n  const fetchData = (currentLanguage) => {\n    fetch(`https://worldtime-api.vercel.app/ideal?lang=${currentLanguage}`)\n    .then(response => response.json())\n    .then(data => {\n      setAllTz(data)\n      prepareZones(data, filtVal, currentLanguage)\n      setInterval(1000, () => prepareZones(allTz, filtVal, currentLanguage))\n    })\n    .catch(error => console.error(error))\n  } \n  const prepareZones = (data, filterVal = \"\", currentLanguage) => {\n    const myData = data ? data : allTz\n    const unsortedStates = myData.map(tz => {\n      const {country, flag, subdiv = [], cities = [], zone = null, utcOffset = null } = tz\n      const Now = moment().utc().format(\"x\")\n      const offset = zone ? moment().tz(zone).format(\"Z\") : -1 * utcOffset\n      const numericOffset = zone ? -1 * moment.tz.zone(zone).utcOffset(Now) : utcOffset\n      return { country, flag, offset, zone, numericOffset, subdiv, cities }\n    })\n    const sortedStates = unsortedStates.sort((a,b) => (a.numericOffset - b.numericOffset))\n    const timezoneObject = sortedStates.reduce((acc, curr) => {\n      const obj = {...acc}\n      const { flag: code, offset, country: title, numericOffset, subdiv = [], cities = [] } = curr\n      const city = numericOffset === 0 ? \"UTCÂ±00:00\" : \"UTC\" + offset\n      const flag = { code, title, subdiv }\n      if (obj.hasOwnProperty(city)) {\n        obj[city].flags.push(flag)\n        obj[city].cities = obj[city].cities.concat(cities)\n      } else {\n        obj[city] = { city, numericOffset, flags: [flag], cities }\n      }\n      return obj\n    }, {})\n    const timezoneArray = Object.values(timezoneObject).sort((a,b) => (a.numericOffset - b.numericOffset))\n    const filterValue = filterVal ? filterVal : filtVal\n    const filteredStates = filterValue !== \"\"  ? timezoneArray.filter(tz => {\n      const { flags, cities } = tz\n      const filteredFlags = flags.filter(flag => {\n        const { title: country, subdiv = [] } = flag\n        const title = subdiv.length > 0 ? `${country}: ${subdiv.map(item => item.title).join(\", \")}` : country\n        if(filterValue !== \"\"){\n          if(title.toLowerCase().includes(filterValue.toLowerCase())) return true\n          return false\n        }\n        return true\n      })\n      if(filteredFlags.length > 0) return true\n      const filteredCities = cities.filter(city => city.asciiname.toLowerCase().includes(filterValue.toLowerCase()))\n      if(filteredCities.length > 0) return true\n      return false\n    }) : timezoneArray\n    setTimezones(filteredStates)\n  }\n  useEffect(() => {\n    const currentLanguage = window.navigator.language.substring(0,2).toLowerCase()\n    setLang(currentLanguage)\n    fetchData(currentLanguage)\n  }, [])\n  return (\n    <div className=\"app\">\n      <div style={{ textAlign: \"center\", marginBottom: \"24px\", marginTop: \"24px\" }}>\n        <input type=\"text\" placeholder={getPermLocale(\"FilterCountries\")} onChange={(e) => {\n          setFiltVal(e.target.value)\n          prepareZones(allTz, e.target.value, lang)\n          }} />\n      </div>\n      <div className=\"row album sk-album\"> \n      {timezones && timezones.length > 0 && timezones.map((time, index) => <Clock key={index} flags={time.flags} city={time.city} zone={time.zone} offset={time.numericOffset} cities={time.cities} />)}\n      </div>\n    </div>\n  );\n}\n"],"names":["Clock","lazy","Ideal","useDebugState","lang","setLang","allTz","setAllTz","filtVal","setFiltVal","timezones","setTimezones","prepareZones","data","filterVal","myData","unsortedStates","map","tz","country","flag","subdiv","cities","zone","utcOffset","Now","moment","utc","format","offset","numericOffset","sortedStates","sort","a","b","timezoneObject","reduce","acc","curr","obj","code","title","city","hasOwnProperty","flags","push","concat","timezoneArray","Object","values","filterValue","filteredStates","filter","length","item","join","toLowerCase","includes","asciiname","useEffect","currentLanguage","window","navigator","language","substring","fetch","then","response","json","setInterval","catch","error","console","fetchData","className","style","textAlign","marginBottom","marginTop","type","placeholder","getPermLocale","onChange","e","target","value","time","index"],"sourceRoot":""}
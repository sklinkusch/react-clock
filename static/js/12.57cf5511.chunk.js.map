{"version":3,"sources":["components/timezones-ideal/cityList.js","components/timezones-ideal/Africa.js","components/timezones-ideal/Antarctica.js","components/timezones-ideal/Australia.js","components/timezones-ideal/Canada.js","components/timezones-ideal/Caribbean.js","components/timezones-ideal/CentralAmerica.js","components/timezones-ideal/CentralAsia.js","components/timezones-ideal/EastAsia.js","components/timezones-ideal/Europe.js","components/timezones-ideal/Indonesia.js","components/timezones-ideal/MiddleEast.js","components/timezones-ideal/Oceania.js","components/timezones-ideal/Russia.js","components/timezones-ideal/SouthAmerica.js","components/timezones-ideal/SouthAsia.js","components/timezones-ideal/SouthEastAsia.js","components/timezones-ideal/UnitedStates.js","components/data-ideal.js","pages/Ideal.js"],"names":["cityList","Africa","country","zone","flag","cities","filter","city","subdiv","title","includes","adminCode","Antarctica","tz","Australia","Canada","extra","lon","Caribbean","CentralAmerica","CentralAsia","EastAsia","Europe","Indonesia","MiddleEast","utcOffset","Oceania","Russia","SouthAmerica","SouthAsia","SouthEastAsia","UnitedStates","data_ideal","concat","Object","toConsumableArray","Clock","lazy","__webpack_require__","e","then","bind","pad","num","getOffset","number","sign","offset","Math","abs","hours","floor","minutes","Ideal","_useDebugState","useDebugState","timezonesRaw","allStates","slicedToArray","_useDebugState3","_useDebugState4","filtVal","setFiltVal","_useDebugState5","_useDebugState6","timezones","setTimezones","prepareZones","filterVal","timezoneObject","map","_tz$utcOffset","undefined","_tz$cities","prefix","formattedHours","formattedMinutes","numericOffset","timezone","findTimeZone","getZonedTime","Date","now","sort","a","b","reduce","acc","curr","obj","objectSpread","code","_curr$subdiv","_curr$cities","hasOwnProperty","flags","push","timezoneArray","values","filterValue","filteredStates","_flag$subdiv","length","item","join","toLowerCase","asciiname","useEffect","setInterval","react_default","createElement","className","style","textAlign","marginBottom","marginTop","type","placeholder","onChange","target","value","time","index","key"],"mappings":"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,QAAS,OACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,YACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,QACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,eACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,QACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,SACR,CAACA,MAAO,kBACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,UACR,CAACA,MAAO,WACR,CAACA,MAAO,SACR,CAACA,MAAO,kBACR,CAACA,MAAO,eACR,CAACA,MAAO,WACR,CAACA,MAAO,QACR,CAACA,MAAO,UACR,CAACA,MAAO,SACR,CAACA,MAAO,gBACR,CAACA,MAAO,wBACR,CAACA,MAAO,YACR,CAACA,MAAO,WACR,CAACA,MAAO,YACR,CAACA,MAAO,UACR,CAACA,MAAO,kBACR,CAACA,MAAO,SACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,iBACR,CAACA,MAAO,cACR,CAACA,MAAO,sBACR,CAACA,MAAO,cACR,CAACA,MAAO,WACR,CAACA,MAAO,aACR,CAACA,MAAO,WACR,CAACA,MAAO,uBACR,CAACA,MAAO,mBACR,CAACA,MAAO,sBACR,CAACA,MAAO,WACR,CAACA,MAAO,SACR,CAACA,MAAO,cACR,CAACA,MAAO,UACR,CAACA,MAAO,cACR,CAACA,MAAO,iBACR,CAACA,MAAO,cACR,CAACA,MAAO,YACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,SACR,CAACA,MAAO,SACR,CAACA,MAAO,iBACR,CAACA,MAAO,SACR,CAACA,MAAO,aACR,CAACA,MAAO,UACR,CAACA,MAAO,UACR,CAACA,MAAO,cAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjb,OAAO,KAGX,CACET,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,iBACR,CAACA,MAAO,kBACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,UACR,CAACA,MAAO,WACR,CAACA,MAAO,aACR,CAACA,MAAO,UACR,CAACA,MAAO,mBACR,CAACA,MAAO,oBACR,CAACA,MAAO,YACR,CAACA,MAAO,WACR,CAACA,MAAO,aACR,CAACA,MAAO,WACR,CAACA,MAAO,wBACR,CAACA,MAAO,WACR,CAACA,MAAO,mBACR,CAACA,MAAO,QACR,CAACA,MAAO,SACR,CAACA,MAAO,WACR,CAACA,MAAO,UACR,CAACA,MAAO,YACR,CAACA,MAAO,QACR,CAACA,MAAO,QACR,CAACA,MAAO,uBACR,CAACA,MAAO,SACR,CAACA,MAAO,oBACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,QAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,QACE,OAAO,EAGb,OAAO,KAGX,CACET,QAAS,uBACTuB,UAAW,IACXrB,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAA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,gBACR,CAACA,MAAO,mBACR,CAACA,MAAO,eACR,CAACA,MAAO,gBAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,QACE,OAAO,EAGb,OAAO,KAGX,CACET,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,UACR,CAACA,MAAO,UACR,CAACA,MAAO,YACR,CAACA,MAAO,aACR,CAACA,MAAO,YACR,CAACA,MAAO,cACR,CAACA,MAAO,sBACR,CAACA,MAAO,YACR,CAACA,MAAO,uBACR,CAACA,MAAO,WACR,CAACA,MAAO,YACR,CAACA,MAAO,wBACR,CAACA,MAAO,aACR,CAACA,MAAO,YACR,CAACA,MAAO,oBACR,CAACA,MAAO,oBACR,CAACA,MAAO,sBACR,CAACA,MAAO,oBACR,CAACA,MAAO,kBACR,CAACA,MAAO,gBACR,CAACA,MAAO,mBACR,CAACA,MAAO,kBACR,CAACA,MAAO,iBACR,CAACA,MAAO,2BACR,CAACA,MAAO,gBACR,CAACA,MAAO,iBACR,CAACA,MAAO,iBACR,CAACA,MAAO,iBACR,CAACA,MAAO,kBACR,CAACA,MAAO,iBACR,CAACA,MAAO,oBACR,CAACA,MAAO,mBACR,CAACA,MAAO,oBACR,CAACA,MAAO,kBACR,CAACA,MAAO,mBACR,CAACA,MAAO,oBACR,CAACA,MAAO,0BAA2BO,MAAO,yBAE5Cb,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,IAAK,KACH,OAAGJ,EAAKU,IAAM,KAEhB,QACE,OAAO,EAGb,OAAO,KAGX,CACEf,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,iBACR,CAACA,MAAO,QACR,CAACA,MAAO,eACR,CAACA,MAAO,sBACR,CAACA,MAAO,iBACR,CAACA,MAAO,mBACR,CAACA,MAAO,qBACR,CAACA,MAAO,0BAA2BO,MAAO,yBAE5Cb,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,IAAK,KACH,OAAGJ,EAAKU,KAAO,KAEjB,QACE,OAAO,EAGb,OAAO,KAGX,CACEf,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,gBACR,CAACA,MAAO,sBACR,CAACA,MAAO,eACR,CAACA,MAAO,iBACR,CAACA,MAAO,iCACR,CAACA,MAAO,mCAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,QACE,OAAO,EAGb,OAAO,KAGX,CACET,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,kBACR,CAACA,MAAO,aACR,CAACA,MAAO,iBACR,CAACA,MAAO,qBAAsBO,MAAO,wBACrC,CAACP,MAAO,mBACR,CAACA,MAAO,iBAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,IAAK,KACH,OAAGJ,EAAKU,IAAM,KAEhB,QACE,OAAO,EAGb,OAAO,KAGX,CACEf,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,YACR,CAACA,MAAO,QAASO,MAAO,yBACxB,CAACP,MAAO,qBAAsBO,MAAO,uBACrC,CAACP,MAAO,iBAAkBO,MAAO,0BAEnCb,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACH,OAAO,EACT,IAAK,KACH,OAAGJ,EAAKU,KAAO,KAEjB,IAAK,KACL,IAAK,KACH,OAAGV,EAAKU,IAAM,MAEhB,QACE,OAAO,EAGb,OAAO,KAGX,CACEf,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,QAASO,MAAO,oCACxB,CAACP,MAAO,eACR,CAACA,MAAO,iBAAkBO,MAAO,yBACjC,CAACP,MAAO,qBAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACH,OAAO,EACT,IAAK,KACH,OAAGJ,EAAKU,KAAO,MAEjB,IAAK,KACH,OAAGV,EAAKU,KAAO,OAASV,EAAKU,IAAM,MAErC,QACE,OAAO,EAGb,OAAO,KAGX,CACEf,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,QAASO,MAAO,mCACxB,CAACP,MAAO,qBACR,CAACA,MAAO,kBACR,CAACA,MAAO,mBACR,CAACA,MAAO,6BAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,IAAK,KACH,OAAGJ,EAAKU,KAAO,OAASV,EAAKU,IAAM,MAErC,QACE,OAAO,EAGb,OAAO,KAGX,CACEf,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,QAASO,MAAO,yBACxB,CAACP,MAAO,iBAAkBO,MAAO,0BAEnCb,KAAM,aACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACH,OAAGJ,EAAKU,IAAM,MAEhB,IAAK,KACH,OAAGV,EAAKU,KAAO,MAEjB,QACE,OAAO,EAGb,OAAO,KAGX,CACEf,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,iBAAkBO,MAAO,yBACjC,CAACP,MAAO,aACR,CAACA,MAAO,4BAA6BO,MAAO,0BAE9Cb,KAAM,aACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACH,OAAO,EACT,IAAK,KACH,OAAGJ,EAAKU,IAAM,MAEhB,IAAK,KACH,OAAGV,EAAKU,KAAO,MAEjB,QACE,OAAO,EAGb,OAAO,KAGX,CACEf,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,4BAA6BO,MAAO,0BAE9Cb,KAAM,aACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,SAAuC,OAAnBK,EAAKI,WAAsBJ,EAAKU,KAAO,UCpYrFW,EAAA,CACb,CACE1B,QAAS,YACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,UACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,QACR,CAACA,MAAO,WAAYO,MAAO,mBAE7Bb,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACH,OAAO,EACT,IAAK,KACH,OAAGJ,EAAKU,KAAO,KAEjB,QACE,OAAO,EAGb,OAAO,KAGX,CACEf,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,WAAYO,MAAO,kBAC3B,CAACP,MAAO,eACR,CAACA,MAAO,sBACR,CAACA,MAAO,UAAQO,MAAO,wBACvB,CAACP,MAAO,qBACR,CAACA,MAAO,eACR,CAACA,MAAO,YAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,IAAK,KACH,OAAGJ,EAAKU,MAAQ,KAElB,IAAK,KACH,OAAGV,EAAKU,KAAO,KAEjB,QACE,OAAO,EAGb,OAAO,KAGX,CACEf,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,YACR,CAACA,MAAO,SACR,CAACA,MAAO,YACR,CAACA,MAAO,oBACR,CAACA,MAAO,qBACR,CAACA,MAAO,YACR,CAACA,MAAO,eACR,CAACA,MAAO,gBACR,CAACA,MAAO,UAAQO,MAAO,wBACvB,CAACP,MAAO,aACR,CAACA,MAAO,cACR,CAACA,MAAO,YACR,CAACA,MAAO,kBACR,CAACA,MAAO,kBACR,CAACA,MAAO,gBACR,CAACA,MAAO,cAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,IAAK,KACH,OAAGJ,EAAKU,MAAQ,KAElB,QACE,OAAO,EAGb,OAAO,KAGX,CACEf,QAAS,SACTM,OAAQ,CACN,CAACC,MAAO,WACR,CAACA,MAAO,uBACR,CAACA,MAAO,cACR,CAACA,MAAO,uBACR,CAACA,MAAO,WACR,CAACA,MAAO,cAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QAAkB,CACxB,GAAe,oBAAZK,EAAKM,GAA0B,OAAO,EACzC,OAAON,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,QACE,OAAO,GAGb,OAAO,KAGX,CACET,QAAS,QACTM,OAAQ,CACN,CAACC,MAAO,kBAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,SAAgC,mBAAZK,EAAKM,MAEhE,CACEX,QAAS,QACTM,OAAQ,CACN,CAACC,MAAO,YACR,CAACA,MAAO,eACR,CAACA,MAAO,gBACR,CAACA,MAAO,wBACR,CAACA,MAAO,WACR,CAACA,MAAO,aACR,CAACA,MAAO,YACR,CAACA,MAAO,aACR,CAACA,MAAO,eACR,CAACA,MAAO,8CACR,CAACA,MAAO,SACR,CAACA,MAAO,YACR,CAACA,MAAO,+CACR,CAACA,MAAO,YACR,CAACA,MAAO,eACR,CAACA,MAAO,gBAAcO,MAAO,uBAE/Bb,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,SAAgC,mBAAZK,EAAKM,MAEhE,CACEX,QAAS,WACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,UACTM,OAAQ,CACN,CAACC,MAAO,SACR,CAACA,MAAO,cACR,CAACA,MAAO,YACR,CAACA,MAAO,UACR,CAACA,MAAO,cACR,CAACA,MAAO,YACR,CAACA,MAAO,UACR,CAACA,MAAO,cACR,CAACA,MAAO,UACR,CAACA,MAAO,YACR,CAACA,MAAO,QACR,CAACA,MAAO,eACR,CAACA,MAAO,aACR,CAACA,MAAO,mBACR,CAACA,MAAO,QACR,CAACA,MAAO,YACR,CAACA,MAAO,WACR,CAACA,MAAO,aACR,CAACA,MAAO,eACR,CAACA,MAAO,qCACR,CAACA,MAAO,gBACR,CAACA,MAAO,cACR,CAACA,MAAO,qBAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,SAAgC,sBAAZK,EAAKM,MAEhE,CACEX,QAAS,UACTM,OAAQ,CACN,CAACC,MAAO,iBAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,SAAgC,sBAAZK,EAAKM,MAEhE,CACEX,QAAS,oCACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,yBACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,SACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,WACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,OACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,gEACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,WACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,UACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,YACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,YCzR1B2B,EAAA,CACb,CACE3B,QAAS,aACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,SACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,kDACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,4BACTC,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GAAI,MAAqB,OAAjBA,EAAKL,WAEvC,CACEA,QAAS,QACTM,OAAQ,CACN,CAACC,MAAO,kBACR,CAACA,MAAO,gBACR,CAACA,MAAO,OACR,CAACA,MAAO,WACR,CAACA,MAAO,WACR,CAACA,MAAO,oBACR,CAACA,MAAO,aACR,CAACA,MAAO,UACR,CAACA,MAAO,kBACR,CAACA,MAAO,eACR,CAACA,MAAO,UACR,CAACA,MAAO,aACR,CAACA,MAAO,cACR,CAACA,MAAO,aACR,CAACA,MAAO,eACR,CAACA,MAAO,iBACR,CAACA,MAAO,2CACR,CAACA,MAAO,SACR,CAACA,MAAO,qBACR,CAACA,MAAO,UACR,CAACA,MAAO,eACR,CAACA,MAAO,eAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,QACE,OAAO,EAGb,OAAO,KAGX,CACET,QAAS,QACTM,OAAQ,CACN,CAACC,MAAO,qBACR,CAACA,MAAO,SACR,CAACA,MAAO,SACR,CAACA,MAAO,aACR,CAACA,MAAO,WACR,CAACA,MAAO,aACR,CAACA,MAAO,WACR,CAACA,MAAO,YACR,CAACA,MAAO,UACR,CAACA,MAAO,UACR,CAACA,MAAO,WACR,CAACA,MAAO,eACR,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AAS,2BACTM,OAAQ,CACN,CAACC,MAAO,cACR,CAACA,MAAO,SACR,CAACA,MAAO,UACR,CAACA,MAAO,UACR,CAACA,MAAO,eAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,QACE,OAAO,EAGb,OAAO,KAGX,CACET,QAAS,2BACTM,OAAQ,CACN,CAACC,MAAO,WACR,CAACA,MAAO,YACR,CAACA,MAAO,UACR,CAACA,MAAO,WACR,CAACA,MAAO,YACR,CAACA,MAAO,cACR,CAACA,MAAO,gBACR,CAACA,MAAO,YACR,CAACA,MAAO,gBACR,CAACA,MAAO,SACR,CAACA,MAAO,QACR,CAACA,MAAO,YAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACH,OAAO,EACT,QACE,OAAO,EAGb,OAAO,KAGX,CACET,QAAS,2BACTM,OAAQ,CACN,CAACC,MAAO,WACR,CAACA,MAAO,YACR,CAACA,MAAO,UAAWO,MAAO,eAC1B,CAACP,MAAO,YACR,CAACA,MAAO,WACR,CAACA,MAAO,QACR,CAACA,MAAO,YACR,CAACA,MAAO,aACR,CAACA,MAAO,YACR,CAACA,MAAO,aACR,CAACA,MAAO,eACR,CAACA,MAAO,YACR,CAACA,MAAO,aACR,CAACA,MAAO,cAEVN,KAAM,YACNC,KAAM,KACNC,OAAQL,EAASM,OAAO,SAAAC,GACtB,GAAoB,OAAjBA,EAAKL,QACN,OAAOK,EAAKI,WACV,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK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","file":"static/js/12.57cf5511.chunk.js","sourcesContent":["import cityList from \"../cities500K.json\"\n\nexport default cityList","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Algeria\",\n    zone: \"Etc/GMT+0\",\n    flag: \"DZ\",\n    cities: cityList.filter(city => city.country === \"DZ\")\n  },\n  {\n    country: \"Angola\",\n    zone: \"Etc/GMT-1\",\n    flag: \"AO\",\n    cities: cityList.filter(city => city.country === \"AO\")\n  },\n  {\n    country: \"Benin\",\n    zone: \"Etc/GMT+0\",\n    flag: \"BJ\",\n    cities: cityList.filter(city => city.country === \"BJ\")\n  },\n  {\n    country: \"Botswana\",\n    zone: \"Etc/GMT-2\",\n    flag: \"BW\",\n    cities: cityList.filter(city => city.country === \"BW\")\n  },\n  {\n    country: \"Burkina Faso\",\n    zone: \"Etc/GMT+0\",\n    flag: \"BF\",\n    cities: cityList.filter(city => city.country === \"BF\")\n  },\n  {\n    country: \"Burundi\",\n    zone: \"Etc/GMT-2\",\n    flag: \"BI\",\n    cities: cityList.filter(city => city.country === \"BI\")\n  },\n  {\n    country: \"Cabo Verde\",\n    zone: \"Etc/GMT+2\",\n    flag: \"CV\",\n    cities: cityList.filter(city => city.country === \"CV\")\n  },\n  {\n    country: \"Cameroon\",\n    zone: \"Etc/GMT-1\",\n    flag: \"CM\",\n    cities: cityList.filter(city => city.country === \"CM\")\n  },\n  {\n    country: \"Central African Republic\",\n    zone: \"Etc/GMT-1\",\n    flag: \"CF\",\n    cities: cityList.filter(city => city.country === \"CF\")\n  },\n  {\n    country: \"Chad\",\n    zone: \"Etc/GMT-1\",\n    flag: \"TD\",\n    cities: cityList.filter(city => city.country === \"TD\")\n  },\n  {\n    country: \"Comoros\",\n    zone: \"Etc/GMT-3\",\n    flag: \"KM\",\n    cities: cityList.filter(city => city.country === \"KM\")\n  },\n  {\n    country: \"Côte d'Ivoire\",\n    zone: \"Etc/GMT+0\",\n    flag: \"CI\",\n    cities: cityList.filter(city => city.country === \"CI\")\n  },\n  {\n    country: \"Democratic Republic of the Congo\",\n    subdiv: [\n      {title: \"Équateur\"}, // 02\n      {title: \"Kasaï\"}, // 18\n      {title: \"Kinshasa\"}, // 06\n      {title: \"Kongo Central\"}, // 08\n      {title: \"Kwango\"}, // 19\n      {title: \"Kwilu\"}, // 20\n      {title: \"Mai-Ndombe\"}, // 24\n      {title: \"Mongala\"}, // 25\n      {title: \"Nord-Ubangi\"}, // 26\n      {title: \"Sud-Ubangi\"}, // 28\n      {title: \"Tshuapa\"} // 31\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"CD\",\n    cities: cityList.filter(city => city.country === \"CD\" && [\"02\",\"06\",\"08\",\"18\",\"19\",\"20\",\"24\",\"25\",\"26\",\"28\",\"31\"].includes(city.adminCode))\n  },\n  {\n    country: \"Democratic Republic of the Congo\",\n    subdiv: [\n      {title: \"Bas-Uele\"}, // 13\n      {title: \"Haut-Katanga\"}, // 14 \n      {title: \"Haut-Lomami\"}, // 15\n      {title: \"Haut-Uele\"}, // 16\n      {title: \"Ituri\"}, // 17\n      {title: \"Kasaï-Central\"}, // 23\n      {title: \"Kasaï-Oriental\"}, // 04\n      {title: \"Lomami\"}, // 21\n      {title: \"Lualaba\"}, // 22\n      {title: \"Maniema\"}, // 10\n      {title: \"Nord-Kivu\"}, // 11\n      {title: \"Sankuru\"}, // 27\n      {title: \"Sud-Kivu\"}, // 12\n      {title: \"Tanganjika\"}, // 29\n      {title: \"Tshopo\"}, // 30\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"CD\",\n    cities: cityList.filter(city => city.country === \"CD\" && [\"04\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"21\",\"22\",\"23\",\"27\",\"29\",\"30\"].includes(city.adminCode))\n  },\n  {\n    country: \"Djibouti\",\n    zone: \"Etc/GMT-3\",\n    flag: \"DJ\",\n    cities: cityList.filter(city => city.country === \"DJ\")\n  },\n  {\n    country: \"Egypt\",\n    zone: \"Etc/GMT-2\",\n    flag: \"EG\",\n    cities: cityList.filter(city => city.country === \"EG\")\n  },\n  {\n    country: \"Equatorial Guinea\",\n    zone: \"Etc/GMT-1\",\n    flag: \"GQ\",\n    cities: cityList.filter(city => city.country === \"GQ\")\n  },\n  {\n    country: \"Eritrea\",\n    zone: \"Etc/GMT-3\",\n    flag: \"ER\",\n    cities: cityList.filter(city => city.country === \"ER\")\n  },\n  {\n    country: \"eSwatini\",\n    zone: \"Etc/GMT-2\",\n    flag: \"SZ\",\n    cities: cityList.filter(city => city.country === \"SZ\")\n  },\n  {\n    country: \"Ethiopia\",\n    zone: \"Etc/GMT-3\",\n    flag: \"ET\",\n    cities: cityList.filter(city => city.country === \"ET\")\n  },\n  {\n    country: \"Mayotte (France)\",\n    zone: \"Etc/GMT-3\",\n    flag: \"YT\",\n    cities: cityList.filter(city => city.country === \"YT\")\n  },\n  {\n    country: \"La Réunion (France)\",\n    zone: \"Etc/GMT-4\",\n    flag: \"RE\",\n    cities: cityList.filter(city => city.country === \"RE\")\n  },\n  {\n    country: \"French Southern and Antarctic Lands (France)\",\n    subdiv: [\n      {title: \"Crozet Islands\"},\n      {title: \"Scattered Islands in the Indian Ocean\"},\n    ],\n    zone: \"Etc/GMT-4\",\n    flag: \"TF\",\n    cities: cityList.filter(city => city.country === \"TF\" && [\"02\",\"05\"].includes(city.adminCode))\n  },\n  {\n    country: \"French Southern and Antarctic Lands (France)\",\n    subdiv: [\n      {title: \"Kerguelen Islands\"},\n      {title: \"St. Paul and Amsterdam Islands\"},\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"TF\",\n    cities: cityList.filter(city => city.country === \"TF\" && [\"01\",\"03\"].includes(city.adminCode))\n  },\n  {\n    country: \"Gabon\",\n    zone: \"Etc/GMT-1\",\n    flag: \"GA\",\n    cities: cityList.filter(city => city.country === \"GA\")\n  },\n  {\n    country: \"The Gambia\",\n    zone: \"Etc/GMT+1\",\n    flag: \"GM\",\n    cities: cityList.filter(city => city.country === \"GM\")\n  },\n  {\n    country: \"Ghana\",\n    zone: \"Etc/GMT+0\",\n    flag: \"GH\",\n    cities: cityList.filter(city => city.country === \"GH\")\n  },\n  {\n    country: \"Guinea\",\n    zone: \"Etc/GMT+1\",\n    flag: \"GN\",\n    cities: cityList.filter(city => city.country === \"GN\")\n  },\n  {\n    country: \"Guinea-Bissau\",\n    zone: \"Etc/GMT+1\",\n    flag: \"GW\",\n    cities: cityList.filter(city => city.country === \"GW\")\n  },\n  {\n    country: \"Kenya\",\n    zone: \"Etc/GMT-2\",\n    flag: \"KE\",\n    cities: cityList.filter(city => city.country === \"KE\")\n  },\n  {\n    country: \"Lesotho\",\n    zone: \"Etc/GMT-2\",\n    flag: \"LS\",\n    cities: cityList.filter(city => city.country === \"LS\")\n  },\n  {\n    country: \"Liberia\",\n    zone: \"Etc/GMT+1\",\n    flag: \"LR\",\n    cities: cityList.filter(city => city.country === \"LR\")\n  },\n  {\n    country: \"Libya\",\n    zone: \"Etc/GMT-1\",\n    flag: \"LY\",\n    cities: cityList.filter(city => city.country === \"LY\")\n  },\n  {\n    country: \"Madagascar\",\n    zone: \"Etc/GMT-3\",\n    flag: \"MG\",\n    cities: cityList.filter(city => city.country === \"MG\")\n  },\n  {\n    country: \"Malawi\",\n    zone: \"Etc/GMT-2\",\n    flag: \"MW\",\n    cities: cityList.filter(city => city.country === \"MW\")\n  },\n  {\n    country: \"Mali\",\n    zone: \"Etc/GMT+0\",\n    flag: \"ML\",\n    cities: cityList.filter(city => city.country === \"ML\")\n  },\n  {\n    country: \"Mauritania\",\n    zone: \"Etc/GMT+1\",\n    flag: \"MR\",\n    cities: cityList.filter(city => city.country === \"MR\")\n  },\n  {\n    country: \"Mauritius\",\n    zone: \"Etc/GMT-4\",\n    flag: \"MU\",\n    cities: cityList.filter(city => city.country === \"MU\")\n  },\n  {\n    country: \"Morocco\",\n    zone: \"Etc/GMT+0\",\n    flag: \"MA\",\n    cities: cityList.filter(city => city.country === \"MA\")\n  },\n  {\n    country: \"Mozambique\",\n    zone: \"Etc/GMT-2\",\n    flag: \"MZ\",\n    cities: cityList.filter(city => city.country === \"MZ\")\n  },\n  {\n    country: \"Namibia\",\n    zone: \"Etc/GMT-1\",\n    flag: \"NA\",\n    cities: cityList.filter(city => city.country === \"NA\")\n  },\n  {\n    country: \"Niger\",\n    zone: \"Etc/GMT-1\",\n    flag: \"NE\",\n    cities: cityList.filter(city => city.country === \"NE\")\n  },\n  {\n    country: \"Nigeria\",\n    zone: \"Etc/GMT-1\",\n    flag: \"NG\",\n    cities: cityList.filter(city => city.country === \"NG\")\n  },\n  {\n    country: \"Republic of the Congo\",\n    zone: \"Etc/GMT-1\",\n    flag: \"CG\",\n    cities: cityList.filter(city => city.country === \"CG\")\n  },\n  {\n    country: \"Rwanda\",\n    zone: \"Etc/GMT-2\",\n    flag: \"RW\",\n    cities: cityList.filter(city => city.country === \"RW\")\n  },\n  {\n    country: \"São Tomé and Príncipe\",\n    zone: \"Etc/GMT+0\",\n    flag: \"ST\",\n    cities: cityList.filter(city => city.country === \"ST\")\n  },\n  {\n    country: \"Sahrawi Arab Democratic Republic\",\n    zone: \"Etc/GMT+1\",\n    flag: \"EH\",\n    cities: cityList.filter(city => city.country === \"EH\")\n  },\n  {\n    country: \"Senegal\",\n    zone: \"Etc/GMT+1\",\n    flag: \"SN\",\n    cities: cityList.filter(city => city.country === \"SN\")\n  },\n  {\n    country: \"Seychelles\",\n    zone: \"Etc/GMT-3\",\n    flag: \"SC\",\n    cities: cityList.filter(city => city.country === \"SC\")\n  },\n  {\n    country: \"Sierra Leone\",\n    zone: \"Etc/GMT+1\",\n    flag: \"SL\",\n    cities: cityList.filter(city => city.country === \"SL\")\n  },\n  {\n    country: \"Somalia\",\n    zone: \"Etc/GMT-3\",\n    flag: \"SO\",\n    cities: cityList.filter(city => city.country === \"SO\")\n  },\n  {\n    country: \"South Africa\",\n    subdiv: [\n      {title: \"Northern Cape\"}, // 08\n      {title: \"Western Cape\"}, // 11\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"ZA\",\n    cities: cityList.filter(city => city.country === \"ZA\" && [\"08\",\"11\"].includes(city.adminCode))\n  },\n  {\n    country: \"South Africa\",\n    subdiv: [\n      {title: \"Eastern Cape\"}, // 05\n      {title: \"Free State\"}, //  03\n      {title: \"Gauteng\"}, // 06\n      {title: \"KwaZulu-Natal\"}, // 02\n      {title: \"Limpopo\"}, // 09\n      {title: \"Mpumalanga\"}, // 07\n      {title: \"North West\"}, // 10\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"ZA\",\n    cities: cityList.filter(city => city.country === \"ZA\" && [\"02\",\"03\",\"05\",\"06\",\"07\",\"09\",\"10\"].includes(city.adminCode))\n  },\n  {\n    country: \"South Sudan\",\n    zone: \"Etc/GMT-2\",\n    flag: \"SS\",\n    cities: cityList.filter(city => city.country === \"SS\")\n  },\n  {\n    country: \"Spain\",\n    subdiv: [\n      {title: \"Ceuta\"}, \n      {title: \"Melilla\"}\n    ],\n    zone: \"Etc/GMT+0\",\n    flag: \"ES\",\n    cities: cityList.filter(city => city.country === \"ES\" && [\"CE\", \"ML\"].includes(city.adminCode))\n  },\n  {\n    country: \"Sudan\",\n    zone: \"Etc/GMT-2\",\n    flag: \"SD\",\n    cities: cityList.filter(city => city.country === \"SD\")\n  },\n  {\n    country: \"Tanzania\",\n    zone: \"Etc/GMT-2\",\n    flag: \"TZ\",\n    cities: cityList.filter(city => city.country === \"TZ\")\n  },\n  {\n    country: \"Togo\",\n    zone: \"Etc/GMT+0\",\n    flag: \"TG\",\n    cities: cityList.filter(city => city.country === \"TG\")\n  },\n  {\n    country: \"Tunisia\",\n    zone: \"Etc/GMT-1\",\n    flag: \"TN\",\n    cities: cityList.filter(city => city.country === \"TN\")\n  },\n  {\n    country: \"Uganda\",\n    zone: \"Etc/GMT-2\",\n    flag: \"UG\",\n    cities: cityList.filter(city => city.country === \"UG\")\n  },\n  {\n    country: \"Ascension (United Kingdom)\",\n    zone: \"Etc/GMT+1\",\n    flag: \"AC\",\n    cities: cityList.filter(city => city.country === \"SH\" && city.adminCode === \"01\")\n  },\n  {\n    country: \"St. Helena (United Kingdom)\",\n    zone: \"Etc/GMT+0\",\n    flag: \"SH\",\n    cities: cityList.filter(city => city.country === \"SH\" && city.adminCode === \"02\")\n  },\n  {\n    country: \"Tristan da Cunha (United Kingdom)\",\n    zone: \"Etc/GMT+1\",\n    flag: \"TA\",\n    cities: cityList.filter(city => city.country === \"SH\" && city.adminCode === \"03\")\n  },\n  {\n    country: \"Zambia\",\n    zone: \"Etc/GMT-2\",\n    flag: \"ZM\",\n    cities: cityList.filter(city => city.country === \"ZM\")\n  },\n  {\n    country: \"Zimbabwe\",\n    zone: \"Etc/GMT-2\",\n    flag: \"ZW\",\n    cities: cityList.filter(city => city.country === \"ZW\")\n  }\n]","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Antarctica\",\n    subdiv: [\n      {title: \"Casey (Australia)\"}\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Casey\")\n  },\n  {\n    country: \"Antarctica\",\n    subdiv: [\n      {title: \"Davis (Australia)\"}\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Davis\")\n  },\n  {\n    country: \"French Southern and Antarctic Lands (France)\",\n    subdiv: [\n      {title: \"Adélie Land/Dumont-d'Urville Station\"}\n    ],\n    zone: \"Etc/GMT-10\",\n    flag: \"TF\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/DumontDUrville\")\n  },\n  {\n    country: \"Antarctica\",\n    subdiv: [\n      {title: \"Mawson (Australia)\"}\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Mawson\")\n  },\n  {\n    country: \"Antarctica\",\n    subdiv: [\n      {title: \"McMurdo (United States)\"}\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/McMurdo\")\n  },\n  {\n    country: \"Antarctica\",\n    subdiv: [\n      {title: \"Palmer (United States)\"}\n    ],\n    zone: \"Etc/GMT+3\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Palmer\")\n  },\n  {\n    country: \"Antarctica\",\n    subdiv: [\n      {title: \"Rothera (United Kingdom)\"}\n    ],\n    zone: \"Etc/GMT+3\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Rothera\")\n  },\n  {\n    country: \"Antarctica\",\n    subdiv: [\n      {title: \"Shōwa (Japan)\"}\n    ],\n    zone: \"Etc/GMT-3\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Syowa\")\n  },\n  {\n    country: \"Antarctica\",\n    subdiv: [\n      {title: \"Troll (Norway)\"}\n    ],\n    zone: \"Etc/GMT+0\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Troll\")\n  },\n  {\n    country: \"Antarctica\",\n    subdiv: [\n      {title: \"Vostok (Russia)\"}\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"AQ\",\n    cities: cityList.filter(city => city.country === \"AQ\" && city.tz === \"Antarctica/Vostok\")\n  }\n]","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Australia\",\n    subdiv: [\n      {title: \"Western Australia\"} // 08\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"AU\",\n    cities: cityList.filter(city => city.country === \"AU\" && city.adminCode === \"08\")\n  },\n  {\n    country: \"Australia\",\n    subdiv: [\n      {title: \"Northern Territory\"}, // 03\n      {title: \"South Australia\"}, // 05\n    ],\n    zone: \"Etc/GMT-9\",\n    flag: \"AU\",\n    cities: cityList.filter(city => city.country === \"AU\" && [\"03\",\"05\"].includes(city.adminCode))\n  },\n  {\n    country: \"Australia\",\n    subdiv: [\n      {title: \"Australian Capital Territory\"}, // 01\n      {title: \"New South Wales\"}, // 02\n      {title: \"Queensland\"}, // 04\n      {title: \"Tasmania\"}, // 06\n      {title: \"Victoria\"} // 07\n    ],\n    zone: \"Etc/GMT-10\",\n    flag: \"AU\",\n    cities: cityList.filter(city => city.country === \"AU\" && [\"01\",\"02\",\"04\",\"06\",\"07\"].includes(city.adminCode))\n  },\n  {\n    country: \"Australia\",\n    subdiv: [\n      {title: \"Lord Howe Island\"},\n      {title: \"Norfolk Island\"}\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"AU\",\n    cities: []\n  },\n]\n","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Canada\",\n    subdiv: [\n      {title: \"Newfoundland and Labrador\"}, // 05\n      {title: \"New Brunswick\"}, // 04\n      {title: \"Nova Scotia\"}, // 07\n      {title: \"Nunavut\", extra: \"(east of 67.5° W)\"}, // 14\n      {title: \"Prince Edward Island\"}, // 09\n      {title: \"Québec\", extra: \"(eastern part)\"} // 10\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if (city.country === \"CA\") {\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"10\" && city.lon >= -67.5) return true\n        if(city.adminCode === \"14\" && city.lon >= -67.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Canada\",\n    subdiv: [\n      {title: \"Nunavut\", extra: \"(82.5°W – 67.5°W)\"}, // 14\n      {title: \"Ontario\", extra: \"(eastern part)\"}, // 08\n      {title: \"Québec\", extra: \"(western part)\"} // 10\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CA\") {\n        if (city.adminCode === \"08\" && city.lon >= -82.5) return true\n        if (city.adminCode === \"10\" && city.lon < -67.5) return true\n        if (city.adminCode === \"14\" && city.lon >= -82.5 && city.lon < -67.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Canada\",\n    subdiv: [\n      {title: \"Manitoba\", extra: \"(eastern part)\"}, // 03\n      {title: \"Nunavut\", extra: \"(97.5°W – 82.5°W)\"}, // 14\n      {title: \"Ontario\", extra: \"(western part)\"} // 08\n    ],\n    zone: \"Etc/GMT+6\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CA\") {\n        if(city.adminCode === \"03\" && city.lon >= -97.5) return true\n        if(city.adminCode === \"08\" && city.lon < -82.5) return true\n        if(city.adminCode === \"14\" && city.lon >= -97.5 && city.lon < -82.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Canada\",\n    subdiv: [\n      {title: \"Manitoba\", extra: \"(western part)\"}, // 03\n      {title: \"Northwest Territories\", extra: \"(eastern part)\"}, // 13\n      {title: \"Nunavut\", extra: \"(112.5°W – 97.5°W)\"}, // 14\n      {title: \"Saskatchewan\"} // 11\n    ],\n    zone: \"Etc/GMT+7\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if (city.country === \"CA\") {\n        if(city.adminCode === \"03\" && city.lon < -97.5) return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"13\" && city.lon >= -112.5) return true\n        if(city.adminCode === \"14\" && city.lon >= -112.5 && city.lon < -97.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Canada\",\n    subdiv: [\n      {title: \"Alberta\"}, // 01\n      {title: \"British Columbia\", extra: \"(eastern part)\"}, // 02\n      {title: \"Northwest Territories\", extra: \"(central part)\"}, // 13\n      {title: \"Nunavut\", extra: \"(west of 112.5°W)\"} // 14\n    ],\n    zone: \"Etc/GMT+8\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if (city.country === \"CA\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"02\" && city.lon >= -127.5) return true\n        if(city.adminCode === \"13\" && city.lon >= -127.5 && city.lon < -112.5) return true\n        if(city.adminCode === \"14\" && city.lon < -112.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Canada\",\n    subdiv: [\n      {title: \"British Columbia\", extra: \"(western part)\"}, // 02\n      {title: \"Northwest Territories\", extra: \"(western part)\"}, // 13\n      {title: \"Yukon\"} // 12\n    ],\n    zone: \"Etc/GMT+9\",\n    flag: \"CA\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CA\") {\n        if(city.adminCode === \"02\" && city.lon < -127.5) return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"13\" && city.lon < -127.5) return true\n        return false\n      }\n      return false\n    })\n  },\n]","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"American Virgin Islands (United States)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"VI\",\n    cities: cityList.filter(city => city.country === \"VI\")\n  },\n  {\n    country: \"Anguilla (United Kingdom)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"AI\",\n    cities: cityList.filter(city => city.country === \"AI\")\n  },\n  {\n    country: \"Antigua and Barbuda\",\n    zone: \"Etc/GMT+4\",\n    flag: \"AG\",\n    cities: cityList.filter(city => city.country === \"AG\")\n  },\n  {\n    country: \"Aruba (Netherlands)\",\n    zone: \"Etc/GMT+5\",\n    flag: \"AW\",\n    cities: cityList.filter(city => city.country === \"AW\")\n  },\n  {\n    country: \"Bahamas\",\n    zone: \"Etc/GMT+5\",\n    flag: \"BS\",\n    cities: cityList.filter(city => city.country === \"BS\")\n  },\n  {\n    country: \"Barbados\",\n    zone: \"Etc/GMT+4\",\n    flag: \"BB\",\n    cities: cityList.filter(city => city.country === \"BB\")\n  },\n  {\n    country: \"Bermuda (United Kingdom)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"BM\",\n    cities: cityList.filter(city => city.country === \"BM\")\n  },\n  {\n    country: \"British Virgin Islands (United Kingdom)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"VG\",\n    cities: cityList.filter(city => city.country === \"VG\")\n  },\n  {\n    country: \"Cayman Islands (United Kingdom)\",\n    zone: \"Etc/GMT+5\",\n    flag: \"KY\",\n    cities: cityList.filter(city => city.country === \"KY\")\n  },\n  {\n    country: \"Cuba\",\n    zone: \"Etc/GMT+5\",\n    flag: \"CU\",\n    cities: cityList.filter(city => city.country === \"CU\")\n  },\n  {\n    country: \"Curaçao (Netherlands)\",\n    zone: \"Etc/GMT+5\",\n    flag: \"CW\",\n    cities: cityList.filter(city => city.country === \"CW\")\n  },\n  {\n    country: \"Dominica\",\n    zone: \"Etc/GMT+4\",\n    flag: \"DM\",\n    cities: cityList.filter(city => city.country === \"DM\")\n  },\n  {\n    country: \"Dominican Republic\",\n    zone: \"Etc/GMT+5\",\n    flag: \"DO\",\n    cities: cityList.filter(city => city.country === \"DO\")\n  },\n  {\n    country: \"Guadeloupe (France)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"GP\",\n    cities: cityList.filter(city => city.country === \"GP\")\n  },\n  {\n    country: \"France\",\n    subdiv: [\n      {title: \"Saint-Martin\"}\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"FR\", // eigentlich MF\n    cities: cityList.filter(city => city.country === \"MF\")\n  },\n  {\n    country: \"Saint-Barthélemy (France)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"BL\",\n    cities: cityList.filter(city => city.country === \"BL\")\n  },\n  {\n    country: \"Saint-Pierre and Miquelon (France)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"PM\",\n    cities: cityList.filter(city => city.country === \"PM\")\n  },\n  {\n    country: \"Grenada\",\n    zone: \"Etc/GMT+4\",\n    flag: \"GD\",\n    cities: cityList.filter(city => city.country === \"GD\")\n  },\n  {\n    country: \"Haiti\",\n    zone: \"Etc/GMT+5\",\n    flag: \"HT\",\n    cities: cityList.filter(city => city.country === \"HT\")\n  },\n  {\n    country: \"Jamaica\",\n    zone: \"Etc/GMT+5\",\n    flag: \"JM\",\n    cities: cityList.filter(city => city.country === \"JM\")\n  },\n  {\n    country: \"Martinique (France)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"MQ\",\n    cities: cityList.filter(city => city.country === \"MQ\")\n  },\n  {\n    country: \"Montserrat (United Kingdom)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"MS\",\n    cities: cityList.filter(city => city.country === \"MS\")\n  },\n  {\n    country: \"Bonaire, Saba, and Sint Eustatius (Netherlands)\",\n    subdiv: [\n      {title: \"Bonaire\"}, \n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"BQ\",\n    cities: cityList.filter(city => city.country === \"BQ\" && city.adminCode === \"BO\")\n  },\n  {\n    country: \"Bonaire, Saba, and Sint Eustatius (Netherlands)\",\n    subdiv: [\n      {title: \"Saba\"}, \n      {title: \"Sint Eustatius\"}\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"BQ\",\n    cities: cityList.filter(city => city.country === \"BQ\" && [\"SB\", \"SE\"].includes(city.adminCode))\n  },\n  {\n    country: \"Puerto Rico (United States)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"PR\",\n    cities: cityList.filter(city => city.country === \"PR\")\n  },\n  {\n    country: \"Saint Kitts and Nevis\",\n    zone: \"Etc/GMT+4\",\n    flag: \"KN\",\n    cities: cityList.filter(city => city.country === \"KN\")\n  },\n  {\n    country: \"Saint Lucia\",\n    zone: \"Etc/GMT+4\",\n    flag: \"LC\",\n    cities: cityList.filter(city => city.country === \"LC\")\n  },\n  {\n    country: \"Saint Vincent and the Grenadines\",\n    zone: \"Etc/GMT+4\",\n    flag: \"VC\",\n    cities: cityList.filter(city => city.country === \"VC\")\n  },\n  {\n    country: \"Sint Maarten (Netherlands)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"SX\",\n    cities: cityList.filter(city => city.country === \"SX\")\n  },\n  {\n    country: \"Trinidad and Tobago\",\n    zone: \"Etc/GMT+4\",\n    flag: \"TT\",\n    cities: cityList.filter(city => city.country === \"TT\")\n  },\n  {\n    country: \"Turks and Caicos Islands (United Kingdom)\",\n    zone: \"Etc/GMT+5\",\n    flag: \"TC\",\n    cities: cityList.filter(city => city.country === \"TC\")\n  },\n]\n","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Belize\",\n    zone: \"Etc/GMT+7\",\n    flag: \"BZ\",\n    cities: cityList.filter(city => city.country === \"BZ\")\n  },\n  {\n    country: \"Costa Rica\",\n    zone: \"Etc/GMT+6\",\n    flag: \"CR\",\n    cities: cityList.filter(city => city.country === \"CR\")\n  },\n  {\n    country: \"El Salvador\",\n    zone: \"Etc/GMT+6\",\n    flag: \"SV\",\n    cities: cityList.filter(city => city.country === \"SV\")\n  },\n  {\n    country: \"Guatemala\",\n    zone: \"Etc/GMT+6\",\n    flag: \"GT\",\n    cities: cityList.filter(city => city.country === \"GT\")\n  },\n  {\n    country: \"Honduras\",\n    zone: \"Etc/GMT+6\",\n    flag: \"HN\",\n    cities: cityList.filter(city => city.country === \"HN\")\n  },\n  {\n    country: \"Mexico\",\n    subdiv: [\n      {title: \"Baja California\"}, // 02\n      {title: \"Baja California Sur\"}, // 03\n      {title: \"Revillagigedo Islands\"} // nur 45 Einwohner, deshalb \n    ],\n    zone: \"Etc/GMT+8\",\n    flag: \"MX\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MX\") {\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"03\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Mexico\",\n    subdiv: [\n      {title: \"Aguascalientes\"}, // 01\n      {title: \"Chihuahua\"}, // 06\n      {title: \"Coahuila\"}, // 07\n      {title: \"Colima\"}, // 08\n      {title: \"Distrito Federal\"}, // 09\n      {title: \"Durango\"}, // 10\n      {title: \"Guanajuato\"}, // 11\n      {title: \"Guerrero\"}, // 12\n      {title: \"Hidalgo\"}, // 13\n      {title: \"Jalisco\"}, // 14\n      {title: \"México\"}, // 15\n      {title: \"Michoacán\"}, // 16\n      {title: \"Morelos\"}, // 17\n      {title: \"Nayarit\"}, // 18\n      {title: \"Nuevo León\"}, // 19\n      {title: \"Puebla\"}, // 21\n      {title: \"Querétaro\"}, // 22\n      {title: \"San Luis Potosí\"}, // 24 \n      {title: \"Sinaloa\"}, // 25\n      {title: \"Sonora\"}, // 26\n      {title: \"Tamaulipas\"}, // 28\n      {title: \"Tlaxcala\"}, // 29\n      {title: \"Zacatecas\"} // 32\n    ],\n    zone: \"Etc/GMT+7\",\n    flag: \"MX\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MX\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"06\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\") return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"15\") return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"17\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"19\") return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"22\") return true\n        if(city.adminCode === \"24\") return true\n        if(city.adminCode === \"25\") return true\n        if(city.adminCode === \"26\") return true\n        if(city.adminCode === \"28\") return true\n        if(city.adminCode === \"29\") return true\n        if(city.adminCode === \"32\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Mexico\",\n    subdiv: [\n      {title: \"Campeche\"}, // 04\n      {title: \"Chiapas\"}, // 05\n      {title: \"Oaxaca\"}, // 20\n      {title: \"Quintana Roo\"}, // 23\n      {title: \"Tabasco\"}, // 27\n      {title: \"Veracruz\"}, // 30\n      {title: \"Yucatán\"}, // 31\n    ],\n    zone: \"Etc/GMT+6\",\n    flag: \"MX\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MX\") {\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"20\") return true\n        if(city.adminCode === \"23\") return true\n        if(city.adminCode === \"27\") return true\n        if(city.adminCode === \"30\") return true\n        if(city.adminCode === \"31\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Nicaragua\",\n    zone: \"Etc/GMT+6\",\n    flag: \"NI\",\n    cities: cityList.filter(city => city.country === \"NI\")\n  },\n  {\n    country: \"Panama\",\n    zone: \"Etc/GMT+5\",\n    flag: \"PA\",\n    cities: cityList.filter(city => city.country === \"PA\")\n  },\n]\n","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Kazakhstan\",\n    subdiv: [\n      {title: \"Atyrau Region\"}, // 06\n      {title: \"Mangystau Region\"}, // 09\n      {title: \"West Kazakhstan Region\"} // 07\n    ],\n    zone: \"Etc/GMT-3\",\n    cities : cityList.filter(city => {\n      if(city.country === \"KZ\") {\n        if(city.adminCode === \"06\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"09\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Kazakhstan\",\n    subdiv: [\n      {title: \"Aktobe Region\"}, // 04\n      {title: \"Kostanay Region\"}, // 13\n      {title: \"Kyzylorda Region\"}, // 14\n      {title: \"Baykonyr\"} // 18\n    ],\n    zone: \"Etc/GMT-4\",\n    flag: \"KZ\",\n    cities: cityList.filter(city => {\n      if(city.country === \"KZ\") {\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"18\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Kazakhstan\",\n    subdiv: [\n      {title: \"Akmola Region\"}, // 03\n      {title: \"Almaty Region\"}, // 01\n      {title: \"Almaty\"}, // 02\n      {title: \"Nur-Sultan\"}, // 05\n      {title: \"East Kazakhstan Region\"}, // 15\n      {title: \"Jambyl Region\"}, // 17\n      {title: \"Karaganda Region\"}, // 12\n      {title: \"North Kazakhstan Region\"}, // 16 \n      {title: \"Pavlodar Region\"}, // 11\n      {title: \"Turkistan Region\"}, // 10\n      {title: \"Shymkent\"} // 1537272\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"KZ\",\n    cities: cityList.filter(city => {\n      if(city.country === \"KZ\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"15\") return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"17\") return true\n        if(city.adminCode === \"1537272\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Kyrgyzstan\",\n    zone: \"Etc/GMT-5\",\n    flag: \"KG\",\n    cities: cityList.filter(city => city.country === \"KG\")\n  },\n  {\n    country: \"Tajikistan\",\n    zone: \"Etc/GMT-5\",\n    flag: \"TJ\",\n    cities: cityList.filter(city => city.country === \"TJ\")\n  },\n  {\n    country: \"Turkmenistan\",\n    zone: \"Etc/GMT-4\",\n    flag: \"TM\",\n    cities: cityList.filter(city => city.country === \"TM\")\n  },\n  {\n    country: \"Uzbekistan\",\n    zone: \"Etc/GMT-4\",\n    flag: \"UZ\",\n    cities: cityList.filter(city => city.country === \"UZ\")\n  },\n]\n","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"China\",\n    subdiv: [\n      {title: \"Tibet\", extra: \"(west of 82.5°E)\"}, // 14\n      {title: \"Xinjiang\", extra: \"(west of 82.5°E)\"}, // 13\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"13\" && city.lon < 82.5) return true\n        if(city.adminCode === \"14\" && city.lon < 82.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"China\",\n    subdiv: [\n      {title: \"Gansu\", extra: \"(west of 97.5°E)\"}, // 15\n      {title: \"Qinghai\", extra: \"(west of 97.5°E)\"}, // 06\n      {title: \"Tibet\", extra: \"(east of 82.5°E)\"}, // 14\n      {title: \"Xinjiang\", extra: \"(east of 82.5°E)\"}, // 13\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"06\" && city.lon < 97.5) return true\n        if(city.adminCode === \"13\" && city.lon >= 82.5) return true\n        if(city.adminCode === \"14\" && city.lon >= 82.5) return true\n        if(city.adminCode === \"15\" && city.lon < 97.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"China\",\n    subdiv: [\n      {title: \"Chongqing\"}, // 33\n      {title: \"Gansu\", extra: \"(east of 97.5°E)\"}, // 15\n      {title: \"Guangdong\", extra: \"(west of 112.5°E)\"}, // 30\n      {title: \"Guangxi Zhuang\"}, // 16\n      {title: \"Guizhou\"}, // 18\n      {title: \"Hainan\"}, // 31\n      {title: \"Hubei\", extra: \"(west of 112.5°E)\"}, // 12\n      {title: \"Hunan\"}, // 11\n      {title: \"Inner Mongolia\", extra: \"(west of 112.5°E)\"}, // 20\n      {title: \"Ningxia\"}, // 21\n      {title: \"Qinghai\", extra: \"(east of 97.5°E)\"}, // 06\n      {title: \"Shaanxi\"}, // 26\n      {title: \"Shanxi\"}, // 24\n      {title: \"Sichuan\"}, // 32\n      {title: \"Yunnan\"}, // 29\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"06\" && city.lon >= 97.5) return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"12\" && city.lon < 112.5) return true\n        if(city.adminCode === \"15\" && city.lon >= 97.5) return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"20\" && city.lon < 112.5) return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"24\") return true\n        if(city.adminCode === \"26\") return true\n        if(city.adminCode === \"29\") return true\n        if(city.adminCode === \"30\" && city.lon < 112.5) return true\n        if(city.adminCode === \"31\") return true\n        if(city.adminCode === \"32\") return true\n        if(city.adminCode === \"33\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"China\",\n    subdiv: [\n      {title: \"Anhui\"}, // 01\n      {title: \"Beijing\"}, // 22\n      {title: \"Fujian\"}, // 07\n      {title: \"Guangdong\", extra: \"(east of 112.5°E)\"}, // 30\n      {title: \"Hebei\"}, // 10\n      {title: \"Henan\"}, // 09\n      {title: \"Hubei\", extra: \"(east of 112.5°E)\"}, // 12\n      {title: \"Heilongjiang\", extra: \"(west of 127.5°E)\"}, // 08\n      {title: \"Inner Mongolia\", extra: \"(east of 112.5°E)\"}, // 20\n      {title: \"Jiangsu\"}, // 04\n      {title: \"Jiangxi\"}, // 03\n      {title: \"Jilin\", extra: \"(west of 127.5°E)\"}, // 05\n      {title: \"Liaoning\"}, // 19\n      {title: \"Shandong\"}, // 25\n      {title: \"Shanghai\"}, // 23\n      {title: \"Tianjin\"}, // 28\n      {title: \"Zhejiang\"}, // 02\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\" && city.lon < 127.5) return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\" && city.lon < 127.5) return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"12\" && city.lon >= 112.5) return true\n        if(city.adminCode === \"19\") return true\n        if(city.adminCode === \"20\" && city.lon >= 112.5) return true\n        if(city.adminCode === \"22\") return true\n        if(city.adminCode === \"23\") return true\n        if(city.adminCode === \"25\") return true\n        if(city.adminCode === \"28\") return true\n        if(city.adminCode === \"30\" && city.lon >= 112.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"China\",\n    subdiv: [\n      {title: \"Heilongjiang\", extra: \"(east of 127.5°E)\"}, // 08\n      {title: \"Jilin\", extra: \"(east of 127.5°E)\"}, // 05\n    ],\n    zone: \"Etc/GMT-9\",\n    flag: \"CN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"CN\") {\n        if(city.adminCode === \"05\" && city.lon >= 127.5) return true\n        if(city.adminCode === \"08\" && city.lon >= 127.5) return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Hong Kong (China)\",\n    zone: \"Etc/GMT-8\",\n    flag: \"HK\",\n    cities: cityList.filter(city => city.country === \"HK\")\n  },\n  {\n    country: \"Japan\",\n    zone: \"Etc/GMT-9\",\n    flag: \"JP\",\n    cities: cityList.filter(city => city.country === \"JP\")\n  },\n  {\n    country: \"Macau (China)\",\n    zone: \"Etc/GMT-8\",\n    flag: \"MO\",\n    cities: cityList.filter(city => city.country === \"MO\")\n  },\n  {\n    country: \"Mongolia\",\n    subdiv: [\n      {title: \"Bayan-Ölgii\"}, // 03\n      {title: \"Govi-Altai\"}, // 10\n      {title: \"Khovd\"}, // 12\n      {title: \"Uvs\"}, // 19\n      {title: \"Zavkhan\"} // 09\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"MN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MN\") {\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"19\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Mongolia\",\n    subdiv: [\n      {title: \"Arkhangai\"}, // 01\n      {title: \"Bayankhongor\"}, // 02\n      {title: \"Bulgan\"}, // 21\n      {title: \"Darkhan-Uul\"}, // 23\n      {title: \"Dornogovi\"}, // 07\n      {title: \"Dundgovi\"}, // 08\n      {title: \"Govisümber\"}, // 24\n      {title: \"Khentii\"}, // 11\n      {title: \"Khövsgöl\"}, // 13\n      {title: \"Orkhon\"}, // 25\n      {title: \"Selenge\"}, // 16\n      {title: \"Töv\"}, // 18\n      {title: \"Ömnögovi\"}, // 14\n      {title: \"Övörkhanghai\"} // 15\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"MN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MN\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"15\") return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"23\") return true\n        if(city.adminCode === \"24\") return true\n        if(city.adminCode === \"25\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Mongolia\",\n    subdiv: [\n      {title: \"Dornod\"}, // 06\n      {title: \"Sükhbaatar\"} // 17\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"MN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MN\") {\n        if(city.adminCode === \"06\") return true\n        if(city.adminCode === \"17\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"North Korea\",\n    zone: \"Etc/GMT-9\",\n    flag: \"KP\",\n    cities: cityList.filter(city => city.country === \"KP\")\n  },\n  {\n    country: \"South Korea\",\n    zone: \"Etc/GMT-9\",\n    flag: \"KR\",\n    cities: cityList.filter(city => city.country === \"KR\")\n  },\n  {\n    country: \"Taiwan\",\n    zone: \"Etc/GMT-8\",\n    flag: \"TW\",\n    cities: cityList.filter(city => city.country === \"TW\")\n  }\n]\n","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Åland (Finland)\",\n    zone: \"Etc/GMT-2\",\n    flag: \"AX\",\n    cities: cityList.filter(city => city.country === \"AX\")\n  },\n  {\n    country: \"Albania\",\n    zone: \"Etc/GMT-1\",\n    flag: \"AL\",\n    cities: cityList.filter(city => city.country === \"AL\")\n  },\n  {\n    country: \"Andorra\",\n    zone: \"Etc/GMT+0\",\n    flag: \"AD\",\n    cities: cityList.filter(city => city.country === \"AD\")\n  },\n  {\n    country: \"Austria\",\n    zone: \"Etc/GMT-1\",\n    flag: \"AT\",\n    cities: cityList.filter(city => city.country === \"AT\")\n  },\n  {\n    country: \"Belarus\",\n    zone: \"Etc/GMT-2\",\n    flag: \"BY\",\n    cities: cityList.filter(city => city.country === \"BY\")\n  },\n  {\n    country: \"Belgium\",\n    zone: \"Etc/GMT+0\",\n    flag: \"BE\",\n    cities: cityList.filter(city => city.country === \"BE\")\n  },\n  {\n    country: \"Bosnia and Herzegovina\",\n    zone: \"Etc/GMT-1\",\n    flag: \"BA\",\n    cities: cityList.filter(city => city.country === \"BA\")\n  },\n  {\n    country: \"Bulgaria\",\n    zone: \"Etc/GMT-2\",\n    flag: \"BG\",\n    cities: cityList.filter(city => city.country === \"BG\")\n  },\n  {\n    country: \"Croatia\",\n    zone: \"Etc/GMT-1\",\n    flag: \"HR\",\n    cities: cityList.filter(city => city.country === \"HR\")\n  },\n  {\n    country: \"Cyprus\",\n    zone: \"Etc/GMT-2\",\n    flag: \"CY\",\n    cities: cityList.filter(city => city.country === \"CY\")\n  },\n  {\n    country: \"Czechia\",\n    zone: \"Etc/GMT-1\",\n    flag: \"CZ\",\n    cities: cityList.filter(city => city.country === \"CZ\")\n  },\n  {\n    country: \"Denmark\",\n    zone: \"Etc/GMT-1\",\n    flag: \"DK\",\n    cities: cityList.filter(city => city.country === \"DK\")\n  },\n  {\n    country: \"Estonia\",\n    zone: \"Etc/GMT-2\",\n    flag: \"EE\",\n    cities: cityList.filter(city => city.country === \"EE\")\n  },\n  {\n    country: \"Faroe Islands (Denmark)\",\n    zone: \"Etc/GMT+0\",\n    flag: \"FO\",\n    cities: cityList.filter(city => city.country === \"FO\")\n  },\n  {\n    country: \"Finland\",\n    zone: \"Etc/GMT-2\",\n    flag: \"FI\",\n    cities: cityList.filter(city => city.country === \"FI\")\n  },\n  {\n    country: \"France\",\n    zone: \"Etc/GMT+0\",\n    flag: \"FR\",\n    cities: cityList.filter(city => city.country === \"FR\")\n  },\n  {\n    country: \"Germany\",\n    zone: \"Etc/GMT-1\",\n    flag: \"DE\",\n    cities: cityList.filter(city => city.country === \"DE\")\n  },\n  {\n    country: \"Gibraltar (United Kingdom)\",\n    zone: \"Etc/GMT+0\",\n    flag: \"GI\",\n    cities: cityList.filter(city => city.country === \"GI\")\n  },\n  {\n    country: \"Greece\",\n    subdiv: [\n      {title: \"Epirus and Western Macedonia\"}, // ESYE21, ESYE13\n      {title: \"Peloponnese, Western Greece and the Ionian\"}, // ESYE25, ESYE23, ESYE22\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"GR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"GR\") {\n        if(city.adminCode === \"ESYE13\") return true\n        if(city.adminCode === \"ESYE21\") return true\n        if(city.adminCode === \"ESYE22\") return true\n        if(city.adminCode === \"ESYE23\") return true\n        if(city.adminCode === \"ESYE25\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Greece\",\n    subdiv: [\n      {title: \"Aegean\"}, // ESYE41, ESYE42\n      {title: \"Attica\"}, // ESYE31\n      {title: \"Crete\"}, // ESYE43\n      {title: \"Macedonia and Thrace\"}, // ESYE11, ESYE12\n      {title: \"Thessaly and Central Greece\"}, // ESYE14, ESYE24\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"GR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"GR\") {\n        if(city.adminCode === \"ESYE11\") return true\n        if(city.adminCode === \"ESYE12\") return true\n        if(city.adminCode === \"ESYE14\") return true\n        if(city.adminCode === \"ESYE24\") return true\n        if(city.adminCode === \"ESYE31\") return true\n        if(city.adminCode === \"ESYE41\") return true\n        if(city.adminCode === \"ESYE42\") return true\n        if(city.adminCode === \"ESYE43\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Greenland (Denmark)\",\n    subdiv: [\n      {title: \"Danmarkshavn\"}\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"GL\",\n    cities: cityList.filter(city => city.country === \"GL\" && city.tz === \"America/Danmarkshavn\")\n  },\n  {\n    country: \"Greenland (Denmark)\",\n    subdiv: [\n      {title: \"Ittoqqortoormit\"}, \n      {title: \"Scoresbysund\"}\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"GL\",\n    cities: cityList.filter(city => city.country === \"GL\" && city.tz === \"America/Scoresbysund\")\n  },\n  {\n    country: \"Greenland (Denmark)\",\n    subdiv: [\n      {title: \"Thule\"}, \n      {title: \"Pituffik\"}\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"GL\",\n    cities: cityList.filter(city => city.country === \"GL\" && city.tz === \"America/Thule\")\n  },\n  {\n    country: \"Greenland (Denmark)\",\n    subdiv: [\n      {title: \"Western Greenland\"}\n    ],\n    zone: \"Etc/GMT+3\",\n    flag: \"GL\",\n    cities: cityList.filter(city => city.country === \"GL\" && city.tz === \"America/Nuuk\")\n  },\n  {\n    country: \"Guernsey (United Kingdom)\",\n    zone: \"Etc/GMT+0\",\n    flag: \"GG\",\n    cities: cityList.filter(city => city.country === \"GG\")\n  },\n  {\n    country: \"Hungary\",\n    zone: \"Etc/GMT-1\",\n    flag: \"HU\",\n    cities: cityList.filter(city => city.country === \"HU\")\n  },\n  {\n    country: \"Iceland\",\n    zone: \"Etc/GMT+1\",\n    flag: \"IS\",\n    cities: cityList.filter(city => city.country === \"IS\")\n  },\n  {\n    country: \"Ireland\",\n    zone: \"Etc/GMT+1\",\n    flag: \"IE\",\n    cities: cityList.filter(city => city.country === \"IE\")\n  },\n  {\n    country: \"Isle of Man (United Kingdom)\",\n    zone: \"Etc/GMT+0\",\n    flag: \"IM\",\n    cities: cityList.filter(city => city.country === \"IM\")\n  },\n  {\n    country: \"Italy\",\n    zone: \"Etc/GMT-1\",\n    flag: \"IT\",\n    cities: cityList.filter(city => city.country === \"IT\")\n  },\n  {\n    country: \"Jersey (United Kingdom)\",\n    zone: \"Etc/GMT+0\",\n    flag: \"JE\",\n    cities: cityList.filter(city => city.country === \"JE\")\n  },\n  {\n    country: \"Kosovo\",\n    zone: \"Etc/GMT-1\",  // no explicit timezone for Kosovo/Pristina\n    flag: \"XK\",\n    cities: cityList.filter(city => city.country === \"XK\")\n  },\n  {\n    country: \"Latvia\",\n    zone: \"Etc/GMT-2\",\n    flag: \"LV\",\n    cities: cityList.filter(city => city.country === \"LV\")\n  },\n  {\n    country: \"Liechtenstein\",\n    zone: \"Etc/GMT-1\",\n    flag: \"LI\",\n    cities: cityList.filter(city => city.country === \"LI\")\n  },\n  {\n    country: \"Lithuania\",\n    zone: \"Etc/GMT-2\",\n    flag: \"LT\",\n    cities: cityList.filter(city => city.country === \"LT\")\n  },\n  {\n    country: \"Luxembourg\",\n    zone: \"Etc/GMT+0\",\n    flag: \"LU\",\n    cities: cityList.filter(city => city.country === \"LU\")\n  },\n  {\n    country: \"Malta\",\n    zone: \"Etc/GMT-1\",\n    flag: \"MT\",\n    cities: cityList.filter(city => city.country === \"MT\")\n  },\n  {\n    country: \"Moldova\",\n    zone: \"Etc/GMT-2\",\n    flag: \"MD\",\n    cities: cityList.filter(city => city.country === \"MD\")\n  },\n  {\n    country: \"Monaco\",\n    zone: \"Etc/GMT+0\",\n    flag: \"MC\",\n    cities: cityList.filter(city => city.country === \"MC\")\n  },\n  {\n    country: \"Montenegro\",\n    zone: \"Etc/GMT-1\",\n    flag: \"ME\",\n    cities: cityList.filter(city => city.country === \"ME\")\n  },\n  {\n    country: \"Netherlands\",\n    zone: \"Etc/GMT+0\",\n    flag: \"NL\",\n    cities: cityList.filter(city => city.country === \"NL\")\n  },\n  {\n    country: \"North Macedonia\",\n    zone: \"Etc/GMT-1\",\n    flag: \"MK\",\n    cities: cityList.filter(city => city.country === \"MK\")\n  },\n  {\n    country: \"Norway\",\n    subdiv: [\n      {title: \"Agder\"},\n      {title: \"Innlandet\"},\n      {title: \"Møre og Romsdal\"},\n      {title: \"Nordland\"},\n      {title: \"Oslo\"},\n      {title: \"Rogaland\"},\n      {title: \"Troms og Finnmark\"},\n      {title: \"Trøndelag\"},\n      {title: \"Vestfold og Telemark\"},\n      {title: \"Vestland\"},\n      {title: \"Viken\"},\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"NO\",\n    cities: cityList.filter(city => city.country === \"NO\")\n  },\n  {\n    country: \"Norway\",\n    subdiv: [\n      {title: \"Jan Mayen\"}\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"NO\", // eigentlich SJ\n    cities: cityList.filter(city => city.country === \"SJ\" && city.adminCode === \"22\")\n  },\n  {\n    country: \"Norway\",\n    subdiv: [\n      {title: \"Svalbard\"}\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"NO\", // eigentlich SJ\n    cities: cityList.filter(city => city.country === \"SJ\" && city.adminCode === \"21\")\n  },\n  {\n    country: \"Poland\",\n    zone: \"Etc/GMT-1\",\n    flag: \"PL\",\n    cities: cityList.filter(city => city.country === \"PL\")\n  },\n  {\n    country: \"Portugal\",\n    subdiv: [\n      {title: \"Aveiro\"}, // 02\n      {title: \"Beja\"}, // 03\n      {title: \"Braga\"}, // 04\n      {title: \"Bragança\"}, // 05\n      {title: \"Castelo Branco\"}, // 06\n      {title: \"Coimbra\"}, // 07\n      {title: \"Évora\"}, // 08\n      {title: \"Faro\"}, // 09\n      {title: \"Guarda\"}, // 11\n      {title: \"Leiria\"}, // 13\n      {title: \"Lisboa\"}, // 14\n      {title: \"Portalegre\"}, // 16\n      {title: \"Porto\"}, // 17\n      {title: \"Santarém\"}, // 18\n      {title: \"Setúbal\"}, // 19\n      {title: \"Viana do Castelo\"}, // 20\n      {title: \"Vila Real\"}, // 21\n      {title: \"Viseu\"}, // 22\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"PT\",\n    cities: cityList.filter(city => {\n      if(city.country === \"PT\") {\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"06\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\") return true\n        if(city.adminCode === \"09\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"16\") return true\n        if(city.adminCode === \"17\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"19\") return true\n        if(city.adminCode === \"20\") return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"22\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Portugal\",\n    subdiv: [\n      {title: \"Madeira\"} // 10\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"PT\",\n    cities: cityList.filter(city => city.country === \"PT\" && city.adminCode === \"10\")\n  },\n  {\n    country: \"Portugal\",\n    subdiv: [\n      {title: \"Azores\"} // 23\n    ],\n    zone: \"Etc/GMT+2\",\n    flag: \"PT\",\n    cities: cityList.filter(city => city.country === \"PT\" && city.adminCode === \"23\")\n  },\n  {\n    country: \"Romania\",\n    zone: \"Etc/GMT-2\",\n    flag: \"RO\",\n    cities: cityList.filter(city => city.country === \"RO\")\n  },\n  {\n    country: \"San Marino\",\n    zone: \"Etc/GMT-1\",\n    flag: \"SM\",\n    cities: cityList.filter(city => city.country === \"SM\")\n  },\n  {\n    country: \"Serbia\",\n    zone: \"Etc/GMT-1\",\n    flag: \"RS\",\n    cities: cityList.filter(city => city.country === \"RS\")\n  },\n  {\n    country: \"Slovakia\",\n    zone: \"Etc/GMT-1\",\n    flag: \"SK\",\n    cities: cityList.filter(city => city.country === \"SK\")\n  },\n  {\n    country: \"Slovenia\",\n    zone: \"Etc/GMT-1\",\n    flag: \"SI\",\n    cities: cityList.filter(city => city.country === \"SI\")\n  },\n  {\n    country: \"Spain\",\n    subdiv: [\n      {title: \"Andalucía\"}, // 51\n      {title: \"Aragón\"}, // 52\n      {title: \"Asturies\"}, // 34\n      {title: \"Cantabria\"}, // 39\n      {title: \"Castilla y León\"}, // 55\n      {title: \"Castilla-La Mancha\"}, // 54\n      {title: \"Catalunya\"}, // 56\n      {title: \"Extremadura\"}, // 57\n      {title: \"Galicia\"}, // 58\n      {title: \"Illes Balears\"}, // 07\n      {title: \"Murcia\"}, // 31\n      {title: \"Comunidad de Madrid\"}, // 29\n      {title: \"Navarra\"}, // 32\n      {title: \"Euskal Autonomia Erkidegoa\"}, // 59\n      {title: \"La Rioja\"}, // 27\n      {title: \"Comunidad Valenciana\"}, // 60\n    ],\n    zone: \"Etc/GMT+0\",\n    flag: \"ES\",\n    cities: cityList.filter(city => {\n      if(city.country === \"ES\") {\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"27\") return true\n        if(city.adminCode === \"29\") return true\n        if(city.adminCode === \"31\") return true\n        if(city.adminCode === \"32\") return true\n        if(city.adminCode === \"34\") return true\n        if(city.adminCode === \"39\") return true\n        if(city.adminCode === \"51\") return true\n        if(city.adminCode === \"52\") return true\n        if(city.adminCode === \"54\") return true\n        if(city.adminCode === \"55\") return true\n        if(city.adminCode === \"56\") return true\n        if(city.adminCode === \"57\") return true\n        if(city.adminCode === \"58\") return true\n        if(city.adminCode === \"59\") return true\n        if(city.adminCode === \"60\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Spain\",\n    subdiv: [\n      {title: \"Canarias\"} // 53\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"ES\",\n    cities: cityList.filter(city => city.country === \"ES\" && city.adminCode === \"53\")\n  },\n  {\n    country: \"Sweden\",\n    zone: \"Etc/GMT-1\",\n    flag: \"SE\",\n    cities: cityList.filter(city => city.country === \"SE\")\n  },\n  {\n    country: \"Switzerland\",\n    zone: \"Etc/GMT-1\",\n    flag: \"CH\",\n    cities: cityList.filter(city => city.country === \"CH\")\n  },\n  {\n    country: \"United Kingdom\",\n    subdiv: [\n      {title: \"England\"}, // ENG\n      {title: \"Scotland\"}, // SCT\n      {title: \"Wales\"} // WLS\n    ],\n    zone: \"Etc/GMT+0\",\n    flag: \"GB\",\n    cities: cityList.filter(city => {\n      if(city.country === \"GB\") {\n        if(city.adminCode === \"ENG\") return true\n        if(city.adminCode === \"SCT\") return true\n        if(city.adminCode === \"WLS\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"United Kingdom\",\n    subdiv: [\n      {title: \"Northern Ireland\"} // NIR\n    ],\n    zone: \"Etc/GMT+1\",\n    flag: \"GB\",\n    cities: cityList.filter(city => city.country === \"GB\" && city.adminCode === \"NIR\")\n  },\n  {\n    country: \"Ukraine\",\n    zone: \"Etc/GMT-2\",\n    flag: \"UA\",\n    cities: cityList.filter(city => city.country === \"UA\")\n  },\n  {\n    country: \"Vatican City\",\n    zone: \"Etc/GMT-1\",\n    flag: \"VA\",\n    cities: cityList.filter(city => city.country === \"VA\")\n  }\n]\n","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Indonesia\",\n    subdiv: [\n      {title: \"Aceh\"}, // 01\n      {title: \"Bengkulu\"}, // 03\n      {title: \"Jakarta Raya\"}, // 04\n      {title: \"Jambi\"}, // 05\n      {title: \"Jawa Tengah\"}, // 07\n      {title: \"Jawa Timur\"}, // 08\n      {title: \"Yogyakarta\"}, // 10\n      {title: \"Kalimantan Barat\"}, // 11\n      {title: \"Kalimantan Tengah\"}, // 13 \n      {title: \"Lampung\"}, // 15\n      {title: \"Sumatera Barat\"}, // 24\n      {title: \"Sumatera Utara\"}, // 26\n      {title: \"Jawa Barat\"}, // 30\n      {title: \"Sumatera Selatan\"}, // 32\n      {title: \"Banten\"}, // 33\n      {title: \"Bangka-Belitung\"}, // 35\n      {title: \"Riau\"}, // 37\n      {title: \"Kepulauan Riau\"}, // 40\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"ID\",\n    cities: cityList.filter(city => {\n      if(city.country === \"ID\") {\n        if(city.adminCode === \"01\") return true\n        if(city.adminCode === \"03\") return true\n        if(city.adminCode === \"04\") return true\n        if(city.adminCode === \"05\") return true\n        if(city.adminCode === \"07\") return true\n        if(city.adminCode === \"08\") return true\n        if(city.adminCode === \"10\") return true\n        if(city.adminCode === \"11\") return true\n        if(city.adminCode === \"13\") return true\n        if(city.adminCode === \"15\") return true\n        if(city.adminCode === \"24\") return true\n        if(city.adminCode === \"26\") return true\n        if(city.adminCode === \"30\") return true\n        if(city.adminCode === \"32\") return true\n        if(city.adminCode === \"33\") return true\n        if(city.adminCode === \"35\") return true\n        if(city.adminCode === \"37\") return true\n        if(city.adminCode === \"40\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Indonesia\",\n    subdiv: [\n      {title: \"Bali\"}, // 02\n      {title: \"Kalimantan Selatan\"}, // 12\n      {title: \"Kalimantan\"}, // 14 \n      {title: \"Nusa Tenggara Barat\"}, // 17\n      {title: \"Nusa Tenggara Timur\"}, // 18 \n      {title: \"Sulawesi Tengah\"}, // 21\n      {title: \"Sulawesi Tenggara\"}, // 22\n      {title: \"Sulawesi Utara\"}, // 31\n      {title: \"Gorontalo\"}, // 34\n      {title: \"Sulawesi Selatan\"}, // 38\n      {title: \"Sulawesi Barat\"}, // 41\n      {title: \"Kalimantan Utara\"}, // 42\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"ID\",\n    cities: cityList.filter(city => {\n      if(city.country === \"ID\") {\n        if(city.adminCode === \"02\") return true\n        if(city.adminCode === \"12\") return true\n        if(city.adminCode === \"14\") return true\n        if(city.adminCode === \"17\") return true\n        if(city.adminCode === \"18\") return true\n        if(city.adminCode === \"21\") return true\n        if(city.adminCode === \"22\") return true\n        if(city.adminCode === \"31\") return true\n        if(city.adminCode === \"34\") return true\n        if(city.adminCode === \"38\") return true\n        if(city.adminCode === \"41\") return true\n        if(city.adminCode === \"42\") return true\n        return false\n      }\n      return false\n    })\n  },\n  {\n    country: \"Indonesia\",\n    subdiv: [\n      {title: \"Maluku\"}, // 28\n      {title: \"Maluku Utara\"}, // 29\n      {title: \"Papua\"}, // 36\n      {title: \"West Papua\"}, // 39\n    ],\n    zone: \"Etc/GMT-9\",\n    flag: \"ID\",\n    cities: cityList.filter(city => {\n      if(city.country === \"ID\") {\n        if(city.adminCode === \"28\") return true\n        if(city.adminCode === \"29\") return true\n        if(city.adminCode === \"36\") return true\n        if(city.adminCode === \"39\") return true\n        return false\n      }\n      return false\n    })\n  },\n]\n","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Afghanistan\",\n    utcOffset: 270,\n    flag: \"AF\",\n    cities: cityList.filter(city => city.country === \"AF\")\n  },\n  {\n    country: \"Armenia\",\n    zone: \"Etc/GMT-3\",\n    flag: \"AM\",\n    cities: cityList.filter(city => city.country === \"AM\")\n  },\n  {\n    country: \"Azerbaijan\",\n    zone: \"Etc/GMT-3\",\n    flag: \"AZ\",\n    cities: cityList.filter(city => city.country === \"AZ\")\n  },\n  {\n    country: \"Bahrain\",\n    zone: \"Etc/GMT-3\",\n    flag: \"BH\",\n    cities: cityList.filter(city => city.country === \"BH\")\n  },\n  {\n    country: \"Georgia\",\n    zone: \"Etc/GMT-3\",\n    flag: \"GE\",\n    cities: cityList.filter(city => city.country === \"GE\")\n  },\n  {\n    country: \"Iran\",\n    utcOffset: 210,\n    flag: \"IR\",\n    cities: cityList.filter(city => city.country === \"IR\")\n  },\n  {\n    country: \"Iraq\",\n    zone: \"Etc/GMT-3\",\n    flag: \"IQ\",\n    cities: cityList.filter(city => city.country === \"IQ\")\n  },\n  {\n    country: \"Israel\",\n    zone: \"Etc/GMT-2\",\n    flag: \"IL\",\n    cities: cityList.filter(city => city.country === \"IL\")\n  },\n  {\n    country: \"Jordan\",\n    zone: \"Etc/GMT-2\",\n    flag: \"JO\",\n    cities: cityList.filter(city => city.country === \"JO\")\n  },\n  {\n    country: \"Kuwait\",\n    zone: \"Etc/GMT-3\",\n    flag: \"KW\",\n    cities: cityList.filter(city => city.country === \"KW\")\n  },\n  {\n    country: \"Lebanon\",\n    zone: \"Etc/GMT-2\",\n    flag: \"LB\",\n    cities: cityList.filter(city => city.country === \"LB\")\n  },\n  {\n    country: \"Oman\",\n    zone: \"Etc/GMT-4\",\n    flag: \"OM\",\n    cities: cityList.filter(city => city.country === \"OM\")\n  },\n  {\n    country: \"Palestine\",\n    zone: \"Etc/GMT-2\",\n    flag: \"PS\",\n    cities: cityList.filter(city => city.country === \"PS\")\n  },\n  {\n    country: \"Qatar\",\n    zone: \"Etc/GMT-3\",\n    flag: \"QA\",\n    cities: cityList.filter(city => city.country === \"QA\")\n  },\n  {\n    country: \"Saudi Arabia\",\n    zone: \"Etc/GMT-3\",\n    flag: \"SA\",\n    cities: cityList.filter(city => city.country === \"SA\")\n  },\n  {\n    country: \"Syria\",\n    zone: \"Etc/GMT-3\",\n    flag: \"SY\",\n    cities: cityList.filter(city => city.country === \"SY\")\n  },\n  {\n    country: \"Turkey\",\n    subdiv: [\n      {title: \"Adana\"}, // 81\n      {title: \"Afyonkarahisar\"}, // 03\n      {title: \"Aksaray\"}, // 75\n      {title: \"Amasya\"}, // 05\n      {title: \"Ankara\"}, // 68\n      {title: \"Antalya\"}, // 07\n      {title: \"Aydin\"}, // 09\n      {title: \"Balıkesir\"}, // 10\n      {title: \"Bartın\"}, // 87\n      {title: \"Bilecik\"}, // 11\n      {title: \"Bolu\"}, // 14\n      {title: \"Burdur\"}, // 15\n      {title: \"Bursa\"}, // 16\n      {title: \"Çanakkale\"}, // 17\n      {title: \"Çankırı\"}, // 82\n      {title: \"Çorum\"}, // 19\n      {title: \"Denizli\"}, // 20\n      {title: \"Düzce\"}, // 93\n      {title: \"Edirne\"}, // 22\n      {title: \"Eskişehir\"}, // 26\n      {title: \"Hatay\"}, // 31\n      {title: \"Isparta\"}, // 33\n      {title: \"Mersin\"}, // 32\n      {title: \"İstanbul\"}, // 34\n      {title: \"İzmir\"}, // 35\n      {title: \"Kahramanmaraş\"}, // 46\n      {title: \"Karabük\"}, // 89\n      {title: \"Karaman\"}, // 78\n      {title: \"Kastamonu\"}, // 37\n      {title: \"Kayseri\"}, // 38\n      {title: \"Kırıkkale\"}, // 79\n      {title: \"Kırklareli\"}, // 39\n      {title: \"Kırşehir\"}, // 40\n      {title: \"Kocaeli\"}, // 41\n      {title: \"Konya\"}, // 71\n      {title: \"Kütahya\"}, // 43\n      {title: \"Manisa\"}, // 45\n      {title: \"Muğla\"}, // 48\n      {title: \"Nevşehir\"}, // 50\n      {title: \"Niğde\"}, // 73\n      {title: \"Osmaniye\"}, // 91\n      {title: \"Sakarya\"}, // 54\n      {title: \"Samsun\"}, // 55\n      {title: \"Sinop\"}, // 57\n      {title: \"Sivas\"}, // 58\n      {title: \"Tekirdağ\"}, // 59\n      {title: \"Tokat\"}, // 60\n      {title: \"Uşak\"}, // 64\n      {title: \"Yalova\"}, // 92\n      {title: \"Yozgat\"}, // 66\n      {title: \"Zonguldak\"}, // 85\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"TR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"TR\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"05\":\n          case \"07\":\n          case \"09\":\n          case \"10\":\n          case \"11\":\n          case \"14\":\n          case \"15\":\n          case \"16\":\n          case \"17\":\n          case \"19\":\n          case \"20\":\n          case \"22\":\n          case \"26\":\n          case \"31\":\n          case \"32\":\n          case \"33\":\n          case \"34\":\n          case \"35\":\n          case \"37\":\n          case \"38\":\n          case \"39\":\n          case \"40\":\n          case \"41\":\n          case \"43\":\n          case \"45\":\n          case \"46\":\n          case \"48\":\n          case \"50\":\n          case \"54\":\n          case \"55\":\n          case \"57\":\n          case \"58\":\n          case \"59\":\n          case \"60\":\n          case \"64\":\n          case \"66\":\n          case \"68\":\n          case \"71\":\n          case \"73\":\n          case \"75\":\n          case \"78\":\n          case \"79\":\n          case \"81\":\n          case \"82\":\n          case \"85\":\n          case \"87\":\n          case \"89\":\n          case \"91\":\n          case \"92\":\n          case \"93\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Turkey\",\n    subdiv: [\n      {title: \"Adıyaman\"}, // 02\n      {title: \"Ağrı\"}, // 04\n      {title: \"Ardahan\"}, // 86\n      {title: \"Artvin\"}, // 08\n      {title: \"Batman\"}, // 76\n      {title: \"Bayburt\"}, // 77\n      {title: \"Bingöl\"}, // 12\n      {title: \"Bitlis\"}, // 13\n      {title: \"Diyarbakır\"}, // 21\n      {title: \"Elazığ\"}, // 23\n      {title: \"Erzincan\"}, // 24\n      {title: \"Erzurum\"}, // 25\n      {title: \"Gaziantep\"}, // 83\n      {title: \"Giresun\"}, // 28\n      {title: \"Gümüşhane\"}, // 69\n      {title: \"Hakkari\"}, // 70\n      {title: \"Iğdır\"}, // 88\n      {title: \"Kars\"}, // 84\n      {title: \"Kilis\"}, // 90\n      {title: \"Malatya\"}, // 44\n      {title: \"Mardin\"}, // 72\n      {title: \"Muş\"}, // 49\n      {title: \"Ordu\"}, // 52\n      {title: \"Rize\"}, // 53\n      {title: \"Şanlıurfa\"}, // 63\n      {title: \"Siirt\"}, // 74\n      {title: \"Şırnak\"}, // 80\n      {title: \"Trabzon\"}, // 61\n      {title: \"Tunceli\"}, // 62\n      {title: \"Van\"}, // 65\n    ],\n    zone: \"Etc/GMT-3\",\n    flag: \"TR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"TR\") {\n        switch(city.adminCode) {\n          case \"02\":\n          case \"04\":\n          case \"08\":\n          case \"12\":\n          case \"13\":\n          case \"21\":\n          case \"23\":\n          case \"24\":\n          case \"25\":\n          case \"28\":\n          case \"44\":\n          case \"49\":\n          case \"52\":\n          case \"53\":\n          case \"61\":\n          case \"62\":\n          case \"63\":\n          case \"65\":\n          case \"69\":\n          case \"70\":\n          case \"72\":\n          case \"74\":\n          case \"76\":\n          case \"77\":\n          case \"80\":\n          case \"83\":\n          case \"84\":\n          case \"86\":\n          case \"88\":\n          case \"90\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"United Arab Emirates\",\n    utcOffset: 210,\n    flag: \"AE\",\n    cities: cityList.filter(city => city.country === \"AE\")\n  },\n  {\n    country: \"Yemen\",\n    zone: \"Etc/GMT-3\",\n    flag: \"YE\",\n    cities: cityList.filter(city => city.country === \"YE\")\n  }\n]\n","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"American Samoa (United States)\",\n    zone: \"Etc/GMT+11\",\n    flag: \"AS\",\n    cities: cityList.filter(city => city.country === \"AS\")\n  },\n  {\n    country: \"Cook Islands (New Zealand)\",\n    zone: \"Etc/GMT+11\",\n    flag: \"CK\",\n    cities: cityList.filter(city => city.country === \"CK\")\n  },\n  {\n    country: \"Fiji\",\n    zone: \"Etc/GMT-12\",\n    flag: \"FJ\",\n    cities: cityList.filter(city => city.country === \"FJ\")\n  },\n  {\n    country: \"French Polynesia (France)\",\n    subdiv: [\n      {title: \"Austral Islands\"}, // 05\n      {title: \"Society Islands\"}, // 01, 02\n      {title: \"Tuamotus\"} // part of 03\n    ],\n    zone: \"Etc/GMT+10\",\n    flag: \"PF\",\n    cities: cityList.filter(city => {\n      if(city.country === \"PF\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"02\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"French Polynesia (France)\",\n    subdiv: [\n      {title: \"Gambier Islands\"} // part of 03\n    ],\n    zone: \"Etc/GMT+9\",\n    flag: \"PF\"\n  },\n  {\n    country: \"French Polynesia (France)\",\n    subdiv: [\n      {title: \"Marquesas Islands\"} // 04\n    ],\n    zone: \"Etc/GMT+9\",\n    flag: \"PF\",\n    cities: cityList.filter(city => city.country === \"PF\" && city.adminCode === \"04\")\n  },\n  {\n    country: \"Guam (United States)\",\n    zone: \"Etc/GMT-10\",\n    flag: \"GU\",\n    cities: cityList.filter(city => city.country === \"GU\")\n  },\n  {\n    country: \"Kiribati\",\n    subdiv: [\n      {title: \"Banaba\"}, \n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"KI\"\n  },\n  {\n    country: \"Kiribati\",\n    subdiv: [\n      {title: \"Gilbert Islands\"}\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"KI\",\n    cities: cityList.filter(city => city.country === \"KI\" && city.adminCode === \"01\")\n  },\n  {\n    country: \"Kiribati\",\n    subdiv: [\n      {title: \"Phoenix Islands\"}\n    ],\n    zone: \"Etc/GMT-13\",\n    flag: \"KI\"\n  },\n  {\n    country: \"Kiribati\",\n    subdiv: [\n      {title: \"Kiritimati\"}, \n      {title: \"Line Islands\"}\n    ],\n    zone: \"Etc/GMT-14\",\n    flag: \"KI\"\n  },\n  {\n    country: \"Marshall Islands\",\n    zone: \"Etc/GMT-11\",\n    flag: \"MH\",\n    cities: cityList.filter(city => city.country === \"MH\")\n  },\n  {\n    country: \"Micronesia\",\n    subdiv: [\n      {title: \"Chuuk\"}, // 03\n      {title: \"Yap\"} // 04\n    ],\n    zone: \"Etc/GMT-10\",\n    flag: \"FM\",\n    cities: cityList.filter(city => {\n      if(city.country === \"FM\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"04\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Micronesia\",\n    subdiv: [\n      {title: \"Kosrae\"}, // 01\n      {title: \"Pohnpei\"} // 02\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"FM\",\n    cities: cityList.filter(city => {\n      if(city.country === \"FM\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"02\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Nauru\",\n    zone: \"Etc/GMT-11\",\n    flag: \"NR\",\n    cities: cityList.filter(city => city.country === \"NR\")\n  },\n  {\n    country: \"New Caledonia (France)\",\n    zone: \"Etc/GMT-11\",\n    flag: \"NC\",\n    cities: cityList.filter(city => city.country === \"NC\")\n  },\n  {\n    country: \"New Zealand\",\n    subdiv: [\n      {title: \"Canterbury\"}, // E9\n      {title: \"Marlborough\"}, // F4\n      {title: \"Nelson\"}, // F5\n      {title: \"Otago\"}, // F7\n      {title: \"Southland\"}, // F8\n      {title: \"West Coast\"}, // G3\n      {title: \"Tasman\"}, // TAS\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"NZ\",\n    cities: cityList.filter(city => {\n      if(city.country === \"NZ\") {\n        switch(city.adminCode) {\n          case \"E9\":\n          case \"F4\":\n          case \"F5\":\n          case \"F7\":\n          case \"F8\":\n          case \"G3\":\n          case \"TAS\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"New Zealand\",\n    subdiv: [\n      {title: \"Auckland\"}, // E7\n      {title: \"Bay of Plenty\"}, // E8\n      {title: \"Gisborne\"}, // F1\n      {title: \"Hawke's Bay\"}, // F2\n      {title: \"Manawatu-Wanganui\"}, // F3\n      {title: \"Northland\"}, // F6\n      {title: \"Taranaki\"}, // F9\n      {title: \"Waikato\"}, // G1\n      {title: \"Wellington\"}, // G2\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"NZ\",\n    cities: cityList.filter(city => {\n      if(city.country === \"NZ\") {\n        switch(city.adminCode) {\n          case \"E7\":\n          case \"E8\":\n          case \"F1\":\n          case \"F2\":\n          case \"F3\":\n          case \"F6\":\n          case \"F9\":\n          case \"G1\":\n          case \"G2\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"New Zealand\",\n    subdiv: [\n      {title: \"Chatham Islands\"} // 10\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"NZ\",\n    cities: cityList.filter(city => city.country === \"NZ\" && city.adminCode === \"10\")\n  },\n  {\n    country: \"Etc/GMT-11\",\n    zone: \"Pacific/Niue\",\n    flag: \"NU\",\n    cities: cityList.filter(city => city.country === \"NU\")\n  },\n  {\n    country: \"Northern Mariana Islands (United States)\",\n    zone: \"Etc/GMT-10\",\n    flag: \"MP\",\n    cities: cityList.filter(city => city.country === \"MP\")\n  },\n  {\n    country: \"Palau\",\n    zone: \"Etc/GMT-9\",\n    flag: \"PW\",\n    cities: cityList.filter(city => city.country === \"PW\")\n  },\n  {\n    country: \"Papua New Guinea\",\n    zone: \"Etc/GMT-10\",\n    flag: \"PG\",\n    cities: cityList.filter(city => city.country === \"PG\")\n  },\n  {\n    country: \"Pitcairn Islands (United Kingdom)\",\n    zone: \"Etc/GMT-9\",\n    flag: \"PN\",\n    cities: cityList.filter(city => city.country === \"PN\")\n  },\n  {\n    country: \"Samoa\",\n    zone: \"Etc/GMT-13\",\n    flag: \"WS\",\n    cities: cityList.filter(city => city.country === \"WS\")\n  },\n  {\n    country: \"Solomon Islands\",\n    zone: \"Etc/GMT-11\",\n    flag: \"SB\",\n    cities: cityList.filter(city => city.country === \"SB\")\n  },\n  {\n    country: \"Tokelau (New Zealand)\",\n    zone: \"Etc/GMT-13\",\n    flag: \"TK\",\n    cities: cityList.filter(city => city.country === \"TK\")\n  },\n  {\n    country: \"Tonga\",\n    zone: \"Etc/GMT-12\",\n    flag: \"TO\",\n    cities: cityList.filter(city => city.country === \"TO\")\n  },\n  {\n    country: \"Tuvalu\",\n    zone: \"Etc/GMT-12\",\n    flag: \"TV\",\n    cities: cityList.filter(city => city.country === \"TV\")\n  },\n  {\n    country: \"United States\",\n    subdiv: [\n      {title: \"Hawaii\"}\n    ],\n    zone: \"Etc/GMT+10\",\n    flag: \"US\",\n    cities: cityList.filter(city => city.country === \"US\" && city.adminCode === \"HI\")\n  },\n  {\n    country: \"United States\",\n    subdiv: [\n      {title: \"Midway Islands\"}, // 300\n      {title: \"Palmyra Atoll\"} // 400\n    ],\n    zone: \"Etc/GMT+12\",\n    flag: \"US\", // eigentlich UM\n    cities: cityList.filter(city => {\n      if(city.country === \"UM\") {\n        switch(city.adminCode) {\n          case \"300\":\n          case \"400\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"United States\",\n    subdiv: [\n      {title: \"Wake\"}\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"US\", // eigentlich UM\n    cities: cityList.filter(city => city.country === \"UM\" && city.adminCode === \"450\")\n  },\n  {\n    country: \"Vanuatu\",\n    zone: \"Etc/GMT-11\",\n    flag: \"VU\",\n    cities: cityList.filter(city => city.country === \"VU\")\n  },\n  {\n    country: \"Wallis and Futuna (France)\",\n    zone: \"Etc/GMT-12\",\n    flag: \"WF\",\n    cities: cityList.filter(city => city.country === \"WF\")\n  }\n]\n","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Russia\",\n    subdiv: [\n      {title: \"Kaliningrad Oblast\"} //23\n    ],\n    zone: \"Etc/GMT-1\",\n    flag: \"RU\",\n    cities: cityList.filter(city => city.country === \"RU\" && city.adminCode === \"23\")\n  },\n  {\n    country: \"Russia\",\n    subdiv: [\n      {title: \"Saint Petersburg\"}, // 66\n      {title: \"Karelia\"}, // 28\n      {title: \"Belgorod Oblast\"}, // 09\n      {title: \"Bryansk Oblast\"}, // 10\n      {title: \"Kaluga Oblast\"}, // 25\n      {title: \"Kursk Oblast\"}, // 41\n      {title: \"Leningrad Oblast\"}, // 42\n      {title: \"Murmansk Oblast\"}, // 49\n      {title: \"Novgorod Oblast\"}, // 52\n      {title: \"Oryol Oblast\"}, // 56\n      {title: \"Pskov Oblast\"}, // 60\n      {title: \"Smolensk Oblast\"}, // 69\n      {title: \"Tula Oblast\"}, // 76\n      {title: \"Tver Oblast\"}, // 77\n    ],\n    zone: \"Etc/GMT-2\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"09\":\n          case \"10\":\n          case \"25\":\n          case \"28\":\n          case \"41\":\n          case \"42\":\n          case \"49\":\n          case \"52\":\n          case \"56\":\n          case \"60\":\n          case \"66\":\n          case \"69\":\n          case \"76\":\n          case \"77\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Russia\",\n    subdiv: [\n      {title: \"Moscow\"}, // 48 \n      {title: \"Adygea\"}, // 01\n      {title: \"Chechnya\"}, // 12\n      {title: \"Chuvashia\"}, // 16\n      {title: \"Dagestan\"}, // 17\n      {title: \"Ingushetia\"},  // 19\n      {title: \"Kabardino-Balkaria\"}, // 22 \n      {title: \"Kalmykia\"}, // 24\n      {title: \"Karachay-Cherkessia\"}, // 27\n      {title: \"Mari El\"}, // 45\n      {title: \"Mordovia\"}, // 46\n      {title: \"North Ossetia-Alania\"}, // 68\n      {title: \"Tatarstan\"}, // 73\n      {title: \"Udmurtia\"}, // 80\n      {title: \"Krasnodar Region\"}, // 38\n      {title: \"Stavropol Region\"}, // 70\n      {title: \"Arkhangelsk Oblast\"}, // 06\n      {title: \"Astrakhan Oblast\"}, // 07\n      {title: \"Ivanovo Oblast\"}, // 21\n      {title: \"Kirov Oblast\"}, // 33\n      {title: \"Kostroma Oblast\"}, // 37\n      {title: \"Lipetsk Oblast\"}, // 43\n      {title: \"Moscow Oblast\"}, // 47\n      {title: \"Nizhnyi Novgorod Oblast\"}, // 51\n      {title: \"Penza Oblast\"}, // 57\n      {title: \"Rostov Oblast\"}, // 61\n      {title: \"Ryazan Oblast\"}, // 62\n      {title: \"Samara Oblast\"}, // 65\n      {title: \"Saratov Oblast\"}, // 67\n      {title: \"Tambov Oblast\"}, // 72\n      {title: \"Ulyanovsk Oblast\"}, // 81\n      {title: \"Vladimir Oblast\"}, // 83\n      {title: \"Volgograd Oblast\"}, // 84\n      {title: \"Vologda Oblast\"}, // 85\n      {title: \"Voronezh Oblast\"}, // 86\n      {title: \"Yaroslavl Oblast\"}, // 88\n      {title: \"Nenets Autonomous Okrug\", extra: \"(west of 52.5° E)\"} // 50\n    ],\n    zone: \"Etc/GMT-3\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"06\":\n          case \"07\":\n          case \"12\":\n          case \"16\":\n          case \"17\":\n          case \"19\":\n          case \"21\":\n          case \"22\":\n          case \"24\":\n          case \"27\":\n          case \"33\":\n          case \"37\":\n          case \"38\":\n          case \"43\":\n          case \"45\":\n          case \"46\":\n          case \"47\":\n          case \"48\":\n          case \"51\":\n          case \"57\":\n          case \"61\":\n          case \"62\":\n          case \"65\":\n          case \"67\":\n          case \"68\":\n          case \"70\":\n          case \"72\":\n          case \"73\":\n          case \"80\":\n          case \"81\":\n          case \"83\":\n          case \"84\":\n          case \"85\":\n          case \"86\":\n          case \"88\":\n            return true\n          case \"50\":\n            if(city.lon < 52.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Russia\",\n    subdiv: [\n      {title: \"Bashkortostan\"}, // 08\n      {title: \"Komi\"}, // 34\n      {title: \"Perm Region\"}, // 90\n      {title: \"Chelyabinsk Oblast\"}, // 13\n      {title: \"Kurgan Oblast\"}, // 40\n      {title: \"Orenburg Oblast\"}, // 55\n      {title: \"Sverdlovsk Oblast\"}, // 71\n      {title: \"Nenets Autonomous Okrug\", extra: \"(east of 52.5° E)\"} // 50\n    ],\n    zone: \"Etc/GMT-4\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"08\":\n          case \"13\":\n          case \"34\":\n          case \"40\":\n          case \"55\":\n          case \"71\":\n          case \"90\":\n            return true\n          case \"50\":\n            if(city.lon >= 52.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Russia\",\n    subdiv: [\n      {title: \"Altai Region\"}, // 04\n      {title: \"Novosibirsk Oblast\"}, // 53\n      {title: \"Omsk Oblast\"}, // 54\n      {title: \"Tyumen Oblast\"}, // 78\n      {title: \"Khanty-Mansi Autonomous Okrug\"}, // 32\n      {title: \"Yamalo-Nenets Autonomous Okrug\"}, // 87\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"04\":\n          case \"32\":\n          case \"53\":\n          case \"54\":\n          case \"78\":\n          case \"87\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Russia\",\n    subdiv: [\n      {title: \"Altai Republic\"}, // 03\n      {title: \"Khakassia\"}, // 31\n      {title: \"Tuva Republic\"}, // 79\n      {title: \"Krasnoyarsk Region\", extra: \"(west of 97.5° E)\"}, // 91\n      {title: \"Kemerovo Oblast\"}, // 29\n      {title: \"Tomsk Oblast\"}, // 75\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"29\":\n          case \"31\":\n          case \"75\":\n          case \"79\":\n            return true\n          case \"91\":\n            if(city.lon < 97.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Russia\",\n    subdiv: [\n      {title: \"Buryatia\"}, // 11\n      {title: \"Sakha\", extra: \"(west of 112.5° E)\"}, // 63\n      {title: \"Krasnoyarsk Region\", extra: \"(east of 97.5°E)\"}, // 91\n      {title: \"Irkutsk Oblast\", extra: \"(west of 112.5° E)\"}, // 20\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"11\":\n            return true\n          case \"91\":\n            if(city.lon >= 97.5) return true\n            return false\n          case \"20\":\n          case \"63\":\n            if(city.lon < 112.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Russia\",\n    subdiv: [\n      {title: \"Sakha\", extra: \"(112.5° E – 127.5° E)\"}, // 63\n      {title: \"Amur Oblast\"}, // 05\n      {title: \"Irkutsk Oblast\", extra: \"(east of 112.5° E)\"}, // 20\n      {title: \"Zabaykalsky Krai\"}, // 93\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"05\":\n          case \"93\":\n            return true\n          case \"20\":\n            if(city.lon >= 112.5) return true\n            return false\n          case \"63\":\n            if(city.lon >= 112.5 && city.lon < 127.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Russia\",\n    subdiv: [\n      {title: \"Sakha\", extra: \"(127.5°E – 142.5° E)\"}, // 63\n      {title: \"Khabarovsk Region\"}, // 30\n      {title: \"Primorsky Krai\"}, // 59\n      {title: \"Sakhalin Oblast\"}, // 64\n      {title: \"Jewish Autonomous Oblast\"}, // 89\n    ],\n    zone: \"Etc/GMT-9\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"30\":\n          case \"59\":\n          case \"64\":\n          case \"89\":\n            return true\n          case \"63\":\n            if(city.lon >= 127.5 && city.lon < 142.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Russia\",\n    subdiv: [\n      {title: \"Sakha\", extra: \"(east of 142.5° E)\"}, // 63\n      {title: \"Magadan Oblast\", extra: \"(west of 157.5° E)\"} // 44\n    ],\n    zone: \"Etc/GMT-10\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"44\":\n            if(city.lon < 157.5) return true\n            return false\n          case \"63\":\n            if(city.lon >= 142.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Russia\",\n    subdiv: [\n      {title: \"Magadan Oblast\", extra: \"(east of 157.5° E)\"}, // 44\n      {title: \"Kamchatka\"}, // 92\n      {title: \"Chukotka Autonomous Okrug\", extra: \"(west of 172.5° E)\"}, // 15\n    ],\n    zone: \"Etc/GMT-11\",\n    flag: \"RU\",\n    cities: cityList.filter(city => {\n      if(city.country === \"RU\") {\n        switch(city.adminCode) {\n          case \"92\":\n            return true\n          case \"15\":\n            if(city.lon < 172.5) return true\n            return false\n          case \"44\":\n            if(city.lon >= 157.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Russia\",\n    subdiv: [\n      {title: \"Chukotka Autonomous Okrug\", extra: \"(east of 172.5° E)\"},\n    ],\n    zone: \"Etc/GMT-12\",\n    flag: \"RU\",\n    cities: cityList.filter(city => city.country === \"RU\" && city.adminCode === \"15\" && city.lon >= 172.5)\n  },\n]","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Argentina\",\n    zone: \"Etc/GMT+4\",\n    flag: \"AR\",\n    cities: cityList.filter(city => city.country === \"AR\")\n  },\n  {\n    country: \"Bolivia\",\n    zone: \"Etc/GMT+4\",\n    flag: \"BO\",\n    cities: cityList.filter(city => city.country === \"BO\")\n  },\n  {\n    country: \"Brazil\",\n    subdiv: [\n      {title: \"Acre\"}, // 01\n      {title: \"Amazonas\", extra: \"(western part)\"} // 04\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"BR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"BR\") {\n        switch(city.adminCode) {\n          case \"01\":\n            return true\n          case \"04\":\n            if(city.lon < -67.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Brazil\",\n    subdiv: [\n      {title: \"Amazonas\", extra: \"(eastern part)\"}, // 04\n      {title: \"Mato Grosso\"}, // 14\n      {title: \"Mato Grosso do Sul\"}, // 11\n      {title: \"Pará\", extra: \"(west of 52.5° W)\"}, // 16\n      {title: \"Rio Grande do Sul\"}, // 23\n      {title: \"Rondônia\"}, // 24\n      {title: \"Roraima\"}, // 25\n    ],\n    zone: \"Etc/GMT+4\",\n    flag: \"BR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"BR\") {\n        switch(city.adminCode) {\n          case \"11\":\n          case \"14\":\n          case \"23\":\n          case \"24\":\n          case \"25\":\n            return true\n          case \"04\":\n            if(city.lon >= -67.5) return true\n            return false\n          case \"16\":\n            if(city.lon < -52.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false \n    })\n  },\n  {\n    country: \"Brazil\",\n    subdiv: [\n      {title: \"Amapá\"}, // 03\n      {title: \"Bahia\"}, // 05\n      {title: \"Ceará\"},  // 06\n      {title: \"Distrito Federal\"}, // 07\n      {title: \"Espírito Santo\"},  // 08\n      {title: \"Goiás\"}, // 29 \n      {title: \"Maranhão\"}, // 13\n      {title: \"Minas Gerais\"}, // 15\n      {title: \"Pará\", extra: \"(east of 52.5° W)\"}, // 16\n      {title: \"Paraná\"}, // 18\n      {title: \"Pernambuco\"}, // 30\n      {title: \"Piauí\"}, // 20\n      {title: \"Rio de Janeiro\"}, // 21\n      {title: \"Santa Catarina\"}, // 26\n      {title: \"São Paulo\"}, // 27\n      {title: \"Tocantins\"}, // 31\n    ],\n    zone: \"Etc/GMT+3\",\n    flag: \"BR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"BR\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"05\":\n          case \"06\":\n          case \"07\":\n          case \"08\":\n          case \"13\":\n          case \"15\":\n          case \"18\":\n          case \"20\":\n          case \"21\":\n          case \"26\":\n          case \"27\":\n          case \"29\":\n          case \"30\":\n          case \"31\":\n            return true\n          case \"16\":\n            if(city.lon >= -52.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Brazil\",\n    subdiv: [\n      {title: \"Alagoas\"}, // 02\n      {title: \"Fernando de Noronha\"}, \n      {title: \"Paraíba\"}, // 17\n      {title: \"Rio Grande do Norte\"}, // 22\n      {title: \"Sergipe\"}, // 28\n      {title: \"Trinidade\"}, \n    ],\n    zone: \"Etc/GMT+2\",\n    flag: \"BR\",\n    cities: cityList.filter(city => {\n      if(city.country === \"BR\") {\n        if(city.tz === \"America/Noronha\") return true\n        switch(city.adminCode) {\n          case \"02\":\n          case \"17\":\n          case \"22\":\n          case \"28\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Chile\",\n    subdiv: [\n      {title: \"Easter Island\"}\n    ],\n    zone: \"Etc/GMT+7\",\n    flag: \"CL\",\n    cities: cityList.filter(city => city.country === \"CL\" && city.tz === \"Pacific/Easter\")\n  },\n  {\n    country: \"Chile\",\n    subdiv: [\n      {title: \"Aisén\"},\n      {title: \"Antofagasta\"},\n      {title: \"Araucanía\"},\n      {title: \"Arica and Parinacota\"},\n      {title: \"Atacama\"},\n      {title: \"Biobío\"},\n      {title: \"Coquimbo\"},\n      {title: \"Los Lagos\"},\n      {title: \"Los Ríos\"},\n      {title: \"Magallanes and Antártica Chilena Region\"},\n      {title: \"Maule\"},\n      {title: \"Ñuble\"},\n      {title: \"Región del Libertador Bernardo O'Higgins\"},\n      {title: \"Santiago\"},\n      {title: \"Tarapacá\"},\n      {title: \"Valparaíso\", extra: \"(continental part)\"},\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"CL\",\n    cities: cityList.filter(city => city.country === \"CL\" && city.tz !== \"Pacific/Easter\")\n  },\n  {\n    country: \"Colombia\",\n    zone: \"Etc/GMT+5\",\n    flag: \"CO\",\n    cities: cityList.filter(city => city.country === \"CO\")\n  },\n  {\n    country: \"Ecuador\",\n    subdiv: [\n      {title: \"Azuay\"},\n      {title: \"Bolívar\"},\n      {title: \"Cañar\"},\n      {title: \"Carchi\"},\n      {title: \"Chimborazo\"},\n      {title: \"Cotopaxi\"},\n      {title: \"El Oro\"},\n      {title: \"Esmeraldas\"},\n      {title: \"Guayas\"},\n      {title: \"Imbabura\"},\n      {title: \"Loja\"},\n      {title: \"Los Ríos\"},\n      {title: \"Manabí\"},\n      {title: \"Morona Santiago\"},\n      {title: \"Napo\"},\n      {title: \"Orellana\"},\n      {title: \"Pastaza\"},\n      {title: \"Pichincha\"},\n      {title: \"Santa Elena\"},\n      {title: \"Santo Domingo de los Tsáchilas\"},\n      {title: \"Sucumbíos\"},\n      {title: \"Tungurahua\"},\n      {title: \"Zamora Chinchipe\"}\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"EC\",\n    cities: cityList.filter(city => city.country === \"CL\" && city.tz !== \"Pacific/Galapagos\")\n  },\n  {\n    country: \"Ecuador\",\n    subdiv: [\n      {title: \"Galápagos\"}\n    ],\n    zone: \"Etc/GMT+6\",\n    flag: \"EC\",\n    cities: cityList.filter(city => city.country === \"CL\" && city.tz === \"Pacific/Galapagos\")\n  },\n  {\n    country: \"Falkland Islands (United Kingdom)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"FK\",\n    cities: cityList.filter(city => city.country === \"FK\")\n  },\n  {\n    country: \"French Guiana (France)\",\n    zone: \"Etc/GMT+4\",\n    flag: \"GF\",\n    cities: cityList.filter(city => city.country === \"GF\")\n  },\n  {\n    country: \"Guyana\",\n    zone: \"Etc/GMT+4\",\n    flag: \"GY\",\n    cities: cityList.filter(city => city.country === \"GY\")\n  },\n  {\n    country: \"Paraguay\",\n    zone: \"Etc/GMT+4\",\n    flag: \"PY\",\n    cities: cityList.filter(city => city.country === \"PY\")\n  },\n  {\n    country: \"Peru\",\n    zone: \"Etc/GMT+5\",\n    flag: \"PE\",\n    cities: cityList.filter(city => city.country === \"PE\")\n  },\n  {\n    country: \"South Georgia and the South Sandwich Islands (United Kingdom)\",\n    zone: \"Etc/GMT+2\",\n    flag: \"GS\",\n    cities: cityList.filter(city => city.country === \"GS\")\n  },\n  {\n    country: \"Suriname\",\n    zone: \"Etc/GMT+4\",\n    flag: \"SR\",\n    cities: cityList.filter(city => city.country === \"SR\")\n  },\n  {\n    country: \"Uruguay\",\n    zone: \"Etc/GMT+4\",\n    flag: \"UY\",\n    cities: cityList.filter(city => city.country === \"UY\")\n  },\n  {\n    country: \"Venezuela\",\n    zone: \"Etc/GMT+4\",\n    flag: \"VE\",\n    cities: cityList.filter(city => city.country === \"VE\")\n  }\n]","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Bangladesh\",\n    zone: \"Etc/GMT-6\",\n    flag: \"BD\",\n    cities: cityList.filter(city => city.country === \"BD\")\n  },\n  {\n    country: \"Bhutan\",\n    zone: \"Etc/GMT-6\",\n    flag: \"BT\",\n    cities: cityList.filter(city => city.country === \"BT\")\n  },\n  {\n    country: \"British Indian Ocean Territory (United Kingdom)\",\n    zone: \"Etc/GMT-5\",\n    flag: \"IO\",\n    cities: cityList.filter(city => city.country === \"IO\")\n  },\n  {\n    country: \"Cocos Islands (Australia)\",\n    zone: \"Etc/GMT-6\",\n    flag: \"CC\",\n    cities: cityList.filter(city => city.country === \"CC\")\n  },\n  {\n    country: \"India\",\n    subdiv: [\n      {title: \"Andhra Pradesh\"}, // 02\n      {title: \"Chhattisgarh\"}, // 37\n      {title: \"Goa\"}, // 33\n      {title: \"Gujarat\"}, // 09\n      {title: \"Haryana\"}, // 10\n      {title: \"Himachal Pradesh\"}, // 11\n      {title: \"Karnataka\"}, // 19\n      {title: \"Kerala\"}, // 13\n      {title: \"Madhya Pradesh\"}, // 35\n      {title: \"Maharashtra\"}, // 16\n      {title: \"Punjab\"}, // 23\n      {title: \"Rajasthan\"}, // 24\n      {title: \"Tamil Nadu\"}, // 25\n      {title: \"Telangana\"}, // 40\n      {title: \"Uttarakhand\"}, // 39\n      {title: \"Uttar Pradesh\"}, // 36\n      {title: \"Dadra and Nagar Haveli and Daman and Du\"}, // 52\n      {title: \"Delhi\"}, // 07\n      {title: \"Jammu and Kashmir\"}, // 12\n      {title: \"Ladakh\"}, // 41\n      {title: \"Lakshadweep\"}, // 14\n      {title: \"Puducherry\"}, // 22\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"IN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"IN\") {\n        switch(city.adminCode) {\n          case \"02\":\n          case \"07\":\n          case \"09\":\n          case \"10\":\n          case \"11\":\n          case \"12\":\n          case \"13\":\n          case \"14\":\n          case \"16\":\n          case \"19\":\n          case \"22\":\n          case \"23\":\n          case \"24\":\n          case \"25\":\n          case \"33\":\n          case \"35\":\n          case \"36\":\n          case \"37\":\n          case \"39\":\n          case \"40\":\n          case \"41\":\n          case \"52\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"India\",\n    subdiv: [\n      {title: \"Arunachal Pradesh\"}, // 30\n      {title: \"Assam\"}, // 03\n      {title: \"Bihar\"}, // 34\n      {title: \"Jharkhand\"}, // 38\n      {title: \"Manipur\"}, // 17\n      {title: \"Meghalaya\"}, // 18\n      {title: \"Mizoram\"}, // 31\n      {title: \"Nagaland\"}, // 20\n      {title: \"Odisha\"}, // 21\n      {title: \"Sikkim\"}, // 29\n      {title: \"Tripura\"}, // 26\n      {title: \"West Bengal\"}, // 28\n      {title: \"Andaman and Nicobar Islands\"}, // 01\n      {title: \"Chandigarh\"}, // 05\n    ],\n    zone: \"Etc/GMT-6\",\n    flag: \"IN\",\n    cities: cityList.filter(city => {\n      if(city.country === \"IN\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"03\":\n          case \"05\":\n          case \"17\":\n          case \"18\":\n          case \"20\":\n          case \"21\":\n          case \"26\":\n          case \"28\":\n          case \"29\":\n          case \"30\":\n          case \"31\":\n          case \"34\":\n          case \"38\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Myanmar\",\n    utcOffset: 390,\n    flag: \"MM\",\n    cities: cityList.filter(city => city.country === \"MM\")\n  },\n  {\n    country: \"Nepal\",\n    zone: \"Etc/GMT-5\",\n    flag: \"NP\",\n    cities: cityList.filter(city => city.country === \"NP\")\n  },\n  {\n    country: \"Maldives\",\n    zone: \"Etc/GMT-5\",\n    flag: \"MV\",\n    cities: cityList.filter(city => city.country === \"MV\")\n  },\n  {\n    country: \"Pakistan\",\n    subdiv: [\n      {title: \"Balochistan\"}, // 02\n    ],\n    zone: \"Etc/GMT-4\",\n    flag: \"PK\",\n    cities: cityList.filter(city => city.country === \"PK\" && city.adminCode === \"02\")\n  },\n  {\n    country: \"Pakistan\",\n    subdiv: [\n      {title: \"Azad Jammu and Kashmir\"}, // 06\n      {title: \"Gilgit-Baltistan\"}, // 07\n      {title: \"Islamabad Capital Territory\"}, // 08\n      {title: \"Khyber Pakhtunkhwa\"}, // 03\n      {title: \"Punjab\"}, // 04\n      {title: \"Sindh\"}, // 05\n    ],\n    zone: \"Etc/GMT-5\",\n    flag: \"PK\",\n    cities: cityList.filter(city => {\n      if(city.country === \"PK\") {\n        switch(city.adminCode) {\n          case \"03\":\n          case \"04\":\n          case \"05\":\n          case \"06\":\n          case \"07\":\n          case \"08\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Sri Lanka\",\n    zone: \"Etc/GMT-5\",\n    flag: \"LK\",\n    cities: cityList.filter(city => city.country === \"LK\")\n  }\n]\n","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"Brunei\",\n    zone: \"Etc/GMT-8\",\n    flag: \"BN\",\n    cities: cityList.filter(city => city.country === \"BN\")\n  },\n  {\n    country: \"Cambodia\",\n    zone: \"Etc/GMT-7\",\n    flag: \"KH\",\n    cities: cityList.filter(city => city.country === \"KH\")\n  },\n  {\n    country: \"Christmas Island (Australia)\",\n    zone: \"Etc/GMT-7\",\n    flag: \"CX\",\n    cities: cityList.filter(city => city.country === \"CX\")\n  },\n  {\n    country: \"Laos\",\n    zone: \"Etc/GMT-7\",\n    flag: \"LA\",\n    cities: cityList.filter(city => city.country === \"LA\")\n  },\n  {\n    country: \"Malaysia\",\n    subdiv: [\n      {title: \"Johor\"}, // 01\n      {title: \"Kedah\"}, // 02\n      {title: \"Kelantan\"}, // 03\n      {title: \"Kuala Lumpur\"}, // 14\n      {title: \"Malacca\"}, // 04\n      {title: \"Negeri Sembilan\"}, // 05\n      {title: \"Pahang\"}, // 06\n      {title: \"Penang\"}, // 09\n      {title: \"Perak\"}, // 07\n      {title: \"Perlis\"}, // 08\n      {title: \"Putrajaya\"}, // 17\n      {title: \"Selangor\"}, // 12\n      {title: \"Terengganu\"}, // 13\n    ],\n    zone: \"Etc/GMT-7\",\n    flag: \"MY\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MY\") {\n        switch(city.adminCode) {\n          case \"01\":\n          case \"02\":\n          case \"03\":\n          case \"04\":\n          case \"05\":\n          case \"06\":\n          case \"07\":\n          case \"08\":\n          case \"09\":\n          case \"12\":\n          case \"13\":\n          case \"14\":\n          case \"17\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Malaysia\",\n    subdiv: [\n      {title: \"Labuan\"}, // 15\n      {title: \"Sabah\"},  // 16\n      {title: \"Sarawak\"} // 11\n    ],\n    zone: \"Etc/GMT-8\",\n    flag: \"MY\",\n    cities: cityList.filter(city => {\n      if(city.country === \"MY\") {\n        switch(city.adminCode) {\n          case \"11\":\n          case \"15\":\n          case \"16\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"Philippines\",\n    zone: \"Etc/GMT-8\",\n    flag: \"PH\",\n    cities: cityList.filter(city => city.country === \"PH\")\n  },\n  {\n    country: \"Singapore\",\n    zone: \"Etc/GMT-7\",\n    flag: \"SG\",\n    cities: cityList.filter(city => city.country === \"SG\")\n  },\n  {\n    country: \"Thailand\",\n    zone: \"Etc/GMT-7\",\n    flag: \"TH\",\n    cities: cityList.filter(city => city.country === \"TH\")\n  },\n  {\n    country: \"Timor-Leste\",\n    zone: \"Etc/GMT-8\",\n    flag: \"TL\",\n    cities: cityList.filter(city => city.country === \"TL\")\n  },\n  {\n    country: \"Vietnam\",\n    zone: \"Etc/GMT-7\",\n    flag: \"VN\",\n    cities: cityList.filter(city => city.country === \"VN\")\n  }\n]","import cityList from \"./cityList\"\n\nexport default [\n  {\n    country: \"United States of America\",\n    subdiv: [\n      {title: \"Alaska\", extra: \"(west of 172.5° W)\"},\n    ],\n    zone: \"Etc/GMT+12\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AK\":\n            if(city.lon < -172.5) return true\n            if(city.lon >= 172.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"United States of America\",\n    subdiv: [\n      {title: \"Alaska\", extra: \"(172.5° W – 157.5° W)\"},\n    ],\n    zone: \"Etc/GMT+11\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AK\":\n            if(city.lon >= -172.5 && city.lon < -157.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"United States of America\",\n    subdiv: [\n      {title: \"Alaska\", extra: \"(157.5° W – 142.5° W)\"},\n    ],\n    zone: \"Etc/GMT+10\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AK\":\n            if(city.lon >= -157.5 && city.lon < -142.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"United States of America\",\n    subdiv: [\n      {title: \"Alaska\", extra: \"(east of 142.5° W)\"},\n    ],\n    zone: \"Etc/GMT+9\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AK\":\n            if(city.lon >= -142.5) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"United States of America\",\n    subdiv: [\n      {title: \"California\"},\n      {title: \"Idaho\"},\n      {title: \"Nevada\"},\n      {title: \"Oregon\"},\n      {title: \"Washington\"},\n    ],\n    zone: \"Etc/GMT+8\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"CA\":\n          case \"ID\":\n          case \"NV\":\n          case \"OR\":\n          case \"WA\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"United States of America\",\n    subdiv: [\n      {title: \"Arizona\"},\n      {title: \"Colorado\"},\n      {title: \"Kansas\"},\n      {title: \"Montana\"},\n      {title: \"Nebraska\"},\n      {title: \"New Mexico\"},\n      {title: \"North Dakota\"},\n      {title: \"Oklahoma\"},\n      {title: \"South Dakota\"},\n      {title: \"Texas\"},\n      {title: \"Utah\"},\n      {title: \"Wyoming\"},\n    ],\n    zone: \"Etc/GMT+7\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AZ\":\n          case \"CO\":\n          case \"KS\":\n          case \"MT\":\n          case \"NE\":\n          case \"NM\":\n          case \"ND\":\n          case \"OK\":\n          case \"SD\":\n          case \"TX\":\n          case \"UT\":\n          case \"WY\":\n            return true\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"United States of America\",\n    subdiv: [\n      {title: \"Alabama\"},\n      {title: \"Arkansas\"},\n      {title: \"Florida\", extra: \"(panhandle)\"},\n      {title: \"Illinois\"},\n      {title: \"Indiana\"},\n      {title: \"Iowa\"},\n      {title: \"Kentucky\"},\n      {title: \"Louisiana\"},\n      {title: \"Michigan\"},\n      {title: \"Minnesota\"},\n      {title: \"Mississippi\"},\n      {title: \"Missouri\"},\n      {title: \"Tennessee\"},\n      {title: \"Wisconsin\"},\n    ],\n    zone: \"Etc/GMT+6\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"AL\":\n          case \"AR\":\n          case \"IL\":\n          case \"IN\":\n          case \"IA\":\n          case \"KY\":\n          case \"LA\":\n          case \"MI\":\n          case \"MN\":\n          case \"MS\":\n          case \"MO\":\n          case \"TN\":\n          case \"WI\":\n            return true\n          case \"FL\":\n            if(city.lon < -84) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n  {\n    country: \"United States of America\",\n    subdiv: [\n      {title: \"Connecticut\"},\n      {title: \"Delaware\"}, \n      {title: \"District of Columbia\"}, \n      {title: \"Florida\", extra: \"(except panhandle)\"},\n      {title: \"Georgia\"},\n      {title: \"Maine\"},\n      {title: \"Maryland\"},\n      {title: \"Massachusetts\"},\n      {title: \"New Hampshire\"},\n      {title: \"New Jersey\"},\n      {title: \"New York\"},\n      {title: \"North Carolina\"},\n      {title: \"Ohio\"},\n      {title: \"Pennsylvania\"},\n      {title: \"Rhode Island\"},\n      {title: \"South Carolina\"},\n      {title: \"Vermont\"},\n      {title: \"Virginia\"},\n      {title: \"West Virginia\"},\n    ],\n    zone: \"Etc/GMT+5\",\n    flag: \"US\",\n    cities: cityList.filter(city => {\n      if(city.country === \"US\") {\n        switch(city.adminCode) {\n          case \"CT\":\n          case \"DE\":\n          case \"DC\":\n          case \"GE\":\n          case \"ME\":\n          case \"MD\":\n          case \"MA\":\n          case \"NH\":\n          case \"NJ\":\n          case \"NY\":\n          case \"NC\":\n          case \"OH\":\n          case \"PA\":\n          case \"RI\":\n          case \"SC\":\n          case \"VT\":\n          case \"VA\":\n          case \"WV\":\n            return true\n          case \"FL\":\n            if(city.lon >= -84) return true\n            return false\n          default:\n            return false\n        }\n      }\n      return false\n    })\n  },\n]\n","import Africa from \"./timezones-ideal/Africa\"\nimport Antarctica from \"./timezones-ideal/Antarctica\"\nimport Australia from \"./timezones-ideal/Australia\"\nimport Canada from \"./timezones-ideal/Canada\"\nimport Caribbean from \"./timezones-ideal/Caribbean\"\nimport CentralAmerica from \"./timezones-ideal/CentralAmerica\"\nimport CentralAsia from \"./timezones-ideal/CentralAsia\"\nimport EastAsia from \"./timezones-ideal/EastAsia\"\nimport Europe from \"./timezones-ideal/Europe\"\nimport Indonesia from \"./timezones-ideal/Indonesia\"\nimport MiddleEast from \"./timezones-ideal/MiddleEast\"\nimport Oceania from \"./timezones-ideal/Oceania\"\nimport Russia from \"./timezones-ideal/Russia\"\nimport SouthAmerica from \"./timezones-ideal/SouthAmerica\"\nimport SouthAsia from \"./timezones-ideal/SouthAsia\"\nimport SouthEastAsia from \"./timezones-ideal/SouthEastAsia\"\nimport UnitedStates from \"./timezones-ideal/UnitedStates\"\n\nexport default [\n  ...Africa, \n  ...Antarctica,\n  ...Australia,\n  ...Canada,\n  ...Caribbean,\n  ...CentralAmerica,\n  ...CentralAsia, \n  ...EastAsia, \n  ...Europe, \n  ...Indonesia,\n  ...MiddleEast,\n  ...Oceania, \n  ...Russia, \n  ...SouthAmerica,\n  ...SouthAsia,\n  ...SouthEastAsia,\n  ...UnitedStates\n]\n","import React, { useEffect, lazy } from \"react\";\nimport { useDebugState } from \"use-named-state\";\nimport { findTimeZone, getZonedTime } from \"timezone-support\"\nimport timezonesRaw from \"../components/data-ideal\"\nimport \"../styles/App.css\";\nconst Clock = lazy(() => import(\"../components/Clock\"))\n\nconst pad = (num) => (num < 10 ? `0${num}` : `${num}`)\n\nconst getOffset = (number) => {\n  const sign = (number > 0) ? \"+\" : (number < 0) ? \"-\" : \"±\"\n  const offset = Math.abs(number)\n  const hours = pad(Math.floor(offset/60))\n  const minutes = pad(offset % 60)\n  return `${sign}${hours}:${minutes}`\n}\n\nexport default function Ideal() {\n  const [allStates] = useDebugState(\"allStates\", timezonesRaw)\n  const [filtVal, setFiltVal] = useDebugState(\"filterValue\",\"\")\n  const [timezones, setTimezones] = useDebugState(\"timezones\",null)\n  const prepareZones = (filterVal) => {\n    const unsortedStates = allStates.map(tz => {\n      const {country, zone, flag, subdiv, utcOffset = undefined, cities = [] } = tz \n      if (utcOffset) {\n        const prefix = utcOffset < 0 ? \"-\" : \"+\"\n        const hours = Math.floor(Math.abs(utcOffset)/60)\n        const formattedHours = hours < 10 ? `0${hours}` : `${hours}`\n        const minutes = Math.abs(utcOffset) - (60 * hours)\n        const formattedMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`\n        const offset = `${prefix}${formattedHours}:${formattedMinutes}`\n        const numericOffset = utcOffset\n        return { country, zone: null, flag, offset, numericOffset, subdiv, cities }\n      }\n      const timezone = findTimeZone(zone)\n      const now = getZonedTime(Date.now(), timezone)\n      const numericOffset = -1 * now.zone.offset\n      const offset = getOffset(numericOffset)\n      return { country, zone, flag, offset, numericOffset, subdiv, cities }\n    })\n    const sortedStates = unsortedStates.sort((a,b) => (a.numericOffset - b.numericOffset))\n    const timezoneObject = sortedStates.reduce((acc, curr) => {\n      const obj = {...acc}\n      const { flag: code, offset, country: title, zone, numericOffset, subdiv = [], cities = [] } = curr\n      const city = \"UTC\" + offset\n      const flag = { code, title, subdiv }\n      if (obj.hasOwnProperty(city)) {\n        obj[city].flags.push(flag)\n        obj[city].cities = obj[city].cities.concat(cities)\n      } else {\n        obj[city] = { city, numericOffset, zone, flags: [flag], cities }\n      }\n      return obj\n    }, {})\n    const timezoneArray = Object.values(timezoneObject).sort((a,b) => (a.numericOffset - b.numericOffset))\n    const filterValue = filterVal != null ? filterVal : filtVal\n    const filteredStates = filterValue !== \"\"  ? timezoneArray.filter(tz => {\n      const { flags, cities } = tz\n      const filteredFlags = flags.filter(flag => {\n        const { title: country, subdiv = [] } = flag\n        const title = subdiv.length > 0 ? `${country}: ${subdiv.map(item => item.title).join(\", \")}` : country\n        if(filterValue !== \"\"){\n          if(title.toLowerCase().includes(filterValue.toLowerCase())) return true\n          return false\n        }\n        return true\n      })\n      if(filteredFlags.length > 0) return true\n      const filteredCities = cities.filter(city => city.asciiname.toLowerCase().includes(filterValue.toLowerCase()))\n      if(filteredCities.length > 0) return true\n      return false\n    }) : timezoneArray\n    setTimezones(filteredStates)\n  }\n  useEffect(() => {\n    prepareZones()\n    setInterval(1000,prepareZones)\n  }, [])\n  return (\n    <div className=\"app\">\n      <div style={{ textAlign: \"center\", marginBottom: \"24px\", marginTop: \"24px\" }}>\n        <input type=\"text\" placeholder=\"Filter countries\" onChange={(e) => {\n          setFiltVal(e.target.value)\n          prepareZones(e.target.value)\n          }} />\n      </div>\n      <div className=\"row album sk-album\"> \n      {timezones && timezones.length > 0 && timezones.map((time, index) => <Clock key={index} flags={time.flags} city={time.city} zone={time.zone} offset={time.numericOffset} cities={time.cities} />)}\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}